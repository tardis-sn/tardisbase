{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Visualizing File Changes Across Commits\n",
    "\n",
    "This notebook analyzes differences in files across multiple tardis-regression-data commits. There are two main approaches to get tardis-regression-data commits:\n",
    "\n",
    "### Method 1: Run pytest on tardis commits and generate regression commits (False commits)\n",
    "\n",
    "To fetch tardis commits, you have three options:\n",
    "\n",
    "- Run pytest on latest n tardis commits\n",
    "- Run pytest on str or list of multiple tardis commits\n",
    "\n",
    "### Method 2: Directly use tardis-regression-data repo commits\n",
    "\n",
    "To get those commits, you have two options:\n",
    "\n",
    "- Manually provide a list of multiple tardis-regression-data commits\n",
    "- Get last n tardis-regression-data commits\n",
    "\n",
    "### Note:\n",
    "By default this notebook runs pytest on latest n tardis commits and generates false regression commits to analyze difference."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:numexpr.utils:Note: detected 192 virtual cores but NumExpr set to maximum of 64, check \"NUMEXPR_MAX_THREADS\" environment variable.\n",
      "INFO:numexpr.utils:Note: NumExpr detected 192 cores but \"NUMEXPR_MAX_THREADS\" not set, so enforcing safe limit of 16.\n",
      "INFO:numexpr.utils:NumExpr defaulting to 16 threads.\n"
     ]
    }
   ],
   "source": [
    "from tardisbase.testing.regression_comparison.run_tests import run_tests\n",
    "from tardisbase.testing.regression_comparison.visualize_files import MultiCommitCompare\n",
    "from tardisbase.testing.regression_comparison.util import get_last_n_commits\n",
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Display Configuration"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Configure pandas display options for better visualization\n",
    "pd.set_option('display.max_colwidth', None)\n",
    "pd.set_option('display.width', None)\n",
    "pd.set_option('display.max_columns', None)\n",
    "pd.set_option('display.max_rows', None)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Setup Configuration"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Configuration for the analysis\n",
    "config = {\n",
    "    \"tardis_repo_path\": \"/path/to/tardis/repo\",\n",
    "    \"regression_data_repo_path\": \"/path/to/tardis/regression/data/repo\",\n",
    "    \"branch\": \"master\",\n",
    "    \"n\": 3, # Last n commits   \n",
    "    # \"commits\": [\"300e565e83112528faaa76e970057ffb1b13f743\", \"2a06fdfb60190bbd9b49ff572d78772607138660\", \"2d775dcd1c486227532f537fc41066e942000e56\"],  # Uncomment for specific commits\n",
    "    \"conda_manager\": \"conda\"\n",
    "}"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Method 1: Run pytest on tardis commits to generate false regression data commits\n",
    "\n",
    "### Case 1: Test latest N TARDIS commits\n",
    "Important Note: \n",
    "1. Comment out `commits` from config\n",
    "2. Provide the value of `n` in config\n",
    "3. To forcely recreate new enviornment each time even when enviornment already exist, do `force_recreate` as `True`\n",
    "4. Either provide entire \"tardis\" module or selective path like \"tardis/spectrum/tests/test_spectrum_solver.py\" in `test_path`\n",
    "5. Provide path to default current enviornment in `default_curr_env`\n",
    "6. If you want to use default current enviornment only without creating new enviornment each time, do `use_new_envs` as `False`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:tardisbase.testing.regression_comparison.run_tests:Original HEAD of regression data repo: 08b5aa8c3233eef19eb08440b85eab2659e6759e\n",
      "INFO:tardisbase.testing.regression_comparison.run_tests:Processing commit 1/3: 701bb18916886ecf2797b0dda4843750f69592da\n",
      "INFO:tardisbase.testing.regression_comparison.run_tests:Creating conda environment: tardis-test-701bb189\n",
      "INFO:tardisbase.testing.regression_comparison.run_tests:Checking if environment tardis-test-701bb189 exists...\n",
      "INFO:tardisbase.testing.regression_comparison.run_tests:Environment tardis-test-701bb189 exists, removing it for recreation...\n",
      "INFO:tardisbase.testing.regression_comparison.run_tests:Creating conda environment: conda create --name tardis-test-701bb189 --file /tmp/tmpps36t3m4.lock -y\n",
      "INFO:tardisbase.testing.regression_comparison.run_tests:Installing TARDIS with all extras ['viz', 'tardisbase']: conda run -n tardis-test-701bb189 pip install -e /home/riddhigangbhoj/tardis-work/tardis[viz,tardisbase]\n",
      "INFO:tardisbase.testing.regression_comparison.run_tests:\n",
      "=== Phase 1: Running 'not continuum' tests for commit 701bb18916886ecf2797b0dda4843750f69592da ===\n",
      "INFO:tardisbase.testing.regression_comparison.run_tests:Running not continuum tests: conda run -n tardis-test-701bb189 python -m pytest tardis --tardis-regression-data=/home/riddhigangbhoj/tardis-work/tardis-regression-data --generate-reference --disable-warnings -m not continuum\n",
      "WARNING:tardisbase.testing.regression_comparison.run_tests:'not continuum' tests had failures for commit 701bb18916886ecf2797b0dda4843750f69592da\n",
      "INFO:tardisbase.testing.regression_comparison.run_tests:Stdout: \u001b[1m============================= test session starts ==============================\u001b[0m\n",
      "platform linux -- Python 3.13.3, pytest-8.4.0, pluggy-1.6.0\n",
      "rootdir: /home/riddhigangbhoj/tardis-work/tardis\n",
      "configfile: pyproject.toml\n",
      "plugins: doctestplus-1.4.0, anyio-4.9.0, cov-6.1.1, metadata-3.1.1, html-4.1.1\n",
      "collected 1850 items / 2 deselected / 1848 selected\n",
      "\n",
      "tardis/energy_input/tests/test_energy_source.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[33mx\u001b[0m\u001b[33mx\u001b[0m\u001b[33m                    [  0%]\u001b[0m\n",
      "tardis/energy_input/tests/test_gamma_ray_channel.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m        [  0%]\u001b[0m\n",
      "tardis/energy_input/tests/test_gamma_ray_grid.py \u001b[33mx\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[33m                     [  1%]\u001b[0m\n",
      "tardis/energy_input/tests/test_gamma_ray_interactions.py \u001b[33mx\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m          [  1%]\u001b[0m\n",
      "tardis/energy_input/tests/test_gamma_ray_packet_source.py \u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33m      [  1%]\u001b[0m\n",
      "tardis/energy_input/tests/test_util.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[33mx\u001b[0m\u001b[33mx\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m                    [  2%]\u001b[0m\n",
      "tardis/grid/tests/test_grid.py \u001b[32m.\u001b[0m\u001b[33m                                         [  2%]\u001b[0m\n",
      "tardis/gui/tests/test_gui.py \u001b[33ms\u001b[0m\u001b[33m                                           [  2%]\u001b[0m\n",
      "tardis/io/configuration/tests/test_config_reader.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m          [  3%]\u001b[0m\n",
      "tardis/io/configuration/tests/test_config_validator.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m             [  3%]\u001b[0m\n",
      "tardis/io/configuration/tests/test_configuration_namespace.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m  [  4%]\u001b[0m\n",
      "tardis/io/logger/tests/test_logging.py \u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33m      [  5%]\u001b[0m\n",
      "tardis/io/model/readers/snec/tests/test_input_profiles.py \u001b[32m.\u001b[0m\u001b[33m              [  5%]\u001b[0m\n",
      "tardis/io/model/readers/snec/tests/test_read_snec_output.py \u001b[32m.\u001b[0m\u001b[33m            [  5%]\u001b[0m\n",
      "tardis/io/model/readers/snec/tests/test_xg_files.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m                  [  5%]\u001b[0m\n",
      "tardis/io/model/readers/tests/test_arepo_parser.py \u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33m                    [  6%]\u001b[0m\n",
      "tardis/io/model/readers/tests/test_artis_readers.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m                 [  6%]\u001b[0m\n",
      "tardis/io/model/readers/tests/test_ascii_readers.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m                  [  6%]\u001b[0m\n",
      "tardis/io/model/readers/tests/test_cmfgen_reader.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m                   [  6%]\u001b[0m\n",
      "tardis/io/model/readers/tests/test_csvy_reader.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m                   [  6%]\u001b[0m\n",
      "tardis/io/model/readers/tests/test_stella_reader.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m                   [  6%]\u001b[0m\n",
      "tardis/io/tests/test_HDFWriter.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m                       [  7%]\u001b[0m\n",
      "tardis/io/tests/test_atomic.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m                                     [  8%]\u001b[0m\n",
      "tardis/io/tests/test_decay.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m                                         [  8%]\u001b[0m\n",
      "tardis/io/tests/test_model_reader.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m                             [  8%]\u001b[0m\n",
      "tardis/model/geometry/tests/test_radial1d.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m                          [  8%]\u001b[0m\n",
      "tardis/model/tests/test_base.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m [ 10%]\n",
      "\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m                                                             [ 11%]\u001b[0m\n",
      "tardis/model/tests/test_csvy_model.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m                          [ 11%]\u001b[0m\n",
      "tardis/model/tests/test_density.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m                                    [ 12%]\u001b[0m\n",
      "tardis/opacities/tests/test_opacity_solver.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0mWWWW\u001b[33m                  [ 12%]\u001b[0m\n",
      "tardis/opacities/tests/test_opacity_state_numba.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m                 [ 12%]\u001b[0m\n",
      "tardis/opacities/tests/test_tau_sobolev.py WW\u001b[33m                            [ 12%]\u001b[0m\n",
      "tardis/plasma/equilibrium/tests/test_collisional_transitions.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m       [ 12%]\u001b[0m\n",
      "tardis/plasma/equilibrium/tests/test_level_populations.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0mW\u001b[33m           [ 13%]\u001b[0m\n",
      "tardis/plasma/equilibrium/tests/test_rate_matrix.py W\u001b[33m                    [ 13%]\u001b[0m\n",
      "tardis/plasma/tests/test_complete_plasmas.py WWWWWWWWWWWWWWWWWWWWWWWWWWW\u001b[33m [ 14%]\n",
      "\u001b[0mWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW\u001b[33m [ 18%]\n",
      "\u001b[0mWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW\u001b[33m [ 22%]\n",
      "\u001b[0mWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW\u001b[33m [ 26%]\n",
      "\u001b[0mWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW\u001b[33m [ 30%]\n",
      "\u001b[0mWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW\u001b[33m [ 34%]\n",
      "\u001b[0mWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW\u001b[33m [ 38%]\n",
      "\u001b[0mWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW\u001b[33m [ 41%]\n",
      "\u001b[0mWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW\u001b[33m [ 45%]\n",
      "\u001b[0mWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW\u001b[33m [ 49%]\n",
      "\u001b[0mWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW\u001b[33m [ 53%]\n",
      "\u001b[0mWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW\u001b[33m [ 57%]\n",
      "\u001b[0mWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW\u001b[33m                                [ 59%]\u001b[0m\n",
      "tardis/plasma/tests/test_hdf_plasma.py WWWWWWWWW\u001b[32m.\u001b[0m\u001b[32m.\u001b[0mWWWWWWWWWWW\u001b[32m.\u001b[0mWWWWWWWWWW\u001b[33m [ 61%]\n",
      "\u001b[0mWWWWWW\u001b[33m                                                                   [ 61%]\u001b[0m\n",
      "tardis/plasma/tests/test_nlte_excitation.py WWW\u001b[33m                          [ 62%]\u001b[0m\n",
      "tardis/plasma/tests/test_nlte_solver.py WW\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mX\u001b[0m\u001b[33m                           [ 62%]\u001b[0m\n",
      "tardis/plasma/tests/test_plasma_continuum.py W\u001b[33m                           [ 62%]\u001b[0m\n",
      "tardis/plasma/tests/test_plasma_vboundary.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m               [ 63%]\u001b[0m\n",
      "tardis/plasma/tests/test_tardis_model_density_config.py WWW\u001b[33m              [ 63%]\u001b[0m\n",
      "tardis/simulation/tests/test_convergence.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m                        [ 63%]\u001b[0m\n",
      "tardis/simulation/tests/test_simulation.py WWWWWWWWWW\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m                 [ 64%]\u001b[0m\n",
      "tardis/spectrum/formal_integral/tests/test_cuda_formal_integral.py \u001b[31mF\u001b[0m\u001b[31mF\u001b[0m\u001b[31mF\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 64%]\n",
      "\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31mF\u001b[0m\u001b[31m                               [ 66%]\u001b[0m\n",
      "tardis/spectrum/formal_integral/tests/test_formal_integral.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 67%]\n",
      "\u001b[0m\u001b[31m                                                                         [ 67%]\u001b[0m\n",
      "tardis/spectrum/formal_integral/tests/test_numba_formal_integral.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 67%]\n",
      "\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m                                                     [ 68%]\u001b[0m\n",
      "tardis/spectrum/tests/test_luminosity.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m                            [ 68%]\u001b[0m\n",
      "tardis/spectrum/tests/test_spectrum.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 70%]\n",
      "\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m                                                                [ 71%]\u001b[0m\n",
      "tardis/spectrum/tests/test_spectrum_solver.py WWWW\u001b[31m                       [ 71%]\u001b[0m\n",
      "tardis/tests/test_tardis_full.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0mWWW\u001b[31m                                   [ 71%]\u001b[0m\n",
      "tardis/tests/test_tardis_full_formal_integral.py WWWWWWWWWWWWWWWW\u001b[31m        [ 72%]\u001b[0m\n",
      "tardis/tests/test_util.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m  [ 74%]\u001b[0m\n",
      "tardis/transport/montecarlo/tests/test_base.py \u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m    [ 76%]\u001b[0m\n",
      "tardis/transport/montecarlo/tests/test_interaction.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m            [ 76%]\u001b[0m\n",
      "tardis/transport/montecarlo/tests/test_macro_atom.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m                [ 76%]\u001b[0m\n",
      "tardis/transport/montecarlo/tests/test_montecarlo.py \u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[31m [ 77%]\n",
      "\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[31m                                    [ 79%]\u001b[0m\n",
      "tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py \u001b[33mx\u001b[0mWW\u001b[31m       [ 79%]\u001b[0m\n",
      "tardis/transport/montecarlo/tests/test_nonhomologous.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m              [ 80%]\u001b[0m\n",
      "tardis/transport/montecarlo/tests/test_numba_interface.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[31m        [ 80%]\u001b[0m\n",
      "tardis/transport/montecarlo/tests/test_opacities.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m      [ 81%]\u001b[0m\n",
      "tardis/transport/montecarlo/tests/test_packet.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[33mX\u001b[0m\u001b[33mX\u001b[0m\u001b[33mX\u001b[0m\u001b[33mX\u001b[0m\u001b[33mX\u001b[0m\u001b[31m [ 82%]\n",
      "\u001b[0m\u001b[33mX\u001b[0m\u001b[33mX\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m                                                              [ 83%]\u001b[0m\n",
      "tardis/transport/montecarlo/tests/test_packet_source.py WWWWWWWW\u001b[31m         [ 83%]\u001b[0m\n",
      "tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py \u001b[32m.\u001b[0m\u001b[31m [ 83%]\n",
      "\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m                                                                    [ 83%]\u001b[0m\n",
      "tardis/transport/montecarlo/tests/test_rpacket_tracker.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0mW\u001b[32m.\u001b[0m\u001b[31m         [ 84%]\u001b[0m\n",
      "tardis/transport/montecarlo/tests/test_single_packet_loop.py \u001b[33mx\u001b[0m\u001b[33mx\u001b[0m\u001b[33mx\u001b[0m\u001b[31m         [ 84%]\u001b[0m\n",
      "tardis/transport/montecarlo/tests/test_tracker_utils.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m               [ 84%]\u001b[0m\n",
      "tardis/transport/montecarlo/tests/test_vpacket.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[31m                   [ 84%]\u001b[0m\n",
      "tardis/transport/montecarlo/tests/test_weighted_packet_source.py WWWW\u001b[31m    [ 84%]\u001b[0m\n",
      "tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py \u001b[32m.\u001b[0m\u001b[31m [ 84%]\n",
      "\u001b[0m\u001b[31m                                                                         [ 84%]\u001b[0m\n",
      "tardis/transport/tests/test_doppler_factor.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m         [ 85%]\u001b[0m\n",
      "tardis/visualization/tests/test_plot_util.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0mWW\u001b[31m          [ 86%]\u001b[0m\n",
      "tardis/visualization/tools/tests/test_convergence_plot.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 87%]\n",
      "\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m                                                                   [ 87%]\u001b[0m\n",
      "tardis/visualization/tools/tests/test_lineid_plotter.py \u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33mx\u001b[0m\u001b[33mx\u001b[0m\u001b[31m            [ 88%]\u001b[0m\n",
      "tardis/visualization/tools/tests/test_liv_plot.py WWWWWWWWWWWWWWWWWWWWWW\u001b[31m [ 89%]\n",
      "\u001b[0mWWWWWWWWWWWWW\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0mWWWWWWWW\u001b[31m                                            [ 91%]\u001b[0m\n",
      "tardis/visualization/tools/tests/test_rpacket_plot.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 91%]\n",
      "\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m                                                          [ 92%]\u001b[0m\n",
      "tardis/visualization/tools/tests/test_sdec_plot.py WWWWWWWWWWWWWWWWWWWWW\u001b[31m [ 93%]\n",
      "\u001b[0mWWWWWWWWWWWWWW\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[31m                                          [ 95%]\u001b[0m\n",
      "tardis/visualization/widgets/tests/test_custom_abundance.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 96%]\n",
      "\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m                                                                     [ 96%]\u001b[0m\n",
      "tardis/visualization/widgets/tests/test_line_info.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 97%]\n",
      "\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m                                                   [ 98%]\u001b[0m\n",
      "tardis/visualization/widgets/tests/test_shell_info.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 99%]\n",
      "\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m                                                                   [100%]\u001b[0m\n",
      "\n",
      "=================================== FAILURES ===================================\n",
      "\u001b[31m\u001b[1m__________ test_intensity_black_body_cuda[100000000000000.0-10000.0] ___________\u001b[0m\n",
      "\n",
      "nu = 100000000000000.0, temperature = 10000.0\n",
      "\n",
      "    \u001b[0m\u001b[37m@pytest\u001b[39;49;00m.mark.skipif(\u001b[90m\u001b[39;49;00m\n",
      "        \u001b[95mnot\u001b[39;49;00m GPUs_available, reason=\u001b[33m\"\u001b[39;49;00m\u001b[33mNo GPU is available to test CUDA function\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "    )\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[37m@pytest\u001b[39;49;00m.mark.parametrize(\u001b[90m\u001b[39;49;00m\n",
      "        [\u001b[33m\"\u001b[39;49;00m\u001b[33mnu\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m, \u001b[33m\"\u001b[39;49;00m\u001b[33mtemperature\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m],\u001b[90m\u001b[39;49;00m\n",
      "        [\u001b[90m\u001b[39;49;00m\n",
      "            (\u001b[94m1e14\u001b[39;49;00m, \u001b[94m1e4\u001b[39;49;00m),\u001b[90m\u001b[39;49;00m\n",
      "            (\u001b[94m0\u001b[39;49;00m, \u001b[94m1\u001b[39;49;00m),\u001b[90m\u001b[39;49;00m\n",
      "            (\u001b[94m1\u001b[39;49;00m, \u001b[94m1\u001b[39;49;00m),\u001b[90m\u001b[39;49;00m\n",
      "        ],\u001b[90m\u001b[39;49;00m\n",
      "    )\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[94mdef\u001b[39;49;00m\u001b[90m \u001b[39;49;00m\u001b[92mtest_intensity_black_body_cuda\u001b[39;49;00m(nu, temperature):\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[90m    \u001b[39;49;00m\u001b[33m\"\"\"\u001b[39;49;00m\n",
      "    \u001b[33m    Initializes the test of the cuda version\u001b[39;49;00m\n",
      "    \u001b[33m    against the numba implementation of the\u001b[39;49;00m\n",
      "    \u001b[33m    intensity_black_body to 15 decimals. This\u001b[39;49;00m\n",
      "    \u001b[33m    is done as both results have 15 digits of precision.\u001b[39;49;00m\n",
      "    \u001b[33m    \"\"\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "        actual = np.zeros(\u001b[94m3\u001b[39;49;00m)\u001b[90m\u001b[39;49;00m\n",
      ">       black_body_caller[\u001b[94m1\u001b[39;49;00m, \u001b[94m3\u001b[39;49;00m](nu, temperature, actual)\u001b[90m\u001b[39;49;00m\n",
      "\n",
      "\u001b[1m\u001b[31mtardis/spectrum/formal_integral/tests/test_cuda_formal_integral.py\u001b[0m:48: \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/cuda/dispatcher.py\u001b[0m:539: in __call__\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m \u001b[96mself\u001b[39;49;00m.dispatcher.call(args, \u001b[96mself\u001b[39;49;00m.griddim, \u001b[96mself\u001b[39;49;00m.blockdim,\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/cuda/dispatcher.py\u001b[0m:681: in call\n",
      "    \u001b[0mkernel = _dispatcher.Dispatcher._cuda_call(\u001b[96mself\u001b[39;49;00m, *args)\u001b[90m\u001b[39;49;00m\n",
      "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/cuda/dispatcher.py\u001b[0m:689: in _compile_for_args\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m \u001b[96mself\u001b[39;49;00m.compile(\u001b[96mtuple\u001b[39;49;00m(argtypes))\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/cuda/dispatcher.py\u001b[0m:932: in compile\n",
      "    \u001b[0mkernel = _Kernel(\u001b[96mself\u001b[39;49;00m.py_func, argtypes, **\u001b[96mself\u001b[39;49;00m.targetoptions)\u001b[90m\u001b[39;49;00m\n",
      "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/core/compiler_lock.py\u001b[0m:35: in _acquire_compile_lock\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m func(*args, **kwargs)\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/cuda/dispatcher.py\u001b[0m:83: in __init__\n",
      "    \u001b[0mcres = compile_cuda(\u001b[96mself\u001b[39;49;00m.py_func, types.void, \u001b[96mself\u001b[39;49;00m.argtypes,\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/core/compiler_lock.py\u001b[0m:35: in _acquire_compile_lock\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m func(*args, **kwargs)\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/cuda/compiler.py\u001b[0m:196: in compile_cuda\n",
      "    \u001b[0mcres = compiler.compile_extra(typingctx=typingctx,\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/core/compiler.py\u001b[0m:739: in compile_extra\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m pipeline.compile_extra(func)\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/core/compiler.py\u001b[0m:439: in compile_extra\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m \u001b[96mself\u001b[39;49;00m._compile_bytecode()\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/core/compiler.py\u001b[0m:505: in _compile_bytecode\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m \u001b[96mself\u001b[39;49;00m._compile_core()\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/core/compiler.py\u001b[0m:484: in _compile_core\n",
      "    \u001b[0m\u001b[94mraise\u001b[39;49;00m e\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/core/compiler.py\u001b[0m:473: in _compile_core\n",
      "    \u001b[0mpm.run(\u001b[96mself\u001b[39;49;00m.state)\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/core/compiler_machinery.py\u001b[0m:367: in run\n",
      "    \u001b[0m\u001b[94mraise\u001b[39;49;00m patched_exception\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/core/compiler_machinery.py\u001b[0m:356: in run\n",
      "    \u001b[0m\u001b[96mself\u001b[39;49;00m._runPass(idx, pass_inst, state)\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/core/compiler_lock.py\u001b[0m:35: in _acquire_compile_lock\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m func(*args, **kwargs)\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/core/compiler_machinery.py\u001b[0m:311: in _runPass\n",
      "    \u001b[0mmutated |= check(pss.run_pass, internal_state)\u001b[90m\u001b[39;49;00m\n",
      "               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/core/compiler_machinery.py\u001b[0m:272: in check\n",
      "    \u001b[0mmangled = func(compiler_state)\u001b[90m\u001b[39;49;00m\n",
      "              ^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/core/typed_passes.py\u001b[0m:112: in run_pass\n",
      "    \u001b[0mtypemap, return_type, calltypes, errs = type_inference_stage(\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/core/typed_passes.py\u001b[0m:93: in type_inference_stage\n",
      "    \u001b[0merrs = infer.propagate(raise_errors=raise_errors)\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      "\n",
      "self = <numba.core.typeinfer.TypeInferer object at 0x75f6a8664ef0>\n",
      "raise_errors = True\n",
      "\n",
      "    \u001b[0m\u001b[94mdef\u001b[39;49;00m\u001b[90m \u001b[39;49;00m\u001b[92mpropagate\u001b[39;49;00m(\u001b[96mself\u001b[39;49;00m, raise_errors=\u001b[94mTrue\u001b[39;49;00m):\u001b[90m\u001b[39;49;00m\n",
      "        newtoken = \u001b[96mself\u001b[39;49;00m.get_state_token()\u001b[90m\u001b[39;49;00m\n",
      "        oldtoken = \u001b[94mNone\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "        \u001b[90m# Since the number of types are finite, the typesets will eventually\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "        \u001b[90m# stop growing.\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[90m\u001b[39;49;00m\n",
      "        \u001b[94mwhile\u001b[39;49;00m newtoken != oldtoken:\u001b[90m\u001b[39;49;00m\n",
      "            \u001b[96mself\u001b[39;49;00m.debug.propagate_started()\u001b[90m\u001b[39;49;00m\n",
      "            oldtoken = newtoken\u001b[90m\u001b[39;49;00m\n",
      "            \u001b[90m# Errors can appear when the type set is incomplete; only\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "            \u001b[90m# raise them when there is no progress anymore.\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "            errors = \u001b[96mself\u001b[39;49;00m.constraints.propagate(\u001b[96mself\u001b[39;49;00m)\u001b[90m\u001b[39;49;00m\n",
      "            newtoken = \u001b[96mself\u001b[39;49;00m.get_state_token()\u001b[90m\u001b[39;49;00m\n",
      "            \u001b[96mself\u001b[39;49;00m.debug.propagate_finished()\u001b[90m\u001b[39;49;00m\n",
      "        \u001b[94mif\u001b[39;49;00m errors:\u001b[90m\u001b[39;49;00m\n",
      "            \u001b[94mif\u001b[39;49;00m raise_errors:\u001b[90m\u001b[39;49;00m\n",
      "                force_lit_args = [e \u001b[94mfor\u001b[39;49;00m e \u001b[95min\u001b[39;49;00m errors\u001b[90m\u001b[39;49;00m\n",
      "                                  \u001b[94mif\u001b[39;49;00m \u001b[96misinstance\u001b[39;49;00m(e, ForceLiteralArg)]\u001b[90m\u001b[39;49;00m\n",
      "                \u001b[94mif\u001b[39;49;00m \u001b[95mnot\u001b[39;49;00m force_lit_args:\u001b[90m\u001b[39;49;00m\n",
      ">                   \u001b[94mraise\u001b[39;49;00m errors[\u001b[94m0\u001b[39;49;00m]\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31mE                   numba.core.errors.TypingError: Failed in cuda mode pipeline (step: nopython frontend)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m\u001b[1m\u001b[1mFailed in cuda mode pipeline (step: nopython frontend)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m\u001b[1m\u001b[1mUse of unsupported NumPy function 'numpy.exp' or unsupported use of the function.\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   File \"tardis/spectrum/formal_integral/base.py\", line 104:\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1mdef intensity_black_body(nu, temperature):\u001b[0m\n",
      "\u001b[1m\u001b[31mE                       <source elided>\u001b[0m\n",
      "\u001b[1m\u001b[31mE                       coefficient = 2 * H_CGS * C_INV * C_INV\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m    return coefficient * nu * nu * nu / (np.exp(H_CGS * nu * beta_rad) - 1)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m    \u001b[1m^\u001b[0m\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[1mDuring: typing of get attribute at /home/riddhigangbhoj/tardis-work/tardis/tardis/spectrum/formal_integral/base.py (104)\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   File \"tardis/spectrum/formal_integral/base.py\", line 104:\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1mdef intensity_black_body(nu, temperature):\u001b[0m\n",
      "\u001b[1m\u001b[31mE                       <source elided>\u001b[0m\n",
      "\u001b[1m\u001b[31mE                       coefficient = 2 * H_CGS * C_INV * C_INV\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m    return coefficient * nu * nu * nu / (np.exp(H_CGS * nu * beta_rad) - 1)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m    \u001b[1m^\u001b[0m\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[1mDuring: Pass nopython_type_inference\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[1mDuring: resolving callee type: type(CUDADispatcher(<function intensity_black_body at 0x75f6e1b9e160>))\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[1mDuring: typing of call at /home/riddhigangbhoj/tardis-work/tardis/tardis/spectrum/formal_integral/tests/test_cuda_formal_integral.py (22)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   File \"tardis/spectrum/formal_integral/tests/test_cuda_formal_integral.py\", line 22:\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1mdef black_body_caller(nu, temperature, actual):\u001b[0m\n",
      "\u001b[1m\u001b[31mE                       <source elided>\u001b[0m\n",
      "\u001b[1m\u001b[31mE                       x = cuda.grid(1)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m    actual[x] = formal_integral_cuda.intensity_black_body_cuda(nu, temperature)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m    \u001b[1m^\u001b[0m\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[1mDuring: Pass nopython_type_inference\u001b[0m\u001b[0m\n",
      "\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/core/typeinfer.py\u001b[0m:1074: TypingError\n",
      "\u001b[31m\u001b[1m_____________________ test_intensity_black_body_cuda[0-1] ______________________\u001b[0m\n",
      "\n",
      "nu = 0, temperature = 1\n",
      "\n",
      "    \u001b[0m\u001b[37m@pytest\u001b[39;49;00m.mark.skipif(\u001b[90m\u001b[39;49;00m\n",
      "        \u001b[95mnot\u001b[39;49;00m GPUs_available, reason=\u001b[33m\"\u001b[39;49;00m\u001b[33mNo GPU is available to test CUDA function\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "    )\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[37m@pytest\u001b[39;49;00m.mark.parametrize(\u001b[90m\u001b[39;49;00m\n",
      "        [\u001b[33m\"\u001b[39;49;00m\u001b[33mnu\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m, \u001b[33m\"\u001b[39;49;00m\u001b[33mtemperature\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m],\u001b[90m\u001b[39;49;00m\n",
      "        [\u001b[90m\u001b[39;49;00m\n",
      "            (\u001b[94m1e14\u001b[39;49;00m, \u001b[94m1e4\u001b[39;49;00m),\u001b[90m\u001b[39;49;00m\n",
      "            (\u001b[94m0\u001b[39;49;00m, \u001b[94m1\u001b[39;49;00m),\u001b[90m\u001b[39;49;00m\n",
      "            (\u001b[94m1\u001b[39;49;00m, \u001b[94m1\u001b[39;49;00m),\u001b[90m\u001b[39;49;00m\n",
      "        ],\u001b[90m\u001b[39;49;00m\n",
      "    )\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[94mdef\u001b[39;49;00m\u001b[90m \u001b[39;49;00m\u001b[92mtest_intensity_black_body_cuda\u001b[39;49;00m(nu, temperature):\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[90m    \u001b[39;49;00m\u001b[33m\"\"\"\u001b[39;49;00m\n",
      "    \u001b[33m    Initializes the test of the cuda version\u001b[39;49;00m\n",
      "    \u001b[33m    against the numba implementation of the\u001b[39;49;00m\n",
      "    \u001b[33m    intensity_black_body to 15 decimals. This\u001b[39;49;00m\n",
      "    \u001b[33m    is done as both results have 15 digits of precision.\u001b[39;49;00m\n",
      "    \u001b[33m    \"\"\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "        actual = np.zeros(\u001b[94m3\u001b[39;49;00m)\u001b[90m\u001b[39;49;00m\n",
      ">       black_body_caller[\u001b[94m1\u001b[39;49;00m, \u001b[94m3\u001b[39;49;00m](nu, temperature, actual)\u001b[90m\u001b[39;49;00m\n",
      "\n",
      "\u001b[1m\u001b[31mtardis/spectrum/formal_integral/tests/test_cuda_formal_integral.py\u001b[0m:48: \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/cuda/dispatcher.py\u001b[0m:539: in __call__\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m \u001b[96mself\u001b[39;49;00m.dispatcher.call(args, \u001b[96mself\u001b[39;49;00m.griddim, \u001b[96mself\u001b[39;49;00m.blockdim,\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/cuda/dispatcher.py\u001b[0m:681: in call\n",
      "    \u001b[0mkernel = _dispatcher.Dispatcher._cuda_call(\u001b[96mself\u001b[39;49;00m, *args)\u001b[90m\u001b[39;49;00m\n",
      "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/cuda/dispatcher.py\u001b[0m:689: in _compile_for_args\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m \u001b[96mself\u001b[39;49;00m.compile(\u001b[96mtuple\u001b[39;49;00m(argtypes))\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/cuda/dispatcher.py\u001b[0m:932: in compile\n",
      "    \u001b[0mkernel = _Kernel(\u001b[96mself\u001b[39;49;00m.py_func, argtypes, **\u001b[96mself\u001b[39;49;00m.targetoptions)\u001b[90m\u001b[39;49;00m\n",
      "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/core/compiler_lock.py\u001b[0m:35: in _acquire_compile_lock\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m func(*args, **kwargs)\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/cuda/dispatcher.py\u001b[0m:83: in __init__\n",
      "    \u001b[0mcres = compile_cuda(\u001b[96mself\u001b[39;49;00m.py_func, types.void, \u001b[96mself\u001b[39;49;00m.argtypes,\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/core/compiler_lock.py\u001b[0m:35: in _acquire_compile_lock\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m func(*args, **kwargs)\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/cuda/compiler.py\u001b[0m:196: in compile_cuda\n",
      "    \u001b[0mcres = compiler.compile_extra(typingctx=typingctx,\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/core/compiler.py\u001b[0m:739: in compile_extra\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m pipeline.compile_extra(func)\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/core/compiler.py\u001b[0m:439: in compile_extra\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m \u001b[96mself\u001b[39;49;00m._compile_bytecode()\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/core/compiler.py\u001b[0m:505: in _compile_bytecode\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m \u001b[96mself\u001b[39;49;00m._compile_core()\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/core/compiler.py\u001b[0m:484: in _compile_core\n",
      "    \u001b[0m\u001b[94mraise\u001b[39;49;00m e\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/core/compiler.py\u001b[0m:473: in _compile_core\n",
      "    \u001b[0mpm.run(\u001b[96mself\u001b[39;49;00m.state)\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/core/compiler_machinery.py\u001b[0m:367: in run\n",
      "    \u001b[0m\u001b[94mraise\u001b[39;49;00m patched_exception\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/core/compiler_machinery.py\u001b[0m:356: in run\n",
      "    \u001b[0m\u001b[96mself\u001b[39;49;00m._runPass(idx, pass_inst, state)\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/core/compiler_lock.py\u001b[0m:35: in _acquire_compile_lock\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m func(*args, **kwargs)\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/core/compiler_machinery.py\u001b[0m:311: in _runPass\n",
      "    \u001b[0mmutated |= check(pss.run_pass, internal_state)\u001b[90m\u001b[39;49;00m\n",
      "               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/core/compiler_machinery.py\u001b[0m:272: in check\n",
      "    \u001b[0mmangled = func(compiler_state)\u001b[90m\u001b[39;49;00m\n",
      "              ^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/core/typed_passes.py\u001b[0m:112: in run_pass\n",
      "    \u001b[0mtypemap, return_type, calltypes, errs = type_inference_stage(\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/core/typed_passes.py\u001b[0m:93: in type_inference_stage\n",
      "    \u001b[0merrs = infer.propagate(raise_errors=raise_errors)\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      "\n",
      "self = <numba.core.typeinfer.TypeInferer object at 0x75f6a4ab0940>\n",
      "raise_errors = True\n",
      "\n",
      "    \u001b[0m\u001b[94mdef\u001b[39;49;00m\u001b[90m \u001b[39;49;00m\u001b[92mpropagate\u001b[39;49;00m(\u001b[96mself\u001b[39;49;00m, raise_errors=\u001b[94mTrue\u001b[39;49;00m):\u001b[90m\u001b[39;49;00m\n",
      "        newtoken = \u001b[96mself\u001b[39;49;00m.get_state_token()\u001b[90m\u001b[39;49;00m\n",
      "        oldtoken = \u001b[94mNone\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "        \u001b[90m# Since the number of types are finite, the typesets will eventually\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "        \u001b[90m# stop growing.\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[90m\u001b[39;49;00m\n",
      "        \u001b[94mwhile\u001b[39;49;00m newtoken != oldtoken:\u001b[90m\u001b[39;49;00m\n",
      "            \u001b[96mself\u001b[39;49;00m.debug.propagate_started()\u001b[90m\u001b[39;49;00m\n",
      "            oldtoken = newtoken\u001b[90m\u001b[39;49;00m\n",
      "            \u001b[90m# Errors can appear when the type set is incomplete; only\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "            \u001b[90m# raise them when there is no progress anymore.\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "            errors = \u001b[96mself\u001b[39;49;00m.constraints.propagate(\u001b[96mself\u001b[39;49;00m)\u001b[90m\u001b[39;49;00m\n",
      "            newtoken = \u001b[96mself\u001b[39;49;00m.get_state_token()\u001b[90m\u001b[39;49;00m\n",
      "            \u001b[96mself\u001b[39;49;00m.debug.propagate_finished()\u001b[90m\u001b[39;49;00m\n",
      "        \u001b[94mif\u001b[39;49;00m errors:\u001b[90m\u001b[39;49;00m\n",
      "            \u001b[94mif\u001b[39;49;00m raise_errors:\u001b[90m\u001b[39;49;00m\n",
      "                force_lit_args = [e \u001b[94mfor\u001b[39;49;00m e \u001b[95min\u001b[39;49;00m errors\u001b[90m\u001b[39;49;00m\n",
      "                                  \u001b[94mif\u001b[39;49;00m \u001b[96misinstance\u001b[39;49;00m(e, ForceLiteralArg)]\u001b[90m\u001b[39;49;00m\n",
      "                \u001b[94mif\u001b[39;49;00m \u001b[95mnot\u001b[39;49;00m force_lit_args:\u001b[90m\u001b[39;49;00m\n",
      ">                   \u001b[94mraise\u001b[39;49;00m errors[\u001b[94m0\u001b[39;49;00m]\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31mE                   numba.core.errors.TypingError: Failed in cuda mode pipeline (step: nopython frontend)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m\u001b[1m\u001b[1mFailed in cuda mode pipeline (step: nopython frontend)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m\u001b[1m\u001b[1mUse of unsupported NumPy function 'numpy.exp' or unsupported use of the function.\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   File \"tardis/spectrum/formal_integral/base.py\", line 104:\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1mdef intensity_black_body(nu, temperature):\u001b[0m\n",
      "\u001b[1m\u001b[31mE                       <source elided>\u001b[0m\n",
      "\u001b[1m\u001b[31mE                       coefficient = 2 * H_CGS * C_INV * C_INV\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m    return coefficient * nu * nu * nu / (np.exp(H_CGS * nu * beta_rad) - 1)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m    \u001b[1m^\u001b[0m\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[1mDuring: typing of get attribute at /home/riddhigangbhoj/tardis-work/tardis/tardis/spectrum/formal_integral/base.py (104)\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   File \"tardis/spectrum/formal_integral/base.py\", line 104:\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1mdef intensity_black_body(nu, temperature):\u001b[0m\n",
      "\u001b[1m\u001b[31mE                       <source elided>\u001b[0m\n",
      "\u001b[1m\u001b[31mE                       coefficient = 2 * H_CGS * C_INV * C_INV\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m    return coefficient * nu * nu * nu / (np.exp(H_CGS * nu * beta_rad) - 1)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m    \u001b[1m^\u001b[0m\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[1mDuring: Pass nopython_type_inference\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[1mDuring: resolving callee type: type(CUDADispatcher(<function intensity_black_body at 0x75f6e1b9e160>))\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[1mDuring: typing of call at /home/riddhigangbhoj/tardis-work/tardis/tardis/spectrum/formal_integral/tests/test_cuda_formal_integral.py (22)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   File \"tardis/spectrum/formal_integral/tests/test_cuda_formal_integral.py\", line 22:\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1mdef black_body_caller(nu, temperature, actual):\u001b[0m\n",
      "\u001b[1m\u001b[31mE                       <source elided>\u001b[0m\n",
      "\u001b[1m\u001b[31mE                       x = cuda.grid(1)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m    actual[x] = formal_integral_cuda.intensity_black_body_cuda(nu, temperature)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m    \u001b[1m^\u001b[0m\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[1mDuring: Pass nopython_type_inference\u001b[0m\u001b[0m\n",
      "\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/core/typeinfer.py\u001b[0m:1074: TypingError\n",
      "\u001b[31m\u001b[1m_____________________ test_intensity_black_body_cuda[1-1] ______________________\u001b[0m\n",
      "\n",
      "nu = 1, temperature = 1\n",
      "\n",
      "    \u001b[0m\u001b[37m@pytest\u001b[39;49;00m.mark.skipif(\u001b[90m\u001b[39;49;00m\n",
      "        \u001b[95mnot\u001b[39;49;00m GPUs_available, reason=\u001b[33m\"\u001b[39;49;00m\u001b[33mNo GPU is available to test CUDA function\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "    )\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[37m@pytest\u001b[39;49;00m.mark.parametrize(\u001b[90m\u001b[39;49;00m\n",
      "        [\u001b[33m\"\u001b[39;49;00m\u001b[33mnu\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m, \u001b[33m\"\u001b[39;49;00m\u001b[33mtemperature\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m],\u001b[90m\u001b[39;49;00m\n",
      "        [\u001b[90m\u001b[39;49;00m\n",
      "            (\u001b[94m1e14\u001b[39;49;00m, \u001b[94m1e4\u001b[39;49;00m),\u001b[90m\u001b[39;49;00m\n",
      "            (\u001b[94m0\u001b[39;49;00m, \u001b[94m1\u001b[39;49;00m),\u001b[90m\u001b[39;49;00m\n",
      "            (\u001b[94m1\u001b[39;49;00m, \u001b[94m1\u001b[39;49;00m),\u001b[90m\u001b[39;49;00m\n",
      "        ],\u001b[90m\u001b[39;49;00m\n",
      "    )\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[94mdef\u001b[39;49;00m\u001b[90m \u001b[39;49;00m\u001b[92mtest_intensity_black_body_cuda\u001b[39;49;00m(nu, temperature):\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[90m    \u001b[39;49;00m\u001b[33m\"\"\"\u001b[39;49;00m\n",
      "    \u001b[33m    Initializes the test of the cuda version\u001b[39;49;00m\n",
      "    \u001b[33m    against the numba implementation of the\u001b[39;49;00m\n",
      "    \u001b[33m    intensity_black_body to 15 decimals. This\u001b[39;49;00m\n",
      "    \u001b[33m    is done as both results have 15 digits of precision.\u001b[39;49;00m\n",
      "    \u001b[33m    \"\"\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "        actual = np.zeros(\u001b[94m3\u001b[39;49;00m)\u001b[90m\u001b[39;49;00m\n",
      ">       black_body_caller[\u001b[94m1\u001b[39;49;00m, \u001b[94m3\u001b[39;49;00m](nu, temperature, actual)\u001b[90m\u001b[39;49;00m\n",
      "\n",
      "\u001b[1m\u001b[31mtardis/spectrum/formal_integral/tests/test_cuda_formal_integral.py\u001b[0m:48: \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/cuda/dispatcher.py\u001b[0m:539: in __call__\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m \u001b[96mself\u001b[39;49;00m.dispatcher.call(args, \u001b[96mself\u001b[39;49;00m.griddim, \u001b[96mself\u001b[39;49;00m.blockdim,\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/cuda/dispatcher.py\u001b[0m:681: in call\n",
      "    \u001b[0mkernel = _dispatcher.Dispatcher._cuda_call(\u001b[96mself\u001b[39;49;00m, *args)\u001b[90m\u001b[39;49;00m\n",
      "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/cuda/dispatcher.py\u001b[0m:689: in _compile_for_args\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m \u001b[96mself\u001b[39;49;00m.compile(\u001b[96mtuple\u001b[39;49;00m(argtypes))\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/cuda/dispatcher.py\u001b[0m:932: in compile\n",
      "    \u001b[0mkernel = _Kernel(\u001b[96mself\u001b[39;49;00m.py_func, argtypes, **\u001b[96mself\u001b[39;49;00m.targetoptions)\u001b[90m\u001b[39;49;00m\n",
      "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/core/compiler_lock.py\u001b[0m:35: in _acquire_compile_lock\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m func(*args, **kwargs)\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/cuda/dispatcher.py\u001b[0m:83: in __init__\n",
      "    \u001b[0mcres = compile_cuda(\u001b[96mself\u001b[39;49;00m.py_func, types.void, \u001b[96mself\u001b[39;49;00m.argtypes,\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/core/compiler_lock.py\u001b[0m:35: in _acquire_compile_lock\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m func(*args, **kwargs)\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/cuda/compiler.py\u001b[0m:196: in compile_cuda\n",
      "    \u001b[0mcres = compiler.compile_extra(typingctx=typingctx,\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/core/compiler.py\u001b[0m:739: in compile_extra\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m pipeline.compile_extra(func)\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/core/compiler.py\u001b[0m:439: in compile_extra\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m \u001b[96mself\u001b[39;49;00m._compile_bytecode()\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/core/compiler.py\u001b[0m:505: in _compile_bytecode\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m \u001b[96mself\u001b[39;49;00m._compile_core()\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/core/compiler.py\u001b[0m:484: in _compile_core\n",
      "    \u001b[0m\u001b[94mraise\u001b[39;49;00m e\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/core/compiler.py\u001b[0m:473: in _compile_core\n",
      "    \u001b[0mpm.run(\u001b[96mself\u001b[39;49;00m.state)\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/core/compiler_machinery.py\u001b[0m:367: in run\n",
      "    \u001b[0m\u001b[94mraise\u001b[39;49;00m patched_exception\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/core/compiler_machinery.py\u001b[0m:356: in run\n",
      "    \u001b[0m\u001b[96mself\u001b[39;49;00m._runPass(idx, pass_inst, state)\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/core/compiler_lock.py\u001b[0m:35: in _acquire_compile_lock\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m func(*args, **kwargs)\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/core/compiler_machinery.py\u001b[0m:311: in _runPass\n",
      "    \u001b[0mmutated |= check(pss.run_pass, internal_state)\u001b[90m\u001b[39;49;00m\n",
      "               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/core/compiler_machinery.py\u001b[0m:272: in check\n",
      "    \u001b[0mmangled = func(compiler_state)\u001b[90m\u001b[39;49;00m\n",
      "              ^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/core/typed_passes.py\u001b[0m:112: in run_pass\n",
      "    \u001b[0mtypemap, return_type, calltypes, errs = type_inference_stage(\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/core/typed_passes.py\u001b[0m:93: in type_inference_stage\n",
      "    \u001b[0merrs = infer.propagate(raise_errors=raise_errors)\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      "\n",
      "self = <numba.core.typeinfer.TypeInferer object at 0x75f6a8664bb0>\n",
      "raise_errors = True\n",
      "\n",
      "    \u001b[0m\u001b[94mdef\u001b[39;49;00m\u001b[90m \u001b[39;49;00m\u001b[92mpropagate\u001b[39;49;00m(\u001b[96mself\u001b[39;49;00m, raise_errors=\u001b[94mTrue\u001b[39;49;00m):\u001b[90m\u001b[39;49;00m\n",
      "        newtoken = \u001b[96mself\u001b[39;49;00m.get_state_token()\u001b[90m\u001b[39;49;00m\n",
      "        oldtoken = \u001b[94mNone\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "        \u001b[90m# Since the number of types are finite, the typesets will eventually\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "        \u001b[90m# stop growing.\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[90m\u001b[39;49;00m\n",
      "        \u001b[94mwhile\u001b[39;49;00m newtoken != oldtoken:\u001b[90m\u001b[39;49;00m\n",
      "            \u001b[96mself\u001b[39;49;00m.debug.propagate_started()\u001b[90m\u001b[39;49;00m\n",
      "            oldtoken = newtoken\u001b[90m\u001b[39;49;00m\n",
      "            \u001b[90m# Errors can appear when the type set is incomplete; only\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "            \u001b[90m# raise them when there is no progress anymore.\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "            errors = \u001b[96mself\u001b[39;49;00m.constraints.propagate(\u001b[96mself\u001b[39;49;00m)\u001b[90m\u001b[39;49;00m\n",
      "            newtoken = \u001b[96mself\u001b[39;49;00m.get_state_token()\u001b[90m\u001b[39;49;00m\n",
      "            \u001b[96mself\u001b[39;49;00m.debug.propagate_finished()\u001b[90m\u001b[39;49;00m\n",
      "        \u001b[94mif\u001b[39;49;00m errors:\u001b[90m\u001b[39;49;00m\n",
      "            \u001b[94mif\u001b[39;49;00m raise_errors:\u001b[90m\u001b[39;49;00m\n",
      "                force_lit_args = [e \u001b[94mfor\u001b[39;49;00m e \u001b[95min\u001b[39;49;00m errors\u001b[90m\u001b[39;49;00m\n",
      "                                  \u001b[94mif\u001b[39;49;00m \u001b[96misinstance\u001b[39;49;00m(e, ForceLiteralArg)]\u001b[90m\u001b[39;49;00m\n",
      "                \u001b[94mif\u001b[39;49;00m \u001b[95mnot\u001b[39;49;00m force_lit_args:\u001b[90m\u001b[39;49;00m\n",
      ">                   \u001b[94mraise\u001b[39;49;00m errors[\u001b[94m0\u001b[39;49;00m]\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31mE                   numba.core.errors.TypingError: Failed in cuda mode pipeline (step: nopython frontend)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m\u001b[1m\u001b[1mFailed in cuda mode pipeline (step: nopython frontend)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m\u001b[1m\u001b[1mUse of unsupported NumPy function 'numpy.exp' or unsupported use of the function.\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   File \"tardis/spectrum/formal_integral/base.py\", line 104:\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1mdef intensity_black_body(nu, temperature):\u001b[0m\n",
      "\u001b[1m\u001b[31mE                       <source elided>\u001b[0m\n",
      "\u001b[1m\u001b[31mE                       coefficient = 2 * H_CGS * C_INV * C_INV\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m    return coefficient * nu * nu * nu / (np.exp(H_CGS * nu * beta_rad) - 1)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m    \u001b[1m^\u001b[0m\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[1mDuring: typing of get attribute at /home/riddhigangbhoj/tardis-work/tardis/tardis/spectrum/formal_integral/base.py (104)\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   File \"tardis/spectrum/formal_integral/base.py\", line 104:\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1mdef intensity_black_body(nu, temperature):\u001b[0m\n",
      "\u001b[1m\u001b[31mE                       <source elided>\u001b[0m\n",
      "\u001b[1m\u001b[31mE                       coefficient = 2 * H_CGS * C_INV * C_INV\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m    return coefficient * nu * nu * nu / (np.exp(H_CGS * nu * beta_rad) - 1)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m    \u001b[1m^\u001b[0m\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[1mDuring: Pass nopython_type_inference\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[1mDuring: resolving callee type: type(CUDADispatcher(<function intensity_black_body at 0x75f6e1b9e160>))\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[1mDuring: typing of call at /home/riddhigangbhoj/tardis-work/tardis/tardis/spectrum/formal_integral/tests/test_cuda_formal_integral.py (22)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   File \"tardis/spectrum/formal_integral/tests/test_cuda_formal_integral.py\", line 22:\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1mdef black_body_caller(nu, temperature, actual):\u001b[0m\n",
      "\u001b[1m\u001b[31mE                       <source elided>\u001b[0m\n",
      "\u001b[1m\u001b[31mE                       x = cuda.grid(1)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m    actual[x] = formal_integral_cuda.intensity_black_body_cuda(nu, temperature)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m    \u001b[1m^\u001b[0m\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[1mDuring: Pass nopython_type_inference\u001b[0m\u001b[0m\n",
      "\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-701bb189/lib/python3.13/site-packages/numba/core/typeinfer.py\u001b[0m:1074: TypingError\n",
      "\u001b[31m\u001b[1m_____________________ test_full_formal_integral[200000-5] ______________________\u001b[0m\n",
      "\n",
      "no_of_packets = 200000, iterations = 5\n",
      "config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}\n",
      "simulation_verysimple = <tardis.simulation.base.Simulation object at 0x75f6b5a2af90>\n",
      "\n",
      "    \u001b[0m\u001b[37m@pytest\u001b[39;49;00m.mark.skipif(\u001b[90m\u001b[39;49;00m\n",
      "        \u001b[95mnot\u001b[39;49;00m GPUs_available, reason=\u001b[33m\"\u001b[39;49;00m\u001b[33mNo GPU is available to test CUDA function\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "    )\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[37m@pytest\u001b[39;49;00m.mark.parametrize([\u001b[33m\"\u001b[39;49;00m\u001b[33mno_of_packets\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m, \u001b[33m\"\u001b[39;49;00m\u001b[33miterations\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m], [(\u001b[94m200000\u001b[39;49;00m, \u001b[94m5\u001b[39;49;00m)])\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[94mdef\u001b[39;49;00m\u001b[90m \u001b[39;49;00m\u001b[92mtest_full_formal_integral\u001b[39;49;00m(\u001b[90m\u001b[39;49;00m\n",
      "        no_of_packets, iterations, config_verysimple, simulation_verysimple\u001b[90m\u001b[39;49;00m\n",
      "    ):\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[90m    \u001b[39;49;00m\u001b[33m\"\"\"\u001b[39;49;00m\n",
      "    \u001b[33m    This function initializes both the cuda and numba formal_integrator,\u001b[39;49;00m\n",
      "    \u001b[33m    and the runs them and compares results to the 15th decimal place.\u001b[39;49;00m\n",
      "    \u001b[33m    This is done as both results have 15 digits of precision.\u001b[39;49;00m\n",
      "    \u001b[33m    \"\"\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "        sim = simulation_verysimple\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[90m\u001b[39;49;00m\n",
      "        formal_integrator_numba = FormalIntegrator(\u001b[90m\u001b[39;49;00m\n",
      "            sim.simulation_state, sim.plasma, sim.transport\u001b[90m\u001b[39;49;00m\n",
      "        )\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[90m\u001b[39;49;00m\n",
      "        formal_integrator_cuda = FormalIntegrator(\u001b[90m\u001b[39;49;00m\n",
      "            sim.simulation_state, sim.plasma, sim.transport\u001b[90m\u001b[39;49;00m\n",
      "        )\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[90m\u001b[39;49;00m\n",
      "        \u001b[90m# The function calculate_spectrum sets this property, but in order to test the CUDA.\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "        \u001b[90m# version it is done manually, as well as to speed up the test.\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "        formal_integrator_numba.interpolate_shells = \u001b[96mmax\u001b[39;49;00m(\u001b[90m\u001b[39;49;00m\n",
      "            \u001b[94m2\u001b[39;49;00m * formal_integrator_numba.simulation_state.no_of_shells, \u001b[94m80\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "        )\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[90m\u001b[39;49;00m\n",
      "        formal_integrator_cuda.interpolate_shells = \u001b[96mmax\u001b[39;49;00m(\u001b[90m\u001b[39;49;00m\n",
      "            \u001b[94m2\u001b[39;49;00m * formal_integrator_cuda.simulation_state.no_of_shells, \u001b[94m80\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "        )\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[90m\u001b[39;49;00m\n",
      ">       res_numba = make_source_function(\u001b[90m\u001b[39;49;00m\n",
      "            formal_integrator_numba.simulation_state,\u001b[90m\u001b[39;49;00m\n",
      "            formal_integrator_numba.plasma,\u001b[90m\u001b[39;49;00m\n",
      "            formal_integrator_numba.transport,\u001b[90m\u001b[39;49;00m\n",
      "            formal_integrator_numba.interpolate_shells\u001b[90m\u001b[39;49;00m\n",
      "        )\u001b[90m\u001b[39;49;00m\n",
      "\n",
      "\u001b[1m\u001b[31mtardis/spectrum/formal_integral/tests/test_cuda_formal_integral.py\u001b[0m:329: \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      "\n",
      "simulation_state = <tardis.model.base.SimulationState object at 0x75f6b9f75370>\n",
      "opacity_state = <tardis.plasma.base.BasePlasma object at 0x75f6b5a28d70>\n",
      "transport = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x75f6b5a2a510>\n",
      "plasma = 80, interpolate_shells = 0\n",
      "\n",
      "    \u001b[0m\u001b[94mdef\u001b[39;49;00m\u001b[90m \u001b[39;49;00m\u001b[92mmake_source_function\u001b[39;49;00m(simulation_state, opacity_state, transport, plasma, interpolate_shells=\u001b[94m0\u001b[39;49;00m):\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[90m    \u001b[39;49;00m\u001b[33m\"\"\"\u001b[39;49;00m\n",
      "    \u001b[33m    Calculates the source function using the line absorption rate estimator `Edotlu_estimator`\u001b[39;49;00m\n",
      "    \u001b[33m\u001b[39;49;00m\n",
      "    \u001b[33m    Formally it calculates the expression ( 1 - exp(-tau_ul) ) S_ul but this product is what we need later,\u001b[39;49;00m\n",
      "    \u001b[33m    so there is no need to factor out the source function explicitly.\u001b[39;49;00m\n",
      "    \u001b[33m    Parameters\u001b[39;49;00m\n",
      "    \u001b[33m    ----------\u001b[39;49;00m\n",
      "    \u001b[33m    simulation_state : tardis.model.SimulationState\u001b[39;49;00m\n",
      "    \u001b[33m    opacity_state : tardis.opacity.OpacityStateNumba\u001b[39;49;00m\n",
      "    \u001b[33m    transport : tardis.transport.montecarlo.MonteCarloTransportSolver\u001b[39;49;00m\n",
      "    \u001b[33m    plasma : tardis.plasma.BasePlasma\u001b[39;49;00m\n",
      "    \u001b[33m    interpolate_shells : int\u001b[39;49;00m\n",
      "    \u001b[33m        Number of shells to interpolate to. If set to 0, no interpolation is performed.\u001b[39;49;00m\n",
      "    \u001b[33m\u001b[39;49;00m\n",
      "    \u001b[33m    Returns\u001b[39;49;00m\n",
      "    \u001b[33m    -------\u001b[39;49;00m\n",
      "    \u001b[33m    Numpy array containing ( 1 - exp(-tau_ul) ) S_ul ordered by wavelength of the transition u -> l\u001b[39;49;00m\n",
      "    \u001b[33m    \"\"\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[90m\u001b[39;49;00m\n",
      "        montecarlo_transport_state = transport.transport_state\u001b[90m\u001b[39;49;00m\n",
      ">       atomic_data = plasma.atomic_data\u001b[90m\u001b[39;49;00m\n",
      "                      ^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31mE       AttributeError: 'int' object has no attribute 'atomic_data'\u001b[0m\n",
      "\n",
      "\u001b[1m\u001b[31mtardis/spectrum/formal_integral/base.py\u001b[0m:128: AttributeError\n",
      "\u001b[36m\u001b[1m=========================== short test summary info ============================\u001b[0m\n",
      "\u001b[31mFAILED\u001b[0m tardis/spectrum/formal_integral/tests/test_cuda_formal_integral.py::\u001b[1mtest_intensity_black_body_cuda[100000000000000.0-10000.0]\u001b[0m - numba.core.errors.TypingError: Failed in cuda mode pipeline (step: nopython...\n",
      "\u001b[31mFAILED\u001b[0m tardis/spectrum/formal_integral/tests/test_cuda_formal_integral.py::\u001b[1mtest_intensity_black_body_cuda[0-1]\u001b[0m - numba.core.errors.TypingError: Failed in cuda mode pipeline (step: nopython...\n",
      "\u001b[31mFAILED\u001b[0m tardis/spectrum/formal_integral/tests/test_cuda_formal_integral.py::\u001b[1mtest_intensity_black_body_cuda[1-1]\u001b[0m - numba.core.errors.TypingError: Failed in cuda mode pipeline (step: nopython...\n",
      "\u001b[31mFAILED\u001b[0m tardis/spectrum/formal_integral/tests/test_cuda_formal_integral.py::\u001b[1mtest_full_formal_integral[200000-5]\u001b[0m - AttributeError: 'int' object has no attribute 'atomic_data'\n",
      "\u001b[31m= \u001b[31m\u001b[1m4 failed\u001b[0m, \u001b[32m648 passed\u001b[0m, \u001b[33m125 skipped\u001b[0m, \u001b[33m2 deselected\u001b[0m, \u001b[33m22 xfailed\u001b[0m, \u001b[33m8 xpassed\u001b[0m, \u001b[33m344 warnings\u001b[0m, \u001b[33m1041 regression data written\u001b[0m\u001b[31m in 794.77s (0:13:14)\u001b[0m\u001b[31m =\u001b[0m\n",
      "\n",
      "\n",
      "ERROR:tardisbase.testing.regression_comparison.run_tests:Stderr: \n",
      "Packets:   ████████████████████████████████████████████████████████████████████\n",
      "\n",
      "Iterations:                                                                    \n",
      "\n",
      "ERROR conda.cli.main_run:execute(127): `conda run python -m pytest tardis --tardis-regression-data=/home/riddhigangbhoj/tardis-work/tardis-regression-data --generate-reference --disable-warnings -m not continuum` failed. (See above for error)\n",
      "\n",
      "INFO:tardisbase.testing.regression_comparison.run_tests:\n",
      "=== Phase 2: Running 'continuum' tests for commit 701bb18916886ecf2797b0dda4843750f69592da ===\n",
      "INFO:tardisbase.testing.regression_comparison.run_tests:Running continuum tests: conda run -n tardis-test-701bb189 python -m pytest tardis --tardis-regression-data=/home/riddhigangbhoj/tardis-work/tardis-regression-data --generate-reference --disable-warnings -m continuum\n",
      "WARNING:tardisbase.testing.regression_comparison.run_tests:Tests completed with some failures for commit 701bb18916886ecf2797b0dda4843750f69592da, but regression data was generated\n",
      "INFO:tardisbase.testing.regression_comparison.run_tests:Processing commit 2/3: ce43cec0fa5d9255108c90c84659c71d34fb1c26\n",
      "INFO:tardisbase.testing.regression_comparison.run_tests:Creating conda environment: tardis-test-ce43cec0\n",
      "INFO:tardisbase.testing.regression_comparison.run_tests:Checking if environment tardis-test-ce43cec0 exists...\n",
      "INFO:tardisbase.testing.regression_comparison.run_tests:Environment tardis-test-ce43cec0 exists, removing it for recreation...\n",
      "INFO:tardisbase.testing.regression_comparison.run_tests:Creating conda environment: conda create --name tardis-test-ce43cec0 --file /tmp/tmphpi2ltb8.lock -y\n",
      "INFO:tardisbase.testing.regression_comparison.run_tests:Installing TARDIS with all extras ['viz', 'tardisbase']: conda run -n tardis-test-ce43cec0 pip install -e /home/riddhigangbhoj/tardis-work/tardis[viz,tardisbase]\n",
      "INFO:tardisbase.testing.regression_comparison.run_tests:\n",
      "=== Phase 1: Running 'not continuum' tests for commit ce43cec0fa5d9255108c90c84659c71d34fb1c26 ===\n",
      "INFO:tardisbase.testing.regression_comparison.run_tests:Running not continuum tests: conda run -n tardis-test-ce43cec0 python -m pytest tardis --tardis-regression-data=/home/riddhigangbhoj/tardis-work/tardis-regression-data --generate-reference --disable-warnings -m not continuum\n",
      "WARNING:tardisbase.testing.regression_comparison.run_tests:'not continuum' tests had failures for commit ce43cec0fa5d9255108c90c84659c71d34fb1c26\n",
      "INFO:tardisbase.testing.regression_comparison.run_tests:Stdout: \u001b[1m============================= test session starts ==============================\u001b[0m\n",
      "platform linux -- Python 3.13.3, pytest-8.4.0, pluggy-1.6.0\n",
      "rootdir: /home/riddhigangbhoj/tardis-work/tardis\n",
      "configfile: pyproject.toml\n",
      "plugins: cov-6.1.1, html-4.1.1, metadata-3.1.1, anyio-4.9.0, doctestplus-1.4.0\n",
      "collected 1850 items / 2 deselected / 1848 selected\n",
      "\n",
      "tardis/energy_input/tests/test_energy_source.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[33mx\u001b[0m\u001b[33mx\u001b[0m\u001b[33m                    [  0%]\u001b[0m\n",
      "tardis/energy_input/tests/test_gamma_ray_channel.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m        [  0%]\u001b[0m\n",
      "tardis/energy_input/tests/test_gamma_ray_grid.py \u001b[33mx\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[33m                     [  1%]\u001b[0m\n",
      "tardis/energy_input/tests/test_gamma_ray_interactions.py \u001b[33mx\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m          [  1%]\u001b[0m\n",
      "tardis/energy_input/tests/test_gamma_ray_packet_source.py \u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33m      [  1%]\u001b[0m\n",
      "tardis/energy_input/tests/test_util.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[33mx\u001b[0m\u001b[33mx\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m                    [  2%]\u001b[0m\n",
      "tardis/grid/tests/test_grid.py \u001b[32m.\u001b[0m\u001b[33m                                         [  2%]\u001b[0m\n",
      "tardis/gui/tests/test_gui.py \u001b[33ms\u001b[0m\u001b[33m                                           [  2%]\u001b[0m\n",
      "tardis/io/configuration/tests/test_config_reader.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m          [  3%]\u001b[0m\n",
      "tardis/io/configuration/tests/test_config_validator.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m             [  3%]\u001b[0m\n",
      "tardis/io/configuration/tests/test_configuration_namespace.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m  [  4%]\u001b[0m\n",
      "tardis/io/logger/tests/test_logging.py \u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33m      [  5%]\u001b[0m\n",
      "tardis/io/model/readers/snec/tests/test_input_profiles.py \u001b[32m.\u001b[0m\u001b[33m              [  5%]\u001b[0m\n",
      "tardis/io/model/readers/snec/tests/test_read_snec_output.py \u001b[32m.\u001b[0m\u001b[33m            [  5%]\u001b[0m\n",
      "tardis/io/model/readers/snec/tests/test_xg_files.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m                  [  5%]\u001b[0m\n",
      "tardis/io/model/readers/tests/test_arepo_parser.py \u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33m                    [  6%]\u001b[0m\n",
      "tardis/io/model/readers/tests/test_artis_readers.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m                 [  6%]\u001b[0m\n",
      "tardis/io/model/readers/tests/test_ascii_readers.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m                  [  6%]\u001b[0m\n",
      "tardis/io/model/readers/tests/test_cmfgen_reader.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m                   [  6%]\u001b[0m\n",
      "tardis/io/model/readers/tests/test_csvy_reader.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m                   [  6%]\u001b[0m\n",
      "tardis/io/model/readers/tests/test_stella_reader.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m                   [  6%]\u001b[0m\n",
      "tardis/io/tests/test_HDFWriter.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m                       [  7%]\u001b[0m\n",
      "tardis/io/tests/test_atomic.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m                                     [  8%]\u001b[0m\n",
      "tardis/io/tests/test_decay.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m                                         [  8%]\u001b[0m\n",
      "tardis/io/tests/test_model_reader.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m                             [  8%]\u001b[0m\n",
      "tardis/model/geometry/tests/test_radial1d.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m                          [  8%]\u001b[0m\n",
      "tardis/model/tests/test_base.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m [ 10%]\n",
      "\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m                                                             [ 11%]\u001b[0m\n",
      "tardis/model/tests/test_csvy_model.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m                          [ 11%]\u001b[0m\n",
      "tardis/model/tests/test_density.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m                                    [ 12%]\u001b[0m\n",
      "tardis/opacities/tests/test_opacity_solver.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0mWWWW\u001b[33m                  [ 12%]\u001b[0m\n",
      "tardis/opacities/tests/test_opacity_state_numba.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m                 [ 12%]\u001b[0m\n",
      "tardis/opacities/tests/test_tau_sobolev.py WW\u001b[33m                            [ 12%]\u001b[0m\n",
      "tardis/plasma/equilibrium/tests/test_collisional_transitions.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m       [ 12%]\u001b[0m\n",
      "tardis/plasma/equilibrium/tests/test_level_populations.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0mW\u001b[33m           [ 13%]\u001b[0m\n",
      "tardis/plasma/equilibrium/tests/test_rate_matrix.py W\u001b[33m                    [ 13%]\u001b[0m\n",
      "tardis/plasma/tests/test_complete_plasmas.py WWWWWWWWWWWWWWWWWWWWWWWWWWW\u001b[33m [ 14%]\n",
      "\u001b[0mWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW\u001b[33m [ 18%]\n",
      "\u001b[0mWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW\u001b[33m [ 22%]\n",
      "\u001b[0mWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW\u001b[33m [ 26%]\n",
      "\u001b[0mWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW\u001b[33m [ 30%]\n",
      "\u001b[0mWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW\u001b[33m [ 34%]\n",
      "\u001b[0mWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW\u001b[33m [ 38%]\n",
      "\u001b[0mWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW\u001b[33m [ 41%]\n",
      "\u001b[0mWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW\u001b[33m [ 45%]\n",
      "\u001b[0mWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW\u001b[33m [ 49%]\n",
      "\u001b[0mWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW\u001b[33m [ 53%]\n",
      "\u001b[0mWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW\u001b[33m [ 57%]\n",
      "\u001b[0mWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW\u001b[33m                                [ 59%]\u001b[0m\n",
      "tardis/plasma/tests/test_hdf_plasma.py WWWWWWWWW\u001b[32m.\u001b[0m\u001b[32m.\u001b[0mWWWWWWWWWWW\u001b[32m.\u001b[0mWWWWWWWWWW\u001b[33m [ 61%]\n",
      "\u001b[0mWWWWWW\u001b[33m                                                                   [ 61%]\u001b[0m\n",
      "tardis/plasma/tests/test_nlte_excitation.py WWW\u001b[33m                          [ 62%]\u001b[0m\n",
      "tardis/plasma/tests/test_nlte_solver.py WW\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mX\u001b[0m\u001b[33m                           [ 62%]\u001b[0m\n",
      "tardis/plasma/tests/test_plasma_continuum.py W\u001b[33m                           [ 62%]\u001b[0m\n",
      "tardis/plasma/tests/test_plasma_vboundary.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m               [ 63%]\u001b[0m\n",
      "tardis/plasma/tests/test_tardis_model_density_config.py WWW\u001b[33m              [ 63%]\u001b[0m\n",
      "tardis/simulation/tests/test_convergence.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m                        [ 63%]\u001b[0m\n",
      "tardis/simulation/tests/test_simulation.py WWWWWWWWWW\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m                 [ 64%]\u001b[0m\n",
      "tardis/spectrum/formal_integral/tests/test_cuda_formal_integral.py \u001b[31mF\u001b[0m\u001b[31mF\u001b[0m\u001b[31mF\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 64%]\n",
      "\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31mF\u001b[0m\u001b[31m                               [ 66%]\u001b[0m\n",
      "tardis/spectrum/formal_integral/tests/test_formal_integral.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 67%]\n",
      "\u001b[0m\u001b[31m                                                                         [ 67%]\u001b[0m\n",
      "tardis/spectrum/formal_integral/tests/test_numba_formal_integral.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 67%]\n",
      "\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m                                                     [ 68%]\u001b[0m\n",
      "tardis/spectrum/tests/test_luminosity.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m                            [ 68%]\u001b[0m\n",
      "tardis/spectrum/tests/test_spectrum.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 70%]\n",
      "\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m                                                                [ 71%]\u001b[0m\n",
      "tardis/spectrum/tests/test_spectrum_solver.py WWWW\u001b[31m                       [ 71%]\u001b[0m\n",
      "tardis/tests/test_tardis_full.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0mWWW\u001b[31m                                   [ 71%]\u001b[0m\n",
      "tardis/tests/test_tardis_full_formal_integral.py WWWWWWWWWWWWWWWW\u001b[31m        [ 72%]\u001b[0m\n",
      "tardis/tests/test_util.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m  [ 74%]\u001b[0m\n",
      "tardis/transport/montecarlo/tests/test_base.py \u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m    [ 76%]\u001b[0m\n",
      "tardis/transport/montecarlo/tests/test_interaction.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m            [ 76%]\u001b[0m\n",
      "tardis/transport/montecarlo/tests/test_macro_atom.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m                [ 76%]\u001b[0m\n",
      "tardis/transport/montecarlo/tests/test_montecarlo.py \u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[31m [ 77%]\n",
      "\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[31m                                    [ 79%]\u001b[0m\n",
      "tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py \u001b[33mx\u001b[0mWW\u001b[31m       [ 79%]\u001b[0m\n",
      "tardis/transport/montecarlo/tests/test_nonhomologous.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m              [ 80%]\u001b[0m\n",
      "tardis/transport/montecarlo/tests/test_numba_interface.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[31m        [ 80%]\u001b[0m\n",
      "tardis/transport/montecarlo/tests/test_opacities.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m      [ 81%]\u001b[0m\n",
      "tardis/transport/montecarlo/tests/test_packet.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[33mX\u001b[0m\u001b[33mX\u001b[0m\u001b[33mX\u001b[0m\u001b[33mX\u001b[0m\u001b[33mX\u001b[0m\u001b[31m [ 82%]\n",
      "\u001b[0m\u001b[33mX\u001b[0m\u001b[33mX\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m                                                              [ 83%]\u001b[0m\n",
      "tardis/transport/montecarlo/tests/test_packet_source.py WWWWWWWW\u001b[31m         [ 83%]\u001b[0m\n",
      "tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py \u001b[32m.\u001b[0m\u001b[31m [ 83%]\n",
      "\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m                                                                    [ 83%]\u001b[0m\n",
      "tardis/transport/montecarlo/tests/test_rpacket_tracker.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0mW\u001b[32m.\u001b[0m\u001b[31m         [ 84%]\u001b[0m\n",
      "tardis/transport/montecarlo/tests/test_single_packet_loop.py \u001b[33mx\u001b[0m\u001b[33mx\u001b[0m\u001b[33mx\u001b[0m\u001b[31m         [ 84%]\u001b[0m\n",
      "tardis/transport/montecarlo/tests/test_tracker_utils.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m               [ 84%]\u001b[0m\n",
      "tardis/transport/montecarlo/tests/test_vpacket.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[31m                   [ 84%]\u001b[0m\n",
      "tardis/transport/montecarlo/tests/test_weighted_packet_source.py WWWW\u001b[31m    [ 84%]\u001b[0m\n",
      "tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py \u001b[32m.\u001b[0m\u001b[31m [ 84%]\n",
      "\u001b[0m\u001b[31m                                                                         [ 84%]\u001b[0m\n",
      "tardis/transport/tests/test_doppler_factor.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m         [ 85%]\u001b[0m\n",
      "tardis/visualization/tests/test_plot_util.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0mWW\u001b[31m          [ 86%]\u001b[0m\n",
      "tardis/visualization/tools/tests/test_convergence_plot.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 87%]\n",
      "\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m                                                                   [ 87%]\u001b[0m\n",
      "tardis/visualization/tools/tests/test_lineid_plotter.py \u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33mx\u001b[0m\u001b[33mx\u001b[0m\u001b[31m            [ 88%]\u001b[0m\n",
      "tardis/visualization/tools/tests/test_liv_plot.py WWWWWWWWWWWWWWWWWWWWWW\u001b[31m [ 89%]\n",
      "\u001b[0mWWWWWWWWWWWWW\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0mWWWWWWWW\u001b[31m                                            [ 91%]\u001b[0m\n",
      "tardis/visualization/tools/tests/test_rpacket_plot.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 91%]\n",
      "\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m                                                          [ 92%]\u001b[0m\n",
      "tardis/visualization/tools/tests/test_sdec_plot.py WWWWWWWWWWWWWWWWWWWWW\u001b[31m [ 93%]\n",
      "\u001b[0mWWWWWWWWWWWWWW\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[31m                                          [ 95%]\u001b[0m\n",
      "tardis/visualization/widgets/tests/test_custom_abundance.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 96%]\n",
      "\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m                                                                     [ 96%]\u001b[0m\n",
      "tardis/visualization/widgets/tests/test_line_info.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 97%]\n",
      "\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m                                                   [ 98%]\u001b[0m\n",
      "tardis/visualization/widgets/tests/test_shell_info.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 99%]\n",
      "\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m                                                                   [100%]\u001b[0m\n",
      "\n",
      "=================================== FAILURES ===================================\n",
      "\u001b[31m\u001b[1m__________ test_intensity_black_body_cuda[100000000000000.0-10000.0] ___________\u001b[0m\n",
      "\n",
      "nu = 100000000000000.0, temperature = 10000.0\n",
      "\n",
      "    \u001b[0m\u001b[37m@pytest\u001b[39;49;00m.mark.skipif(\u001b[90m\u001b[39;49;00m\n",
      "        \u001b[95mnot\u001b[39;49;00m GPUs_available, reason=\u001b[33m\"\u001b[39;49;00m\u001b[33mNo GPU is available to test CUDA function\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "    )\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[37m@pytest\u001b[39;49;00m.mark.parametrize(\u001b[90m\u001b[39;49;00m\n",
      "        [\u001b[33m\"\u001b[39;49;00m\u001b[33mnu\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m, \u001b[33m\"\u001b[39;49;00m\u001b[33mtemperature\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m],\u001b[90m\u001b[39;49;00m\n",
      "        [\u001b[90m\u001b[39;49;00m\n",
      "            (\u001b[94m1e14\u001b[39;49;00m, \u001b[94m1e4\u001b[39;49;00m),\u001b[90m\u001b[39;49;00m\n",
      "            (\u001b[94m0\u001b[39;49;00m, \u001b[94m1\u001b[39;49;00m),\u001b[90m\u001b[39;49;00m\n",
      "            (\u001b[94m1\u001b[39;49;00m, \u001b[94m1\u001b[39;49;00m),\u001b[90m\u001b[39;49;00m\n",
      "        ],\u001b[90m\u001b[39;49;00m\n",
      "    )\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[94mdef\u001b[39;49;00m\u001b[90m \u001b[39;49;00m\u001b[92mtest_intensity_black_body_cuda\u001b[39;49;00m(nu, temperature):\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[90m    \u001b[39;49;00m\u001b[33m\"\"\"\u001b[39;49;00m\n",
      "    \u001b[33m    Initializes the test of the cuda version\u001b[39;49;00m\n",
      "    \u001b[33m    against the numba implementation of the\u001b[39;49;00m\n",
      "    \u001b[33m    intensity_black_body to 15 decimals. This\u001b[39;49;00m\n",
      "    \u001b[33m    is done as both results have 15 digits of precision.\u001b[39;49;00m\n",
      "    \u001b[33m    \"\"\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "        actual = np.zeros(\u001b[94m3\u001b[39;49;00m)\u001b[90m\u001b[39;49;00m\n",
      ">       black_body_caller[\u001b[94m1\u001b[39;49;00m, \u001b[94m3\u001b[39;49;00m](nu, temperature, actual)\u001b[90m\u001b[39;49;00m\n",
      "\n",
      "\u001b[1m\u001b[31mtardis/spectrum/formal_integral/tests/test_cuda_formal_integral.py\u001b[0m:48: \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/cuda/dispatcher.py\u001b[0m:539: in __call__\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m \u001b[96mself\u001b[39;49;00m.dispatcher.call(args, \u001b[96mself\u001b[39;49;00m.griddim, \u001b[96mself\u001b[39;49;00m.blockdim,\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/cuda/dispatcher.py\u001b[0m:681: in call\n",
      "    \u001b[0mkernel = _dispatcher.Dispatcher._cuda_call(\u001b[96mself\u001b[39;49;00m, *args)\u001b[90m\u001b[39;49;00m\n",
      "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/cuda/dispatcher.py\u001b[0m:689: in _compile_for_args\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m \u001b[96mself\u001b[39;49;00m.compile(\u001b[96mtuple\u001b[39;49;00m(argtypes))\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/cuda/dispatcher.py\u001b[0m:932: in compile\n",
      "    \u001b[0mkernel = _Kernel(\u001b[96mself\u001b[39;49;00m.py_func, argtypes, **\u001b[96mself\u001b[39;49;00m.targetoptions)\u001b[90m\u001b[39;49;00m\n",
      "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/core/compiler_lock.py\u001b[0m:35: in _acquire_compile_lock\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m func(*args, **kwargs)\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/cuda/dispatcher.py\u001b[0m:83: in __init__\n",
      "    \u001b[0mcres = compile_cuda(\u001b[96mself\u001b[39;49;00m.py_func, types.void, \u001b[96mself\u001b[39;49;00m.argtypes,\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/core/compiler_lock.py\u001b[0m:35: in _acquire_compile_lock\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m func(*args, **kwargs)\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/cuda/compiler.py\u001b[0m:196: in compile_cuda\n",
      "    \u001b[0mcres = compiler.compile_extra(typingctx=typingctx,\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/core/compiler.py\u001b[0m:739: in compile_extra\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m pipeline.compile_extra(func)\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/core/compiler.py\u001b[0m:439: in compile_extra\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m \u001b[96mself\u001b[39;49;00m._compile_bytecode()\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/core/compiler.py\u001b[0m:505: in _compile_bytecode\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m \u001b[96mself\u001b[39;49;00m._compile_core()\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/core/compiler.py\u001b[0m:484: in _compile_core\n",
      "    \u001b[0m\u001b[94mraise\u001b[39;49;00m e\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/core/compiler.py\u001b[0m:473: in _compile_core\n",
      "    \u001b[0mpm.run(\u001b[96mself\u001b[39;49;00m.state)\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/core/compiler_machinery.py\u001b[0m:367: in run\n",
      "    \u001b[0m\u001b[94mraise\u001b[39;49;00m patched_exception\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/core/compiler_machinery.py\u001b[0m:356: in run\n",
      "    \u001b[0m\u001b[96mself\u001b[39;49;00m._runPass(idx, pass_inst, state)\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/core/compiler_lock.py\u001b[0m:35: in _acquire_compile_lock\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m func(*args, **kwargs)\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/core/compiler_machinery.py\u001b[0m:311: in _runPass\n",
      "    \u001b[0mmutated |= check(pss.run_pass, internal_state)\u001b[90m\u001b[39;49;00m\n",
      "               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/core/compiler_machinery.py\u001b[0m:272: in check\n",
      "    \u001b[0mmangled = func(compiler_state)\u001b[90m\u001b[39;49;00m\n",
      "              ^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/core/typed_passes.py\u001b[0m:112: in run_pass\n",
      "    \u001b[0mtypemap, return_type, calltypes, errs = type_inference_stage(\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/core/typed_passes.py\u001b[0m:93: in type_inference_stage\n",
      "    \u001b[0merrs = infer.propagate(raise_errors=raise_errors)\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      "\n",
      "self = <numba.core.typeinfer.TypeInferer object at 0x735c0414e0d0>\n",
      "raise_errors = True\n",
      "\n",
      "    \u001b[0m\u001b[94mdef\u001b[39;49;00m\u001b[90m \u001b[39;49;00m\u001b[92mpropagate\u001b[39;49;00m(\u001b[96mself\u001b[39;49;00m, raise_errors=\u001b[94mTrue\u001b[39;49;00m):\u001b[90m\u001b[39;49;00m\n",
      "        newtoken = \u001b[96mself\u001b[39;49;00m.get_state_token()\u001b[90m\u001b[39;49;00m\n",
      "        oldtoken = \u001b[94mNone\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "        \u001b[90m# Since the number of types are finite, the typesets will eventually\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "        \u001b[90m# stop growing.\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[90m\u001b[39;49;00m\n",
      "        \u001b[94mwhile\u001b[39;49;00m newtoken != oldtoken:\u001b[90m\u001b[39;49;00m\n",
      "            \u001b[96mself\u001b[39;49;00m.debug.propagate_started()\u001b[90m\u001b[39;49;00m\n",
      "            oldtoken = newtoken\u001b[90m\u001b[39;49;00m\n",
      "            \u001b[90m# Errors can appear when the type set is incomplete; only\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "            \u001b[90m# raise them when there is no progress anymore.\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "            errors = \u001b[96mself\u001b[39;49;00m.constraints.propagate(\u001b[96mself\u001b[39;49;00m)\u001b[90m\u001b[39;49;00m\n",
      "            newtoken = \u001b[96mself\u001b[39;49;00m.get_state_token()\u001b[90m\u001b[39;49;00m\n",
      "            \u001b[96mself\u001b[39;49;00m.debug.propagate_finished()\u001b[90m\u001b[39;49;00m\n",
      "        \u001b[94mif\u001b[39;49;00m errors:\u001b[90m\u001b[39;49;00m\n",
      "            \u001b[94mif\u001b[39;49;00m raise_errors:\u001b[90m\u001b[39;49;00m\n",
      "                force_lit_args = [e \u001b[94mfor\u001b[39;49;00m e \u001b[95min\u001b[39;49;00m errors\u001b[90m\u001b[39;49;00m\n",
      "                                  \u001b[94mif\u001b[39;49;00m \u001b[96misinstance\u001b[39;49;00m(e, ForceLiteralArg)]\u001b[90m\u001b[39;49;00m\n",
      "                \u001b[94mif\u001b[39;49;00m \u001b[95mnot\u001b[39;49;00m force_lit_args:\u001b[90m\u001b[39;49;00m\n",
      ">                   \u001b[94mraise\u001b[39;49;00m errors[\u001b[94m0\u001b[39;49;00m]\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31mE                   numba.core.errors.TypingError: Failed in cuda mode pipeline (step: nopython frontend)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m\u001b[1m\u001b[1mFailed in cuda mode pipeline (step: nopython frontend)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m\u001b[1m\u001b[1mUse of unsupported NumPy function 'numpy.exp' or unsupported use of the function.\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   File \"tardis/spectrum/formal_integral/base.py\", line 104:\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1mdef intensity_black_body(nu, temperature):\u001b[0m\n",
      "\u001b[1m\u001b[31mE                       <source elided>\u001b[0m\n",
      "\u001b[1m\u001b[31mE                       coefficient = 2 * H_CGS * C_INV * C_INV\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m    return coefficient * nu * nu * nu / (np.exp(H_CGS * nu * beta_rad) - 1)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m    \u001b[1m^\u001b[0m\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[1mDuring: typing of get attribute at /home/riddhigangbhoj/tardis-work/tardis/tardis/spectrum/formal_integral/base.py (104)\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   File \"tardis/spectrum/formal_integral/base.py\", line 104:\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1mdef intensity_black_body(nu, temperature):\u001b[0m\n",
      "\u001b[1m\u001b[31mE                       <source elided>\u001b[0m\n",
      "\u001b[1m\u001b[31mE                       coefficient = 2 * H_CGS * C_INV * C_INV\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m    return coefficient * nu * nu * nu / (np.exp(H_CGS * nu * beta_rad) - 1)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m    \u001b[1m^\u001b[0m\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[1mDuring: Pass nopython_type_inference\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[1mDuring: resolving callee type: type(CUDADispatcher(<function intensity_black_body at 0x735c30362160>))\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[1mDuring: typing of call at /home/riddhigangbhoj/tardis-work/tardis/tardis/spectrum/formal_integral/tests/test_cuda_formal_integral.py (22)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   File \"tardis/spectrum/formal_integral/tests/test_cuda_formal_integral.py\", line 22:\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1mdef black_body_caller(nu, temperature, actual):\u001b[0m\n",
      "\u001b[1m\u001b[31mE                       <source elided>\u001b[0m\n",
      "\u001b[1m\u001b[31mE                       x = cuda.grid(1)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m    actual[x] = formal_integral_cuda.intensity_black_body_cuda(nu, temperature)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m    \u001b[1m^\u001b[0m\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[1mDuring: Pass nopython_type_inference\u001b[0m\u001b[0m\n",
      "\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/core/typeinfer.py\u001b[0m:1074: TypingError\n",
      "\u001b[31m\u001b[1m_____________________ test_intensity_black_body_cuda[0-1] ______________________\u001b[0m\n",
      "\n",
      "nu = 0, temperature = 1\n",
      "\n",
      "    \u001b[0m\u001b[37m@pytest\u001b[39;49;00m.mark.skipif(\u001b[90m\u001b[39;49;00m\n",
      "        \u001b[95mnot\u001b[39;49;00m GPUs_available, reason=\u001b[33m\"\u001b[39;49;00m\u001b[33mNo GPU is available to test CUDA function\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "    )\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[37m@pytest\u001b[39;49;00m.mark.parametrize(\u001b[90m\u001b[39;49;00m\n",
      "        [\u001b[33m\"\u001b[39;49;00m\u001b[33mnu\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m, \u001b[33m\"\u001b[39;49;00m\u001b[33mtemperature\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m],\u001b[90m\u001b[39;49;00m\n",
      "        [\u001b[90m\u001b[39;49;00m\n",
      "            (\u001b[94m1e14\u001b[39;49;00m, \u001b[94m1e4\u001b[39;49;00m),\u001b[90m\u001b[39;49;00m\n",
      "            (\u001b[94m0\u001b[39;49;00m, \u001b[94m1\u001b[39;49;00m),\u001b[90m\u001b[39;49;00m\n",
      "            (\u001b[94m1\u001b[39;49;00m, \u001b[94m1\u001b[39;49;00m),\u001b[90m\u001b[39;49;00m\n",
      "        ],\u001b[90m\u001b[39;49;00m\n",
      "    )\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[94mdef\u001b[39;49;00m\u001b[90m \u001b[39;49;00m\u001b[92mtest_intensity_black_body_cuda\u001b[39;49;00m(nu, temperature):\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[90m    \u001b[39;49;00m\u001b[33m\"\"\"\u001b[39;49;00m\n",
      "    \u001b[33m    Initializes the test of the cuda version\u001b[39;49;00m\n",
      "    \u001b[33m    against the numba implementation of the\u001b[39;49;00m\n",
      "    \u001b[33m    intensity_black_body to 15 decimals. This\u001b[39;49;00m\n",
      "    \u001b[33m    is done as both results have 15 digits of precision.\u001b[39;49;00m\n",
      "    \u001b[33m    \"\"\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "        actual = np.zeros(\u001b[94m3\u001b[39;49;00m)\u001b[90m\u001b[39;49;00m\n",
      ">       black_body_caller[\u001b[94m1\u001b[39;49;00m, \u001b[94m3\u001b[39;49;00m](nu, temperature, actual)\u001b[90m\u001b[39;49;00m\n",
      "\n",
      "\u001b[1m\u001b[31mtardis/spectrum/formal_integral/tests/test_cuda_formal_integral.py\u001b[0m:48: \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/cuda/dispatcher.py\u001b[0m:539: in __call__\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m \u001b[96mself\u001b[39;49;00m.dispatcher.call(args, \u001b[96mself\u001b[39;49;00m.griddim, \u001b[96mself\u001b[39;49;00m.blockdim,\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/cuda/dispatcher.py\u001b[0m:681: in call\n",
      "    \u001b[0mkernel = _dispatcher.Dispatcher._cuda_call(\u001b[96mself\u001b[39;49;00m, *args)\u001b[90m\u001b[39;49;00m\n",
      "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/cuda/dispatcher.py\u001b[0m:689: in _compile_for_args\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m \u001b[96mself\u001b[39;49;00m.compile(\u001b[96mtuple\u001b[39;49;00m(argtypes))\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/cuda/dispatcher.py\u001b[0m:932: in compile\n",
      "    \u001b[0mkernel = _Kernel(\u001b[96mself\u001b[39;49;00m.py_func, argtypes, **\u001b[96mself\u001b[39;49;00m.targetoptions)\u001b[90m\u001b[39;49;00m\n",
      "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/core/compiler_lock.py\u001b[0m:35: in _acquire_compile_lock\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m func(*args, **kwargs)\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/cuda/dispatcher.py\u001b[0m:83: in __init__\n",
      "    \u001b[0mcres = compile_cuda(\u001b[96mself\u001b[39;49;00m.py_func, types.void, \u001b[96mself\u001b[39;49;00m.argtypes,\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/core/compiler_lock.py\u001b[0m:35: in _acquire_compile_lock\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m func(*args, **kwargs)\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/cuda/compiler.py\u001b[0m:196: in compile_cuda\n",
      "    \u001b[0mcres = compiler.compile_extra(typingctx=typingctx,\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/core/compiler.py\u001b[0m:739: in compile_extra\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m pipeline.compile_extra(func)\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/core/compiler.py\u001b[0m:439: in compile_extra\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m \u001b[96mself\u001b[39;49;00m._compile_bytecode()\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/core/compiler.py\u001b[0m:505: in _compile_bytecode\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m \u001b[96mself\u001b[39;49;00m._compile_core()\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/core/compiler.py\u001b[0m:484: in _compile_core\n",
      "    \u001b[0m\u001b[94mraise\u001b[39;49;00m e\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/core/compiler.py\u001b[0m:473: in _compile_core\n",
      "    \u001b[0mpm.run(\u001b[96mself\u001b[39;49;00m.state)\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/core/compiler_machinery.py\u001b[0m:367: in run\n",
      "    \u001b[0m\u001b[94mraise\u001b[39;49;00m patched_exception\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/core/compiler_machinery.py\u001b[0m:356: in run\n",
      "    \u001b[0m\u001b[96mself\u001b[39;49;00m._runPass(idx, pass_inst, state)\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/core/compiler_lock.py\u001b[0m:35: in _acquire_compile_lock\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m func(*args, **kwargs)\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/core/compiler_machinery.py\u001b[0m:311: in _runPass\n",
      "    \u001b[0mmutated |= check(pss.run_pass, internal_state)\u001b[90m\u001b[39;49;00m\n",
      "               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/core/compiler_machinery.py\u001b[0m:272: in check\n",
      "    \u001b[0mmangled = func(compiler_state)\u001b[90m\u001b[39;49;00m\n",
      "              ^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/core/typed_passes.py\u001b[0m:112: in run_pass\n",
      "    \u001b[0mtypemap, return_type, calltypes, errs = type_inference_stage(\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/core/typed_passes.py\u001b[0m:93: in type_inference_stage\n",
      "    \u001b[0merrs = infer.propagate(raise_errors=raise_errors)\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      "\n",
      "self = <numba.core.typeinfer.TypeInferer object at 0x735bb41ebe10>\n",
      "raise_errors = True\n",
      "\n",
      "    \u001b[0m\u001b[94mdef\u001b[39;49;00m\u001b[90m \u001b[39;49;00m\u001b[92mpropagate\u001b[39;49;00m(\u001b[96mself\u001b[39;49;00m, raise_errors=\u001b[94mTrue\u001b[39;49;00m):\u001b[90m\u001b[39;49;00m\n",
      "        newtoken = \u001b[96mself\u001b[39;49;00m.get_state_token()\u001b[90m\u001b[39;49;00m\n",
      "        oldtoken = \u001b[94mNone\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "        \u001b[90m# Since the number of types are finite, the typesets will eventually\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "        \u001b[90m# stop growing.\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[90m\u001b[39;49;00m\n",
      "        \u001b[94mwhile\u001b[39;49;00m newtoken != oldtoken:\u001b[90m\u001b[39;49;00m\n",
      "            \u001b[96mself\u001b[39;49;00m.debug.propagate_started()\u001b[90m\u001b[39;49;00m\n",
      "            oldtoken = newtoken\u001b[90m\u001b[39;49;00m\n",
      "            \u001b[90m# Errors can appear when the type set is incomplete; only\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "            \u001b[90m# raise them when there is no progress anymore.\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "            errors = \u001b[96mself\u001b[39;49;00m.constraints.propagate(\u001b[96mself\u001b[39;49;00m)\u001b[90m\u001b[39;49;00m\n",
      "            newtoken = \u001b[96mself\u001b[39;49;00m.get_state_token()\u001b[90m\u001b[39;49;00m\n",
      "            \u001b[96mself\u001b[39;49;00m.debug.propagate_finished()\u001b[90m\u001b[39;49;00m\n",
      "        \u001b[94mif\u001b[39;49;00m errors:\u001b[90m\u001b[39;49;00m\n",
      "            \u001b[94mif\u001b[39;49;00m raise_errors:\u001b[90m\u001b[39;49;00m\n",
      "                force_lit_args = [e \u001b[94mfor\u001b[39;49;00m e \u001b[95min\u001b[39;49;00m errors\u001b[90m\u001b[39;49;00m\n",
      "                                  \u001b[94mif\u001b[39;49;00m \u001b[96misinstance\u001b[39;49;00m(e, ForceLiteralArg)]\u001b[90m\u001b[39;49;00m\n",
      "                \u001b[94mif\u001b[39;49;00m \u001b[95mnot\u001b[39;49;00m force_lit_args:\u001b[90m\u001b[39;49;00m\n",
      ">                   \u001b[94mraise\u001b[39;49;00m errors[\u001b[94m0\u001b[39;49;00m]\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31mE                   numba.core.errors.TypingError: Failed in cuda mode pipeline (step: nopython frontend)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m\u001b[1m\u001b[1mFailed in cuda mode pipeline (step: nopython frontend)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m\u001b[1m\u001b[1mUse of unsupported NumPy function 'numpy.exp' or unsupported use of the function.\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   File \"tardis/spectrum/formal_integral/base.py\", line 104:\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1mdef intensity_black_body(nu, temperature):\u001b[0m\n",
      "\u001b[1m\u001b[31mE                       <source elided>\u001b[0m\n",
      "\u001b[1m\u001b[31mE                       coefficient = 2 * H_CGS * C_INV * C_INV\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m    return coefficient * nu * nu * nu / (np.exp(H_CGS * nu * beta_rad) - 1)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m    \u001b[1m^\u001b[0m\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[1mDuring: typing of get attribute at /home/riddhigangbhoj/tardis-work/tardis/tardis/spectrum/formal_integral/base.py (104)\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   File \"tardis/spectrum/formal_integral/base.py\", line 104:\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1mdef intensity_black_body(nu, temperature):\u001b[0m\n",
      "\u001b[1m\u001b[31mE                       <source elided>\u001b[0m\n",
      "\u001b[1m\u001b[31mE                       coefficient = 2 * H_CGS * C_INV * C_INV\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m    return coefficient * nu * nu * nu / (np.exp(H_CGS * nu * beta_rad) - 1)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m    \u001b[1m^\u001b[0m\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[1mDuring: Pass nopython_type_inference\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[1mDuring: resolving callee type: type(CUDADispatcher(<function intensity_black_body at 0x735c30362160>))\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[1mDuring: typing of call at /home/riddhigangbhoj/tardis-work/tardis/tardis/spectrum/formal_integral/tests/test_cuda_formal_integral.py (22)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   File \"tardis/spectrum/formal_integral/tests/test_cuda_formal_integral.py\", line 22:\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1mdef black_body_caller(nu, temperature, actual):\u001b[0m\n",
      "\u001b[1m\u001b[31mE                       <source elided>\u001b[0m\n",
      "\u001b[1m\u001b[31mE                       x = cuda.grid(1)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m    actual[x] = formal_integral_cuda.intensity_black_body_cuda(nu, temperature)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m    \u001b[1m^\u001b[0m\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[1mDuring: Pass nopython_type_inference\u001b[0m\u001b[0m\n",
      "\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/core/typeinfer.py\u001b[0m:1074: TypingError\n",
      "\u001b[31m\u001b[1m_____________________ test_intensity_black_body_cuda[1-1] ______________________\u001b[0m\n",
      "\n",
      "nu = 1, temperature = 1\n",
      "\n",
      "    \u001b[0m\u001b[37m@pytest\u001b[39;49;00m.mark.skipif(\u001b[90m\u001b[39;49;00m\n",
      "        \u001b[95mnot\u001b[39;49;00m GPUs_available, reason=\u001b[33m\"\u001b[39;49;00m\u001b[33mNo GPU is available to test CUDA function\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "    )\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[37m@pytest\u001b[39;49;00m.mark.parametrize(\u001b[90m\u001b[39;49;00m\n",
      "        [\u001b[33m\"\u001b[39;49;00m\u001b[33mnu\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m, \u001b[33m\"\u001b[39;49;00m\u001b[33mtemperature\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m],\u001b[90m\u001b[39;49;00m\n",
      "        [\u001b[90m\u001b[39;49;00m\n",
      "            (\u001b[94m1e14\u001b[39;49;00m, \u001b[94m1e4\u001b[39;49;00m),\u001b[90m\u001b[39;49;00m\n",
      "            (\u001b[94m0\u001b[39;49;00m, \u001b[94m1\u001b[39;49;00m),\u001b[90m\u001b[39;49;00m\n",
      "            (\u001b[94m1\u001b[39;49;00m, \u001b[94m1\u001b[39;49;00m),\u001b[90m\u001b[39;49;00m\n",
      "        ],\u001b[90m\u001b[39;49;00m\n",
      "    )\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[94mdef\u001b[39;49;00m\u001b[90m \u001b[39;49;00m\u001b[92mtest_intensity_black_body_cuda\u001b[39;49;00m(nu, temperature):\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[90m    \u001b[39;49;00m\u001b[33m\"\"\"\u001b[39;49;00m\n",
      "    \u001b[33m    Initializes the test of the cuda version\u001b[39;49;00m\n",
      "    \u001b[33m    against the numba implementation of the\u001b[39;49;00m\n",
      "    \u001b[33m    intensity_black_body to 15 decimals. This\u001b[39;49;00m\n",
      "    \u001b[33m    is done as both results have 15 digits of precision.\u001b[39;49;00m\n",
      "    \u001b[33m    \"\"\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "        actual = np.zeros(\u001b[94m3\u001b[39;49;00m)\u001b[90m\u001b[39;49;00m\n",
      ">       black_body_caller[\u001b[94m1\u001b[39;49;00m, \u001b[94m3\u001b[39;49;00m](nu, temperature, actual)\u001b[90m\u001b[39;49;00m\n",
      "\n",
      "\u001b[1m\u001b[31mtardis/spectrum/formal_integral/tests/test_cuda_formal_integral.py\u001b[0m:48: \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/cuda/dispatcher.py\u001b[0m:539: in __call__\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m \u001b[96mself\u001b[39;49;00m.dispatcher.call(args, \u001b[96mself\u001b[39;49;00m.griddim, \u001b[96mself\u001b[39;49;00m.blockdim,\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/cuda/dispatcher.py\u001b[0m:681: in call\n",
      "    \u001b[0mkernel = _dispatcher.Dispatcher._cuda_call(\u001b[96mself\u001b[39;49;00m, *args)\u001b[90m\u001b[39;49;00m\n",
      "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/cuda/dispatcher.py\u001b[0m:689: in _compile_for_args\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m \u001b[96mself\u001b[39;49;00m.compile(\u001b[96mtuple\u001b[39;49;00m(argtypes))\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/cuda/dispatcher.py\u001b[0m:932: in compile\n",
      "    \u001b[0mkernel = _Kernel(\u001b[96mself\u001b[39;49;00m.py_func, argtypes, **\u001b[96mself\u001b[39;49;00m.targetoptions)\u001b[90m\u001b[39;49;00m\n",
      "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/core/compiler_lock.py\u001b[0m:35: in _acquire_compile_lock\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m func(*args, **kwargs)\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/cuda/dispatcher.py\u001b[0m:83: in __init__\n",
      "    \u001b[0mcres = compile_cuda(\u001b[96mself\u001b[39;49;00m.py_func, types.void, \u001b[96mself\u001b[39;49;00m.argtypes,\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/core/compiler_lock.py\u001b[0m:35: in _acquire_compile_lock\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m func(*args, **kwargs)\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/cuda/compiler.py\u001b[0m:196: in compile_cuda\n",
      "    \u001b[0mcres = compiler.compile_extra(typingctx=typingctx,\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/core/compiler.py\u001b[0m:739: in compile_extra\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m pipeline.compile_extra(func)\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/core/compiler.py\u001b[0m:439: in compile_extra\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m \u001b[96mself\u001b[39;49;00m._compile_bytecode()\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/core/compiler.py\u001b[0m:505: in _compile_bytecode\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m \u001b[96mself\u001b[39;49;00m._compile_core()\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/core/compiler.py\u001b[0m:484: in _compile_core\n",
      "    \u001b[0m\u001b[94mraise\u001b[39;49;00m e\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/core/compiler.py\u001b[0m:473: in _compile_core\n",
      "    \u001b[0mpm.run(\u001b[96mself\u001b[39;49;00m.state)\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/core/compiler_machinery.py\u001b[0m:367: in run\n",
      "    \u001b[0m\u001b[94mraise\u001b[39;49;00m patched_exception\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/core/compiler_machinery.py\u001b[0m:356: in run\n",
      "    \u001b[0m\u001b[96mself\u001b[39;49;00m._runPass(idx, pass_inst, state)\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/core/compiler_lock.py\u001b[0m:35: in _acquire_compile_lock\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m func(*args, **kwargs)\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/core/compiler_machinery.py\u001b[0m:311: in _runPass\n",
      "    \u001b[0mmutated |= check(pss.run_pass, internal_state)\u001b[90m\u001b[39;49;00m\n",
      "               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/core/compiler_machinery.py\u001b[0m:272: in check\n",
      "    \u001b[0mmangled = func(compiler_state)\u001b[90m\u001b[39;49;00m\n",
      "              ^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/core/typed_passes.py\u001b[0m:112: in run_pass\n",
      "    \u001b[0mtypemap, return_type, calltypes, errs = type_inference_stage(\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/core/typed_passes.py\u001b[0m:93: in type_inference_stage\n",
      "    \u001b[0merrs = infer.propagate(raise_errors=raise_errors)\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      "\n",
      "self = <numba.core.typeinfer.TypeInferer object at 0x735bfbe8b1e0>\n",
      "raise_errors = True\n",
      "\n",
      "    \u001b[0m\u001b[94mdef\u001b[39;49;00m\u001b[90m \u001b[39;49;00m\u001b[92mpropagate\u001b[39;49;00m(\u001b[96mself\u001b[39;49;00m, raise_errors=\u001b[94mTrue\u001b[39;49;00m):\u001b[90m\u001b[39;49;00m\n",
      "        newtoken = \u001b[96mself\u001b[39;49;00m.get_state_token()\u001b[90m\u001b[39;49;00m\n",
      "        oldtoken = \u001b[94mNone\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "        \u001b[90m# Since the number of types are finite, the typesets will eventually\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "        \u001b[90m# stop growing.\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[90m\u001b[39;49;00m\n",
      "        \u001b[94mwhile\u001b[39;49;00m newtoken != oldtoken:\u001b[90m\u001b[39;49;00m\n",
      "            \u001b[96mself\u001b[39;49;00m.debug.propagate_started()\u001b[90m\u001b[39;49;00m\n",
      "            oldtoken = newtoken\u001b[90m\u001b[39;49;00m\n",
      "            \u001b[90m# Errors can appear when the type set is incomplete; only\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "            \u001b[90m# raise them when there is no progress anymore.\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "            errors = \u001b[96mself\u001b[39;49;00m.constraints.propagate(\u001b[96mself\u001b[39;49;00m)\u001b[90m\u001b[39;49;00m\n",
      "            newtoken = \u001b[96mself\u001b[39;49;00m.get_state_token()\u001b[90m\u001b[39;49;00m\n",
      "            \u001b[96mself\u001b[39;49;00m.debug.propagate_finished()\u001b[90m\u001b[39;49;00m\n",
      "        \u001b[94mif\u001b[39;49;00m errors:\u001b[90m\u001b[39;49;00m\n",
      "            \u001b[94mif\u001b[39;49;00m raise_errors:\u001b[90m\u001b[39;49;00m\n",
      "                force_lit_args = [e \u001b[94mfor\u001b[39;49;00m e \u001b[95min\u001b[39;49;00m errors\u001b[90m\u001b[39;49;00m\n",
      "                                  \u001b[94mif\u001b[39;49;00m \u001b[96misinstance\u001b[39;49;00m(e, ForceLiteralArg)]\u001b[90m\u001b[39;49;00m\n",
      "                \u001b[94mif\u001b[39;49;00m \u001b[95mnot\u001b[39;49;00m force_lit_args:\u001b[90m\u001b[39;49;00m\n",
      ">                   \u001b[94mraise\u001b[39;49;00m errors[\u001b[94m0\u001b[39;49;00m]\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31mE                   numba.core.errors.TypingError: Failed in cuda mode pipeline (step: nopython frontend)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m\u001b[1m\u001b[1mFailed in cuda mode pipeline (step: nopython frontend)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m\u001b[1m\u001b[1mUse of unsupported NumPy function 'numpy.exp' or unsupported use of the function.\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   File \"tardis/spectrum/formal_integral/base.py\", line 104:\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1mdef intensity_black_body(nu, temperature):\u001b[0m\n",
      "\u001b[1m\u001b[31mE                       <source elided>\u001b[0m\n",
      "\u001b[1m\u001b[31mE                       coefficient = 2 * H_CGS * C_INV * C_INV\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m    return coefficient * nu * nu * nu / (np.exp(H_CGS * nu * beta_rad) - 1)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m    \u001b[1m^\u001b[0m\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[1mDuring: typing of get attribute at /home/riddhigangbhoj/tardis-work/tardis/tardis/spectrum/formal_integral/base.py (104)\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   File \"tardis/spectrum/formal_integral/base.py\", line 104:\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1mdef intensity_black_body(nu, temperature):\u001b[0m\n",
      "\u001b[1m\u001b[31mE                       <source elided>\u001b[0m\n",
      "\u001b[1m\u001b[31mE                       coefficient = 2 * H_CGS * C_INV * C_INV\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m    return coefficient * nu * nu * nu / (np.exp(H_CGS * nu * beta_rad) - 1)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m    \u001b[1m^\u001b[0m\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[1mDuring: Pass nopython_type_inference\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[1mDuring: resolving callee type: type(CUDADispatcher(<function intensity_black_body at 0x735c30362160>))\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[1mDuring: typing of call at /home/riddhigangbhoj/tardis-work/tardis/tardis/spectrum/formal_integral/tests/test_cuda_formal_integral.py (22)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   File \"tardis/spectrum/formal_integral/tests/test_cuda_formal_integral.py\", line 22:\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1mdef black_body_caller(nu, temperature, actual):\u001b[0m\n",
      "\u001b[1m\u001b[31mE                       <source elided>\u001b[0m\n",
      "\u001b[1m\u001b[31mE                       x = cuda.grid(1)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m    actual[x] = formal_integral_cuda.intensity_black_body_cuda(nu, temperature)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m    \u001b[1m^\u001b[0m\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[1mDuring: Pass nopython_type_inference\u001b[0m\u001b[0m\n",
      "\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-ce43cec0/lib/python3.13/site-packages/numba/core/typeinfer.py\u001b[0m:1074: TypingError\n",
      "\u001b[31m\u001b[1m_____________________ test_full_formal_integral[200000-5] ______________________\u001b[0m\n",
      "\n",
      "no_of_packets = 200000, iterations = 5\n",
      "config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}\n",
      "simulation_verysimple = <tardis.simulation.base.Simulation object at 0x735c0cfbaf90>\n",
      "\n",
      "    \u001b[0m\u001b[37m@pytest\u001b[39;49;00m.mark.skipif(\u001b[90m\u001b[39;49;00m\n",
      "        \u001b[95mnot\u001b[39;49;00m GPUs_available, reason=\u001b[33m\"\u001b[39;49;00m\u001b[33mNo GPU is available to test CUDA function\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "    )\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[37m@pytest\u001b[39;49;00m.mark.parametrize([\u001b[33m\"\u001b[39;49;00m\u001b[33mno_of_packets\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m, \u001b[33m\"\u001b[39;49;00m\u001b[33miterations\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m], [(\u001b[94m200000\u001b[39;49;00m, \u001b[94m5\u001b[39;49;00m)])\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[94mdef\u001b[39;49;00m\u001b[90m \u001b[39;49;00m\u001b[92mtest_full_formal_integral\u001b[39;49;00m(\u001b[90m\u001b[39;49;00m\n",
      "        no_of_packets, iterations, config_verysimple, simulation_verysimple\u001b[90m\u001b[39;49;00m\n",
      "    ):\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[90m    \u001b[39;49;00m\u001b[33m\"\"\"\u001b[39;49;00m\n",
      "    \u001b[33m    This function initializes both the cuda and numba formal_integrator,\u001b[39;49;00m\n",
      "    \u001b[33m    and the runs them and compares results to the 15th decimal place.\u001b[39;49;00m\n",
      "    \u001b[33m    This is done as both results have 15 digits of precision.\u001b[39;49;00m\n",
      "    \u001b[33m    \"\"\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "        sim = simulation_verysimple\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[90m\u001b[39;49;00m\n",
      "        formal_integrator_numba = FormalIntegrator(\u001b[90m\u001b[39;49;00m\n",
      "            sim.simulation_state, sim.plasma, sim.transport\u001b[90m\u001b[39;49;00m\n",
      "        )\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[90m\u001b[39;49;00m\n",
      "        formal_integrator_cuda = FormalIntegrator(\u001b[90m\u001b[39;49;00m\n",
      "            sim.simulation_state, sim.plasma, sim.transport\u001b[90m\u001b[39;49;00m\n",
      "        )\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[90m\u001b[39;49;00m\n",
      "        \u001b[90m# The function calculate_spectrum sets this property, but in order to test the CUDA.\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "        \u001b[90m# version it is done manually, as well as to speed up the test.\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "        formal_integrator_numba.interpolate_shells = \u001b[96mmax\u001b[39;49;00m(\u001b[90m\u001b[39;49;00m\n",
      "            \u001b[94m2\u001b[39;49;00m * formal_integrator_numba.simulation_state.no_of_shells, \u001b[94m80\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "        )\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[90m\u001b[39;49;00m\n",
      "        formal_integrator_cuda.interpolate_shells = \u001b[96mmax\u001b[39;49;00m(\u001b[90m\u001b[39;49;00m\n",
      "            \u001b[94m2\u001b[39;49;00m * formal_integrator_cuda.simulation_state.no_of_shells, \u001b[94m80\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "        )\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[90m\u001b[39;49;00m\n",
      ">       res_numba = make_source_function(\u001b[90m\u001b[39;49;00m\n",
      "            formal_integrator_numba.simulation_state,\u001b[90m\u001b[39;49;00m\n",
      "            formal_integrator_numba.plasma,\u001b[90m\u001b[39;49;00m\n",
      "            formal_integrator_numba.transport,\u001b[90m\u001b[39;49;00m\n",
      "            formal_integrator_numba.interpolate_shells\u001b[90m\u001b[39;49;00m\n",
      "        )\u001b[90m\u001b[39;49;00m\n",
      "\n",
      "\u001b[1m\u001b[31mtardis/spectrum/formal_integral/tests/test_cuda_formal_integral.py\u001b[0m:329: \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      "\n",
      "simulation_state = <tardis.model.base.SimulationState object at 0x735c1c446f90>\n",
      "opacity_state = <tardis.plasma.base.BasePlasma object at 0x735c0cfb8d70>\n",
      "transport = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x735c0cfba510>\n",
      "plasma = 80, interpolate_shells = 0\n",
      "\n",
      "    \u001b[0m\u001b[94mdef\u001b[39;49;00m\u001b[90m \u001b[39;49;00m\u001b[92mmake_source_function\u001b[39;49;00m(simulation_state, opacity_state, transport, plasma, interpolate_shells=\u001b[94m0\u001b[39;49;00m):\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[90m    \u001b[39;49;00m\u001b[33m\"\"\"\u001b[39;49;00m\n",
      "    \u001b[33m    Calculates the source function using the line absorption rate estimator `Edotlu_estimator`\u001b[39;49;00m\n",
      "    \u001b[33m\u001b[39;49;00m\n",
      "    \u001b[33m    Formally it calculates the expression ( 1 - exp(-tau_ul) ) S_ul but this product is what we need later,\u001b[39;49;00m\n",
      "    \u001b[33m    so there is no need to factor out the source function explicitly.\u001b[39;49;00m\n",
      "    \u001b[33m    Parameters\u001b[39;49;00m\n",
      "    \u001b[33m    ----------\u001b[39;49;00m\n",
      "    \u001b[33m    simulation_state : tardis.model.SimulationState\u001b[39;49;00m\n",
      "    \u001b[33m    opacity_state : tardis.opacity.OpacityStateNumba\u001b[39;49;00m\n",
      "    \u001b[33m    transport : tardis.transport.montecarlo.MonteCarloTransportSolver\u001b[39;49;00m\n",
      "    \u001b[33m    plasma : tardis.plasma.BasePlasma\u001b[39;49;00m\n",
      "    \u001b[33m    interpolate_shells : int\u001b[39;49;00m\n",
      "    \u001b[33m        Number of shells to interpolate to. If set to 0, no interpolation is performed.\u001b[39;49;00m\n",
      "    \u001b[33m\u001b[39;49;00m\n",
      "    \u001b[33m    Returns\u001b[39;49;00m\n",
      "    \u001b[33m    -------\u001b[39;49;00m\n",
      "    \u001b[33m    Numpy array containing ( 1 - exp(-tau_ul) ) S_ul ordered by wavelength of the transition u -> l\u001b[39;49;00m\n",
      "    \u001b[33m    \"\"\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[90m\u001b[39;49;00m\n",
      "        montecarlo_transport_state = transport.transport_state\u001b[90m\u001b[39;49;00m\n",
      ">       atomic_data = plasma.atomic_data\u001b[90m\u001b[39;49;00m\n",
      "                      ^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31mE       AttributeError: 'int' object has no attribute 'atomic_data'\u001b[0m\n",
      "\n",
      "\u001b[1m\u001b[31mtardis/spectrum/formal_integral/base.py\u001b[0m:128: AttributeError\n",
      "\u001b[36m\u001b[1m=========================== short test summary info ============================\u001b[0m\n",
      "\u001b[31mFAILED\u001b[0m tardis/spectrum/formal_integral/tests/test_cuda_formal_integral.py::\u001b[1mtest_intensity_black_body_cuda[100000000000000.0-10000.0]\u001b[0m - numba.core.errors.TypingError: Failed in cuda mode pipeline (step: nopython...\n",
      "\u001b[31mFAILED\u001b[0m tardis/spectrum/formal_integral/tests/test_cuda_formal_integral.py::\u001b[1mtest_intensity_black_body_cuda[0-1]\u001b[0m - numba.core.errors.TypingError: Failed in cuda mode pipeline (step: nopython...\n",
      "\u001b[31mFAILED\u001b[0m tardis/spectrum/formal_integral/tests/test_cuda_formal_integral.py::\u001b[1mtest_intensity_black_body_cuda[1-1]\u001b[0m - numba.core.errors.TypingError: Failed in cuda mode pipeline (step: nopython...\n",
      "\u001b[31mFAILED\u001b[0m tardis/spectrum/formal_integral/tests/test_cuda_formal_integral.py::\u001b[1mtest_full_formal_integral[200000-5]\u001b[0m - AttributeError: 'int' object has no attribute 'atomic_data'\n",
      "\u001b[31m= \u001b[31m\u001b[1m4 failed\u001b[0m, \u001b[32m648 passed\u001b[0m, \u001b[33m125 skipped\u001b[0m, \u001b[33m2 deselected\u001b[0m, \u001b[33m22 xfailed\u001b[0m, \u001b[33m8 xpassed\u001b[0m, \u001b[33m344 warnings\u001b[0m, \u001b[33m1041 regression data written\u001b[0m\u001b[31m in 791.08s (0:13:11)\u001b[0m\u001b[31m =\u001b[0m\n",
      "\n",
      "\n",
      "ERROR:tardisbase.testing.regression_comparison.run_tests:Stderr: \n",
      "Packets:   ████████████████████████████████████████████████████████████████████\n",
      "\n",
      "Iterations:                                                                    \n",
      "\n",
      "ERROR conda.cli.main_run:execute(127): `conda run python -m pytest tardis --tardis-regression-data=/home/riddhigangbhoj/tardis-work/tardis-regression-data --generate-reference --disable-warnings -m not continuum` failed. (See above for error)\n",
      "\n",
      "INFO:tardisbase.testing.regression_comparison.run_tests:\n",
      "=== Phase 2: Running 'continuum' tests for commit ce43cec0fa5d9255108c90c84659c71d34fb1c26 ===\n",
      "INFO:tardisbase.testing.regression_comparison.run_tests:Running continuum tests: conda run -n tardis-test-ce43cec0 python -m pytest tardis --tardis-regression-data=/home/riddhigangbhoj/tardis-work/tardis-regression-data --generate-reference --disable-warnings -m continuum\n",
      "WARNING:tardisbase.testing.regression_comparison.run_tests:Tests completed with some failures for commit ce43cec0fa5d9255108c90c84659c71d34fb1c26, but regression data was generated\n",
      "INFO:tardisbase.testing.regression_comparison.run_tests:Processing commit 3/3: fa4c4ea98055ea3bef24d69feba26fb5f74c2ddf\n",
      "INFO:tardisbase.testing.regression_comparison.run_tests:Creating conda environment: tardis-test-fa4c4ea9\n",
      "INFO:tardisbase.testing.regression_comparison.run_tests:Checking if environment tardis-test-fa4c4ea9 exists...\n",
      "INFO:tardisbase.testing.regression_comparison.run_tests:Environment tardis-test-fa4c4ea9 exists, removing it for recreation...\n",
      "INFO:tardisbase.testing.regression_comparison.run_tests:Creating conda environment: conda create --name tardis-test-fa4c4ea9 --file /tmp/tmpvmuy4cbz.lock -y\n",
      "INFO:tardisbase.testing.regression_comparison.run_tests:Installing TARDIS with all extras ['viz', 'tardisbase']: conda run -n tardis-test-fa4c4ea9 pip install -e /home/riddhigangbhoj/tardis-work/tardis[viz,tardisbase]\n",
      "INFO:tardisbase.testing.regression_comparison.run_tests:\n",
      "=== Phase 1: Running 'not continuum' tests for commit fa4c4ea98055ea3bef24d69feba26fb5f74c2ddf ===\n",
      "INFO:tardisbase.testing.regression_comparison.run_tests:Running not continuum tests: conda run -n tardis-test-fa4c4ea9 python -m pytest tardis --tardis-regression-data=/home/riddhigangbhoj/tardis-work/tardis-regression-data --generate-reference --disable-warnings -m not continuum\n",
      "WARNING:tardisbase.testing.regression_comparison.run_tests:'not continuum' tests had failures for commit fa4c4ea98055ea3bef24d69feba26fb5f74c2ddf\n",
      "INFO:tardisbase.testing.regression_comparison.run_tests:Stdout: \u001b[1m============================= test session starts ==============================\u001b[0m\n",
      "platform linux -- Python 3.13.3, pytest-8.4.0, pluggy-1.6.0\n",
      "rootdir: /home/riddhigangbhoj/tardis-work/tardis\n",
      "configfile: pyproject.toml\n",
      "plugins: anyio-4.9.0, cov-6.1.1, doctestplus-1.4.0, metadata-3.1.1, html-4.1.1\n",
      "collected 1850 items / 2 deselected / 1848 selected\n",
      "\n",
      "tardis/energy_input/tests/test_energy_source.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[33mx\u001b[0m\u001b[33mx\u001b[0m\u001b[33m                    [  0%]\u001b[0m\n",
      "tardis/energy_input/tests/test_gamma_ray_channel.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m        [  0%]\u001b[0m\n",
      "tardis/energy_input/tests/test_gamma_ray_grid.py \u001b[33mx\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[33m                     [  1%]\u001b[0m\n",
      "tardis/energy_input/tests/test_gamma_ray_interactions.py \u001b[33mx\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m          [  1%]\u001b[0m\n",
      "tardis/energy_input/tests/test_gamma_ray_packet_source.py \u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33m      [  1%]\u001b[0m\n",
      "tardis/energy_input/tests/test_util.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[33mx\u001b[0m\u001b[33mx\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m                    [  2%]\u001b[0m\n",
      "tardis/grid/tests/test_grid.py \u001b[32m.\u001b[0m\u001b[33m                                         [  2%]\u001b[0m\n",
      "tardis/gui/tests/test_gui.py \u001b[33ms\u001b[0m\u001b[33m                                           [  2%]\u001b[0m\n",
      "tardis/io/configuration/tests/test_config_reader.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m          [  3%]\u001b[0m\n",
      "tardis/io/configuration/tests/test_config_validator.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m             [  3%]\u001b[0m\n",
      "tardis/io/configuration/tests/test_configuration_namespace.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m  [  4%]\u001b[0m\n",
      "tardis/io/logger/tests/test_logging.py \u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33m      [  5%]\u001b[0m\n",
      "tardis/io/model/readers/snec/tests/test_input_profiles.py \u001b[32m.\u001b[0m\u001b[33m              [  5%]\u001b[0m\n",
      "tardis/io/model/readers/snec/tests/test_read_snec_output.py \u001b[32m.\u001b[0m\u001b[33m            [  5%]\u001b[0m\n",
      "tardis/io/model/readers/snec/tests/test_xg_files.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m                  [  5%]\u001b[0m\n",
      "tardis/io/model/readers/tests/test_arepo_parser.py \u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33m                    [  6%]\u001b[0m\n",
      "tardis/io/model/readers/tests/test_artis_readers.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m                 [  6%]\u001b[0m\n",
      "tardis/io/model/readers/tests/test_ascii_readers.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m                  [  6%]\u001b[0m\n",
      "tardis/io/model/readers/tests/test_cmfgen_reader.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m                   [  6%]\u001b[0m\n",
      "tardis/io/model/readers/tests/test_csvy_reader.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m                   [  6%]\u001b[0m\n",
      "tardis/io/model/readers/tests/test_stella_reader.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m                   [  6%]\u001b[0m\n",
      "tardis/io/tests/test_HDFWriter.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m                       [  7%]\u001b[0m\n",
      "tardis/io/tests/test_atomic.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m                                     [  8%]\u001b[0m\n",
      "tardis/io/tests/test_decay.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m                                         [  8%]\u001b[0m\n",
      "tardis/io/tests/test_model_reader.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m                             [  8%]\u001b[0m\n",
      "tardis/model/geometry/tests/test_radial1d.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m                          [  8%]\u001b[0m\n",
      "tardis/model/tests/test_base.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m [ 10%]\n",
      "\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m                                                             [ 11%]\u001b[0m\n",
      "tardis/model/tests/test_csvy_model.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m                          [ 11%]\u001b[0m\n",
      "tardis/model/tests/test_density.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m                                    [ 12%]\u001b[0m\n",
      "tardis/opacities/tests/test_opacity_solver.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0mWWWW\u001b[33m                  [ 12%]\u001b[0m\n",
      "tardis/opacities/tests/test_opacity_state_numba.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m                 [ 12%]\u001b[0m\n",
      "tardis/opacities/tests/test_tau_sobolev.py WW\u001b[33m                            [ 12%]\u001b[0m\n",
      "tardis/plasma/equilibrium/tests/test_collisional_transitions.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m       [ 12%]\u001b[0m\n",
      "tardis/plasma/equilibrium/tests/test_level_populations.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0mW\u001b[33m           [ 13%]\u001b[0m\n",
      "tardis/plasma/equilibrium/tests/test_rate_matrix.py W\u001b[33m                    [ 13%]\u001b[0m\n",
      "tardis/plasma/tests/test_complete_plasmas.py WWWWWWWWWWWWWWWWWWWWWWWWWWW\u001b[33m [ 14%]\n",
      "\u001b[0mWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW\u001b[33m [ 18%]\n",
      "\u001b[0mWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW\u001b[33m [ 22%]\n",
      "\u001b[0mWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW\u001b[33m [ 26%]\n",
      "\u001b[0mWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW\u001b[33m [ 30%]\n",
      "\u001b[0mWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW\u001b[33m [ 34%]\n",
      "\u001b[0mWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW\u001b[33m [ 38%]\n",
      "\u001b[0mWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW\u001b[33m [ 41%]\n",
      "\u001b[0mWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW\u001b[33m [ 45%]\n",
      "\u001b[0mWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW\u001b[33m [ 49%]\n",
      "\u001b[0mWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW\u001b[33m [ 53%]\n",
      "\u001b[0mWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW\u001b[33m [ 57%]\n",
      "\u001b[0mWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW\u001b[33m                                [ 59%]\u001b[0m\n",
      "tardis/plasma/tests/test_hdf_plasma.py WWWWWWWWW\u001b[32m.\u001b[0m\u001b[32m.\u001b[0mWWWWWWWWWWW\u001b[32m.\u001b[0mWWWWWWWWWW\u001b[33m [ 61%]\n",
      "\u001b[0mWWWWWW\u001b[33m                                                                   [ 61%]\u001b[0m\n",
      "tardis/plasma/tests/test_nlte_excitation.py WWW\u001b[33m                          [ 62%]\u001b[0m\n",
      "tardis/plasma/tests/test_nlte_solver.py WW\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mX\u001b[0m\u001b[33m                           [ 62%]\u001b[0m\n",
      "tardis/plasma/tests/test_plasma_continuum.py W\u001b[33m                           [ 62%]\u001b[0m\n",
      "tardis/plasma/tests/test_plasma_vboundary.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m               [ 63%]\u001b[0m\n",
      "tardis/plasma/tests/test_tardis_model_density_config.py WWW\u001b[33m              [ 63%]\u001b[0m\n",
      "tardis/simulation/tests/test_convergence.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m                        [ 63%]\u001b[0m\n",
      "tardis/simulation/tests/test_simulation.py WWWWWWWWWW\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33m                 [ 64%]\u001b[0m\n",
      "tardis/spectrum/formal_integral/tests/test_cuda_formal_integral.py \u001b[31mF\u001b[0m\u001b[31mF\u001b[0m\u001b[31mF\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 64%]\n",
      "\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31mF\u001b[0m\u001b[31m                               [ 66%]\u001b[0m\n",
      "tardis/spectrum/formal_integral/tests/test_formal_integral.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 67%]\n",
      "\u001b[0m\u001b[31m                                                                         [ 67%]\u001b[0m\n",
      "tardis/spectrum/formal_integral/tests/test_numba_formal_integral.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 67%]\n",
      "\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m                                                     [ 68%]\u001b[0m\n",
      "tardis/spectrum/tests/test_luminosity.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m                            [ 68%]\u001b[0m\n",
      "tardis/spectrum/tests/test_spectrum.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 70%]\n",
      "\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m                                                                [ 71%]\u001b[0m\n",
      "tardis/spectrum/tests/test_spectrum_solver.py WWWW\u001b[31m                       [ 71%]\u001b[0m\n",
      "tardis/tests/test_tardis_full.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0mWWW\u001b[31m                                   [ 71%]\u001b[0m\n",
      "tardis/tests/test_tardis_full_formal_integral.py WWWWWWWWWWWWWWWW\u001b[31m        [ 72%]\u001b[0m\n",
      "tardis/tests/test_util.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m  [ 74%]\u001b[0m\n",
      "tardis/transport/montecarlo/tests/test_base.py \u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m    [ 76%]\u001b[0m\n",
      "tardis/transport/montecarlo/tests/test_interaction.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m            [ 76%]\u001b[0m\n",
      "tardis/transport/montecarlo/tests/test_macro_atom.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m                [ 76%]\u001b[0m\n",
      "tardis/transport/montecarlo/tests/test_montecarlo.py \u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[31m [ 77%]\n",
      "\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[31m                                    [ 79%]\u001b[0m\n",
      "tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py \u001b[33mx\u001b[0mWW\u001b[31m       [ 79%]\u001b[0m\n",
      "tardis/transport/montecarlo/tests/test_nonhomologous.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m              [ 80%]\u001b[0m\n",
      "tardis/transport/montecarlo/tests/test_numba_interface.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[31m        [ 80%]\u001b[0m\n",
      "tardis/transport/montecarlo/tests/test_opacities.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m      [ 81%]\u001b[0m\n",
      "tardis/transport/montecarlo/tests/test_packet.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[33mX\u001b[0m\u001b[33mX\u001b[0m\u001b[33mX\u001b[0m\u001b[33mX\u001b[0m\u001b[33mX\u001b[0m\u001b[31m [ 82%]\n",
      "\u001b[0m\u001b[33mX\u001b[0m\u001b[33mX\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m                                                              [ 83%]\u001b[0m\n",
      "tardis/transport/montecarlo/tests/test_packet_source.py WWWWWWWW\u001b[31m         [ 83%]\u001b[0m\n",
      "tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py \u001b[32m.\u001b[0m\u001b[31m [ 83%]\n",
      "\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m                                                                    [ 83%]\u001b[0m\n",
      "tardis/transport/montecarlo/tests/test_rpacket_tracker.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0mW\u001b[32m.\u001b[0m\u001b[31m         [ 84%]\u001b[0m\n",
      "tardis/transport/montecarlo/tests/test_single_packet_loop.py \u001b[33mx\u001b[0m\u001b[33mx\u001b[0m\u001b[33mx\u001b[0m\u001b[31m         [ 84%]\u001b[0m\n",
      "tardis/transport/montecarlo/tests/test_tracker_utils.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m               [ 84%]\u001b[0m\n",
      "tardis/transport/montecarlo/tests/test_vpacket.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[31m                   [ 84%]\u001b[0m\n",
      "tardis/transport/montecarlo/tests/test_weighted_packet_source.py WWWW\u001b[31m    [ 84%]\u001b[0m\n",
      "tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py \u001b[32m.\u001b[0m\u001b[31m [ 84%]\n",
      "\u001b[0m\u001b[31m                                                                         [ 84%]\u001b[0m\n",
      "tardis/transport/tests/test_doppler_factor.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m         [ 85%]\u001b[0m\n",
      "tardis/visualization/tests/test_plot_util.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0mWW\u001b[31m          [ 86%]\u001b[0m\n",
      "tardis/visualization/tools/tests/test_convergence_plot.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 87%]\n",
      "\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m                                                                   [ 87%]\u001b[0m\n",
      "tardis/visualization/tools/tests/test_lineid_plotter.py \u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33mx\u001b[0m\u001b[33mx\u001b[0m\u001b[31m            [ 88%]\u001b[0m\n",
      "tardis/visualization/tools/tests/test_liv_plot.py WWWWWWWWWWWWWWWWWWWWWW\u001b[31m [ 89%]\n",
      "\u001b[0mWWWWWWWWWWWWW\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0mWWWWWWWW\u001b[31m                                            [ 91%]\u001b[0m\n",
      "tardis/visualization/tools/tests/test_rpacket_plot.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 91%]\n",
      "\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m                                                          [ 92%]\u001b[0m\n",
      "tardis/visualization/tools/tests/test_sdec_plot.py WWWWWWWWWWWWWWWWWWWWW\u001b[31m [ 93%]\n",
      "\u001b[0mWWWWWWWWWWWWWW\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[31m                                          [ 95%]\u001b[0m\n",
      "tardis/visualization/widgets/tests/test_custom_abundance.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33ms\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 96%]\n",
      "\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m                                                                     [ 96%]\u001b[0m\n",
      "tardis/visualization/widgets/tests/test_line_info.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 97%]\n",
      "\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m                                                   [ 98%]\u001b[0m\n",
      "tardis/visualization/widgets/tests/test_shell_info.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 99%]\n",
      "\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m                                                                   [100%]\u001b[0m\n",
      "\n",
      "=================================== FAILURES ===================================\n",
      "\u001b[31m\u001b[1m__________ test_intensity_black_body_cuda[100000000000000.0-10000.0] ___________\u001b[0m\n",
      "\n",
      "nu = 100000000000000.0, temperature = 10000.0\n",
      "\n",
      "    \u001b[0m\u001b[37m@pytest\u001b[39;49;00m.mark.skipif(\u001b[90m\u001b[39;49;00m\n",
      "        \u001b[95mnot\u001b[39;49;00m GPUs_available, reason=\u001b[33m\"\u001b[39;49;00m\u001b[33mNo GPU is available to test CUDA function\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "    )\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[37m@pytest\u001b[39;49;00m.mark.parametrize(\u001b[90m\u001b[39;49;00m\n",
      "        [\u001b[33m\"\u001b[39;49;00m\u001b[33mnu\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m, \u001b[33m\"\u001b[39;49;00m\u001b[33mtemperature\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m],\u001b[90m\u001b[39;49;00m\n",
      "        [\u001b[90m\u001b[39;49;00m\n",
      "            (\u001b[94m1e14\u001b[39;49;00m, \u001b[94m1e4\u001b[39;49;00m),\u001b[90m\u001b[39;49;00m\n",
      "            (\u001b[94m0\u001b[39;49;00m, \u001b[94m1\u001b[39;49;00m),\u001b[90m\u001b[39;49;00m\n",
      "            (\u001b[94m1\u001b[39;49;00m, \u001b[94m1\u001b[39;49;00m),\u001b[90m\u001b[39;49;00m\n",
      "        ],\u001b[90m\u001b[39;49;00m\n",
      "    )\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[94mdef\u001b[39;49;00m\u001b[90m \u001b[39;49;00m\u001b[92mtest_intensity_black_body_cuda\u001b[39;49;00m(nu, temperature):\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[90m    \u001b[39;49;00m\u001b[33m\"\"\"\u001b[39;49;00m\n",
      "    \u001b[33m    Initializes the test of the cuda version\u001b[39;49;00m\n",
      "    \u001b[33m    against the numba implementation of the\u001b[39;49;00m\n",
      "    \u001b[33m    intensity_black_body to 15 decimals. This\u001b[39;49;00m\n",
      "    \u001b[33m    is done as both results have 15 digits of precision.\u001b[39;49;00m\n",
      "    \u001b[33m    \"\"\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "        actual = np.zeros(\u001b[94m3\u001b[39;49;00m)\u001b[90m\u001b[39;49;00m\n",
      ">       black_body_caller[\u001b[94m1\u001b[39;49;00m, \u001b[94m3\u001b[39;49;00m](nu, temperature, actual)\u001b[90m\u001b[39;49;00m\n",
      "\n",
      "\u001b[1m\u001b[31mtardis/spectrum/formal_integral/tests/test_cuda_formal_integral.py\u001b[0m:48: \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/cuda/dispatcher.py\u001b[0m:539: in __call__\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m \u001b[96mself\u001b[39;49;00m.dispatcher.call(args, \u001b[96mself\u001b[39;49;00m.griddim, \u001b[96mself\u001b[39;49;00m.blockdim,\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/cuda/dispatcher.py\u001b[0m:681: in call\n",
      "    \u001b[0mkernel = _dispatcher.Dispatcher._cuda_call(\u001b[96mself\u001b[39;49;00m, *args)\u001b[90m\u001b[39;49;00m\n",
      "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/cuda/dispatcher.py\u001b[0m:689: in _compile_for_args\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m \u001b[96mself\u001b[39;49;00m.compile(\u001b[96mtuple\u001b[39;49;00m(argtypes))\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/cuda/dispatcher.py\u001b[0m:932: in compile\n",
      "    \u001b[0mkernel = _Kernel(\u001b[96mself\u001b[39;49;00m.py_func, argtypes, **\u001b[96mself\u001b[39;49;00m.targetoptions)\u001b[90m\u001b[39;49;00m\n",
      "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/core/compiler_lock.py\u001b[0m:35: in _acquire_compile_lock\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m func(*args, **kwargs)\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/cuda/dispatcher.py\u001b[0m:83: in __init__\n",
      "    \u001b[0mcres = compile_cuda(\u001b[96mself\u001b[39;49;00m.py_func, types.void, \u001b[96mself\u001b[39;49;00m.argtypes,\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/core/compiler_lock.py\u001b[0m:35: in _acquire_compile_lock\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m func(*args, **kwargs)\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/cuda/compiler.py\u001b[0m:196: in compile_cuda\n",
      "    \u001b[0mcres = compiler.compile_extra(typingctx=typingctx,\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/core/compiler.py\u001b[0m:739: in compile_extra\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m pipeline.compile_extra(func)\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/core/compiler.py\u001b[0m:439: in compile_extra\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m \u001b[96mself\u001b[39;49;00m._compile_bytecode()\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/core/compiler.py\u001b[0m:505: in _compile_bytecode\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m \u001b[96mself\u001b[39;49;00m._compile_core()\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/core/compiler.py\u001b[0m:484: in _compile_core\n",
      "    \u001b[0m\u001b[94mraise\u001b[39;49;00m e\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/core/compiler.py\u001b[0m:473: in _compile_core\n",
      "    \u001b[0mpm.run(\u001b[96mself\u001b[39;49;00m.state)\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/core/compiler_machinery.py\u001b[0m:367: in run\n",
      "    \u001b[0m\u001b[94mraise\u001b[39;49;00m patched_exception\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/core/compiler_machinery.py\u001b[0m:356: in run\n",
      "    \u001b[0m\u001b[96mself\u001b[39;49;00m._runPass(idx, pass_inst, state)\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/core/compiler_lock.py\u001b[0m:35: in _acquire_compile_lock\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m func(*args, **kwargs)\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/core/compiler_machinery.py\u001b[0m:311: in _runPass\n",
      "    \u001b[0mmutated |= check(pss.run_pass, internal_state)\u001b[90m\u001b[39;49;00m\n",
      "               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/core/compiler_machinery.py\u001b[0m:272: in check\n",
      "    \u001b[0mmangled = func(compiler_state)\u001b[90m\u001b[39;49;00m\n",
      "              ^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/core/typed_passes.py\u001b[0m:112: in run_pass\n",
      "    \u001b[0mtypemap, return_type, calltypes, errs = type_inference_stage(\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/core/typed_passes.py\u001b[0m:93: in type_inference_stage\n",
      "    \u001b[0merrs = infer.propagate(raise_errors=raise_errors)\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      "\n",
      "self = <numba.core.typeinfer.TypeInferer object at 0x7059e0f42dd0>\n",
      "raise_errors = True\n",
      "\n",
      "    \u001b[0m\u001b[94mdef\u001b[39;49;00m\u001b[90m \u001b[39;49;00m\u001b[92mpropagate\u001b[39;49;00m(\u001b[96mself\u001b[39;49;00m, raise_errors=\u001b[94mTrue\u001b[39;49;00m):\u001b[90m\u001b[39;49;00m\n",
      "        newtoken = \u001b[96mself\u001b[39;49;00m.get_state_token()\u001b[90m\u001b[39;49;00m\n",
      "        oldtoken = \u001b[94mNone\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "        \u001b[90m# Since the number of types are finite, the typesets will eventually\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "        \u001b[90m# stop growing.\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[90m\u001b[39;49;00m\n",
      "        \u001b[94mwhile\u001b[39;49;00m newtoken != oldtoken:\u001b[90m\u001b[39;49;00m\n",
      "            \u001b[96mself\u001b[39;49;00m.debug.propagate_started()\u001b[90m\u001b[39;49;00m\n",
      "            oldtoken = newtoken\u001b[90m\u001b[39;49;00m\n",
      "            \u001b[90m# Errors can appear when the type set is incomplete; only\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "            \u001b[90m# raise them when there is no progress anymore.\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "            errors = \u001b[96mself\u001b[39;49;00m.constraints.propagate(\u001b[96mself\u001b[39;49;00m)\u001b[90m\u001b[39;49;00m\n",
      "            newtoken = \u001b[96mself\u001b[39;49;00m.get_state_token()\u001b[90m\u001b[39;49;00m\n",
      "            \u001b[96mself\u001b[39;49;00m.debug.propagate_finished()\u001b[90m\u001b[39;49;00m\n",
      "        \u001b[94mif\u001b[39;49;00m errors:\u001b[90m\u001b[39;49;00m\n",
      "            \u001b[94mif\u001b[39;49;00m raise_errors:\u001b[90m\u001b[39;49;00m\n",
      "                force_lit_args = [e \u001b[94mfor\u001b[39;49;00m e \u001b[95min\u001b[39;49;00m errors\u001b[90m\u001b[39;49;00m\n",
      "                                  \u001b[94mif\u001b[39;49;00m \u001b[96misinstance\u001b[39;49;00m(e, ForceLiteralArg)]\u001b[90m\u001b[39;49;00m\n",
      "                \u001b[94mif\u001b[39;49;00m \u001b[95mnot\u001b[39;49;00m force_lit_args:\u001b[90m\u001b[39;49;00m\n",
      ">                   \u001b[94mraise\u001b[39;49;00m errors[\u001b[94m0\u001b[39;49;00m]\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31mE                   numba.core.errors.TypingError: Failed in cuda mode pipeline (step: nopython frontend)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m\u001b[1m\u001b[1mFailed in cuda mode pipeline (step: nopython frontend)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m\u001b[1m\u001b[1mUse of unsupported NumPy function 'numpy.exp' or unsupported use of the function.\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   File \"tardis/spectrum/formal_integral/base.py\", line 104:\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1mdef intensity_black_body(nu, temperature):\u001b[0m\n",
      "\u001b[1m\u001b[31mE                       <source elided>\u001b[0m\n",
      "\u001b[1m\u001b[31mE                       coefficient = 2 * H_CGS * C_INV * C_INV\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m    return coefficient * nu * nu * nu / (np.exp(H_CGS * nu * beta_rad) - 1)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m    \u001b[1m^\u001b[0m\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[1mDuring: typing of get attribute at /home/riddhigangbhoj/tardis-work/tardis/tardis/spectrum/formal_integral/base.py (104)\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   File \"tardis/spectrum/formal_integral/base.py\", line 104:\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1mdef intensity_black_body(nu, temperature):\u001b[0m\n",
      "\u001b[1m\u001b[31mE                       <source elided>\u001b[0m\n",
      "\u001b[1m\u001b[31mE                       coefficient = 2 * H_CGS * C_INV * C_INV\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m    return coefficient * nu * nu * nu / (np.exp(H_CGS * nu * beta_rad) - 1)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m    \u001b[1m^\u001b[0m\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[1mDuring: Pass nopython_type_inference\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[1mDuring: resolving callee type: type(CUDADispatcher(<function intensity_black_body at 0x705a182ee200>))\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[1mDuring: typing of call at /home/riddhigangbhoj/tardis-work/tardis/tardis/spectrum/formal_integral/tests/test_cuda_formal_integral.py (22)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   File \"tardis/spectrum/formal_integral/tests/test_cuda_formal_integral.py\", line 22:\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1mdef black_body_caller(nu, temperature, actual):\u001b[0m\n",
      "\u001b[1m\u001b[31mE                       <source elided>\u001b[0m\n",
      "\u001b[1m\u001b[31mE                       x = cuda.grid(1)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m    actual[x] = formal_integral_cuda.intensity_black_body_cuda(nu, temperature)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m    \u001b[1m^\u001b[0m\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[1mDuring: Pass nopython_type_inference\u001b[0m\u001b[0m\n",
      "\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/core/typeinfer.py\u001b[0m:1074: TypingError\n",
      "\u001b[31m\u001b[1m_____________________ test_intensity_black_body_cuda[0-1] ______________________\u001b[0m\n",
      "\n",
      "nu = 0, temperature = 1\n",
      "\n",
      "    \u001b[0m\u001b[37m@pytest\u001b[39;49;00m.mark.skipif(\u001b[90m\u001b[39;49;00m\n",
      "        \u001b[95mnot\u001b[39;49;00m GPUs_available, reason=\u001b[33m\"\u001b[39;49;00m\u001b[33mNo GPU is available to test CUDA function\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "    )\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[37m@pytest\u001b[39;49;00m.mark.parametrize(\u001b[90m\u001b[39;49;00m\n",
      "        [\u001b[33m\"\u001b[39;49;00m\u001b[33mnu\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m, \u001b[33m\"\u001b[39;49;00m\u001b[33mtemperature\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m],\u001b[90m\u001b[39;49;00m\n",
      "        [\u001b[90m\u001b[39;49;00m\n",
      "            (\u001b[94m1e14\u001b[39;49;00m, \u001b[94m1e4\u001b[39;49;00m),\u001b[90m\u001b[39;49;00m\n",
      "            (\u001b[94m0\u001b[39;49;00m, \u001b[94m1\u001b[39;49;00m),\u001b[90m\u001b[39;49;00m\n",
      "            (\u001b[94m1\u001b[39;49;00m, \u001b[94m1\u001b[39;49;00m),\u001b[90m\u001b[39;49;00m\n",
      "        ],\u001b[90m\u001b[39;49;00m\n",
      "    )\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[94mdef\u001b[39;49;00m\u001b[90m \u001b[39;49;00m\u001b[92mtest_intensity_black_body_cuda\u001b[39;49;00m(nu, temperature):\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[90m    \u001b[39;49;00m\u001b[33m\"\"\"\u001b[39;49;00m\n",
      "    \u001b[33m    Initializes the test of the cuda version\u001b[39;49;00m\n",
      "    \u001b[33m    against the numba implementation of the\u001b[39;49;00m\n",
      "    \u001b[33m    intensity_black_body to 15 decimals. This\u001b[39;49;00m\n",
      "    \u001b[33m    is done as both results have 15 digits of precision.\u001b[39;49;00m\n",
      "    \u001b[33m    \"\"\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "        actual = np.zeros(\u001b[94m3\u001b[39;49;00m)\u001b[90m\u001b[39;49;00m\n",
      ">       black_body_caller[\u001b[94m1\u001b[39;49;00m, \u001b[94m3\u001b[39;49;00m](nu, temperature, actual)\u001b[90m\u001b[39;49;00m\n",
      "\n",
      "\u001b[1m\u001b[31mtardis/spectrum/formal_integral/tests/test_cuda_formal_integral.py\u001b[0m:48: \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/cuda/dispatcher.py\u001b[0m:539: in __call__\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m \u001b[96mself\u001b[39;49;00m.dispatcher.call(args, \u001b[96mself\u001b[39;49;00m.griddim, \u001b[96mself\u001b[39;49;00m.blockdim,\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/cuda/dispatcher.py\u001b[0m:681: in call\n",
      "    \u001b[0mkernel = _dispatcher.Dispatcher._cuda_call(\u001b[96mself\u001b[39;49;00m, *args)\u001b[90m\u001b[39;49;00m\n",
      "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/cuda/dispatcher.py\u001b[0m:689: in _compile_for_args\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m \u001b[96mself\u001b[39;49;00m.compile(\u001b[96mtuple\u001b[39;49;00m(argtypes))\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/cuda/dispatcher.py\u001b[0m:932: in compile\n",
      "    \u001b[0mkernel = _Kernel(\u001b[96mself\u001b[39;49;00m.py_func, argtypes, **\u001b[96mself\u001b[39;49;00m.targetoptions)\u001b[90m\u001b[39;49;00m\n",
      "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/core/compiler_lock.py\u001b[0m:35: in _acquire_compile_lock\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m func(*args, **kwargs)\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/cuda/dispatcher.py\u001b[0m:83: in __init__\n",
      "    \u001b[0mcres = compile_cuda(\u001b[96mself\u001b[39;49;00m.py_func, types.void, \u001b[96mself\u001b[39;49;00m.argtypes,\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/core/compiler_lock.py\u001b[0m:35: in _acquire_compile_lock\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m func(*args, **kwargs)\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/cuda/compiler.py\u001b[0m:196: in compile_cuda\n",
      "    \u001b[0mcres = compiler.compile_extra(typingctx=typingctx,\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/core/compiler.py\u001b[0m:739: in compile_extra\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m pipeline.compile_extra(func)\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/core/compiler.py\u001b[0m:439: in compile_extra\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m \u001b[96mself\u001b[39;49;00m._compile_bytecode()\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/core/compiler.py\u001b[0m:505: in _compile_bytecode\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m \u001b[96mself\u001b[39;49;00m._compile_core()\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/core/compiler.py\u001b[0m:484: in _compile_core\n",
      "    \u001b[0m\u001b[94mraise\u001b[39;49;00m e\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/core/compiler.py\u001b[0m:473: in _compile_core\n",
      "    \u001b[0mpm.run(\u001b[96mself\u001b[39;49;00m.state)\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/core/compiler_machinery.py\u001b[0m:367: in run\n",
      "    \u001b[0m\u001b[94mraise\u001b[39;49;00m patched_exception\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/core/compiler_machinery.py\u001b[0m:356: in run\n",
      "    \u001b[0m\u001b[96mself\u001b[39;49;00m._runPass(idx, pass_inst, state)\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/core/compiler_lock.py\u001b[0m:35: in _acquire_compile_lock\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m func(*args, **kwargs)\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/core/compiler_machinery.py\u001b[0m:311: in _runPass\n",
      "    \u001b[0mmutated |= check(pss.run_pass, internal_state)\u001b[90m\u001b[39;49;00m\n",
      "               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/core/compiler_machinery.py\u001b[0m:272: in check\n",
      "    \u001b[0mmangled = func(compiler_state)\u001b[90m\u001b[39;49;00m\n",
      "              ^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/core/typed_passes.py\u001b[0m:112: in run_pass\n",
      "    \u001b[0mtypemap, return_type, calltypes, errs = type_inference_stage(\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/core/typed_passes.py\u001b[0m:93: in type_inference_stage\n",
      "    \u001b[0merrs = infer.propagate(raise_errors=raise_errors)\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      "\n",
      "self = <numba.core.typeinfer.TypeInferer object at 0x7058840bc940>\n",
      "raise_errors = True\n",
      "\n",
      "    \u001b[0m\u001b[94mdef\u001b[39;49;00m\u001b[90m \u001b[39;49;00m\u001b[92mpropagate\u001b[39;49;00m(\u001b[96mself\u001b[39;49;00m, raise_errors=\u001b[94mTrue\u001b[39;49;00m):\u001b[90m\u001b[39;49;00m\n",
      "        newtoken = \u001b[96mself\u001b[39;49;00m.get_state_token()\u001b[90m\u001b[39;49;00m\n",
      "        oldtoken = \u001b[94mNone\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "        \u001b[90m# Since the number of types are finite, the typesets will eventually\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "        \u001b[90m# stop growing.\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[90m\u001b[39;49;00m\n",
      "        \u001b[94mwhile\u001b[39;49;00m newtoken != oldtoken:\u001b[90m\u001b[39;49;00m\n",
      "            \u001b[96mself\u001b[39;49;00m.debug.propagate_started()\u001b[90m\u001b[39;49;00m\n",
      "            oldtoken = newtoken\u001b[90m\u001b[39;49;00m\n",
      "            \u001b[90m# Errors can appear when the type set is incomplete; only\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "            \u001b[90m# raise them when there is no progress anymore.\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "            errors = \u001b[96mself\u001b[39;49;00m.constraints.propagate(\u001b[96mself\u001b[39;49;00m)\u001b[90m\u001b[39;49;00m\n",
      "            newtoken = \u001b[96mself\u001b[39;49;00m.get_state_token()\u001b[90m\u001b[39;49;00m\n",
      "            \u001b[96mself\u001b[39;49;00m.debug.propagate_finished()\u001b[90m\u001b[39;49;00m\n",
      "        \u001b[94mif\u001b[39;49;00m errors:\u001b[90m\u001b[39;49;00m\n",
      "            \u001b[94mif\u001b[39;49;00m raise_errors:\u001b[90m\u001b[39;49;00m\n",
      "                force_lit_args = [e \u001b[94mfor\u001b[39;49;00m e \u001b[95min\u001b[39;49;00m errors\u001b[90m\u001b[39;49;00m\n",
      "                                  \u001b[94mif\u001b[39;49;00m \u001b[96misinstance\u001b[39;49;00m(e, ForceLiteralArg)]\u001b[90m\u001b[39;49;00m\n",
      "                \u001b[94mif\u001b[39;49;00m \u001b[95mnot\u001b[39;49;00m force_lit_args:\u001b[90m\u001b[39;49;00m\n",
      ">                   \u001b[94mraise\u001b[39;49;00m errors[\u001b[94m0\u001b[39;49;00m]\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31mE                   numba.core.errors.TypingError: Failed in cuda mode pipeline (step: nopython frontend)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m\u001b[1m\u001b[1mFailed in cuda mode pipeline (step: nopython frontend)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m\u001b[1m\u001b[1mUse of unsupported NumPy function 'numpy.exp' or unsupported use of the function.\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   File \"tardis/spectrum/formal_integral/base.py\", line 104:\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1mdef intensity_black_body(nu, temperature):\u001b[0m\n",
      "\u001b[1m\u001b[31mE                       <source elided>\u001b[0m\n",
      "\u001b[1m\u001b[31mE                       coefficient = 2 * H_CGS * C_INV * C_INV\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m    return coefficient * nu * nu * nu / (np.exp(H_CGS * nu * beta_rad) - 1)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m    \u001b[1m^\u001b[0m\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[1mDuring: typing of get attribute at /home/riddhigangbhoj/tardis-work/tardis/tardis/spectrum/formal_integral/base.py (104)\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   File \"tardis/spectrum/formal_integral/base.py\", line 104:\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1mdef intensity_black_body(nu, temperature):\u001b[0m\n",
      "\u001b[1m\u001b[31mE                       <source elided>\u001b[0m\n",
      "\u001b[1m\u001b[31mE                       coefficient = 2 * H_CGS * C_INV * C_INV\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m    return coefficient * nu * nu * nu / (np.exp(H_CGS * nu * beta_rad) - 1)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m    \u001b[1m^\u001b[0m\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[1mDuring: Pass nopython_type_inference\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[1mDuring: resolving callee type: type(CUDADispatcher(<function intensity_black_body at 0x705a182ee200>))\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[1mDuring: typing of call at /home/riddhigangbhoj/tardis-work/tardis/tardis/spectrum/formal_integral/tests/test_cuda_formal_integral.py (22)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   File \"tardis/spectrum/formal_integral/tests/test_cuda_formal_integral.py\", line 22:\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1mdef black_body_caller(nu, temperature, actual):\u001b[0m\n",
      "\u001b[1m\u001b[31mE                       <source elided>\u001b[0m\n",
      "\u001b[1m\u001b[31mE                       x = cuda.grid(1)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m    actual[x] = formal_integral_cuda.intensity_black_body_cuda(nu, temperature)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m    \u001b[1m^\u001b[0m\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[1mDuring: Pass nopython_type_inference\u001b[0m\u001b[0m\n",
      "\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/core/typeinfer.py\u001b[0m:1074: TypingError\n",
      "\u001b[31m\u001b[1m_____________________ test_intensity_black_body_cuda[1-1] ______________________\u001b[0m\n",
      "\n",
      "nu = 1, temperature = 1\n",
      "\n",
      "    \u001b[0m\u001b[37m@pytest\u001b[39;49;00m.mark.skipif(\u001b[90m\u001b[39;49;00m\n",
      "        \u001b[95mnot\u001b[39;49;00m GPUs_available, reason=\u001b[33m\"\u001b[39;49;00m\u001b[33mNo GPU is available to test CUDA function\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "    )\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[37m@pytest\u001b[39;49;00m.mark.parametrize(\u001b[90m\u001b[39;49;00m\n",
      "        [\u001b[33m\"\u001b[39;49;00m\u001b[33mnu\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m, \u001b[33m\"\u001b[39;49;00m\u001b[33mtemperature\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m],\u001b[90m\u001b[39;49;00m\n",
      "        [\u001b[90m\u001b[39;49;00m\n",
      "            (\u001b[94m1e14\u001b[39;49;00m, \u001b[94m1e4\u001b[39;49;00m),\u001b[90m\u001b[39;49;00m\n",
      "            (\u001b[94m0\u001b[39;49;00m, \u001b[94m1\u001b[39;49;00m),\u001b[90m\u001b[39;49;00m\n",
      "            (\u001b[94m1\u001b[39;49;00m, \u001b[94m1\u001b[39;49;00m),\u001b[90m\u001b[39;49;00m\n",
      "        ],\u001b[90m\u001b[39;49;00m\n",
      "    )\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[94mdef\u001b[39;49;00m\u001b[90m \u001b[39;49;00m\u001b[92mtest_intensity_black_body_cuda\u001b[39;49;00m(nu, temperature):\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[90m    \u001b[39;49;00m\u001b[33m\"\"\"\u001b[39;49;00m\n",
      "    \u001b[33m    Initializes the test of the cuda version\u001b[39;49;00m\n",
      "    \u001b[33m    against the numba implementation of the\u001b[39;49;00m\n",
      "    \u001b[33m    intensity_black_body to 15 decimals. This\u001b[39;49;00m\n",
      "    \u001b[33m    is done as both results have 15 digits of precision.\u001b[39;49;00m\n",
      "    \u001b[33m    \"\"\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "        actual = np.zeros(\u001b[94m3\u001b[39;49;00m)\u001b[90m\u001b[39;49;00m\n",
      ">       black_body_caller[\u001b[94m1\u001b[39;49;00m, \u001b[94m3\u001b[39;49;00m](nu, temperature, actual)\u001b[90m\u001b[39;49;00m\n",
      "\n",
      "\u001b[1m\u001b[31mtardis/spectrum/formal_integral/tests/test_cuda_formal_integral.py\u001b[0m:48: \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/cuda/dispatcher.py\u001b[0m:539: in __call__\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m \u001b[96mself\u001b[39;49;00m.dispatcher.call(args, \u001b[96mself\u001b[39;49;00m.griddim, \u001b[96mself\u001b[39;49;00m.blockdim,\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/cuda/dispatcher.py\u001b[0m:681: in call\n",
      "    \u001b[0mkernel = _dispatcher.Dispatcher._cuda_call(\u001b[96mself\u001b[39;49;00m, *args)\u001b[90m\u001b[39;49;00m\n",
      "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/cuda/dispatcher.py\u001b[0m:689: in _compile_for_args\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m \u001b[96mself\u001b[39;49;00m.compile(\u001b[96mtuple\u001b[39;49;00m(argtypes))\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/cuda/dispatcher.py\u001b[0m:932: in compile\n",
      "    \u001b[0mkernel = _Kernel(\u001b[96mself\u001b[39;49;00m.py_func, argtypes, **\u001b[96mself\u001b[39;49;00m.targetoptions)\u001b[90m\u001b[39;49;00m\n",
      "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/core/compiler_lock.py\u001b[0m:35: in _acquire_compile_lock\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m func(*args, **kwargs)\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/cuda/dispatcher.py\u001b[0m:83: in __init__\n",
      "    \u001b[0mcres = compile_cuda(\u001b[96mself\u001b[39;49;00m.py_func, types.void, \u001b[96mself\u001b[39;49;00m.argtypes,\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/core/compiler_lock.py\u001b[0m:35: in _acquire_compile_lock\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m func(*args, **kwargs)\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/cuda/compiler.py\u001b[0m:196: in compile_cuda\n",
      "    \u001b[0mcres = compiler.compile_extra(typingctx=typingctx,\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/core/compiler.py\u001b[0m:739: in compile_extra\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m pipeline.compile_extra(func)\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/core/compiler.py\u001b[0m:439: in compile_extra\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m \u001b[96mself\u001b[39;49;00m._compile_bytecode()\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/core/compiler.py\u001b[0m:505: in _compile_bytecode\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m \u001b[96mself\u001b[39;49;00m._compile_core()\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/core/compiler.py\u001b[0m:484: in _compile_core\n",
      "    \u001b[0m\u001b[94mraise\u001b[39;49;00m e\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/core/compiler.py\u001b[0m:473: in _compile_core\n",
      "    \u001b[0mpm.run(\u001b[96mself\u001b[39;49;00m.state)\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/core/compiler_machinery.py\u001b[0m:367: in run\n",
      "    \u001b[0m\u001b[94mraise\u001b[39;49;00m patched_exception\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/core/compiler_machinery.py\u001b[0m:356: in run\n",
      "    \u001b[0m\u001b[96mself\u001b[39;49;00m._runPass(idx, pass_inst, state)\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/core/compiler_lock.py\u001b[0m:35: in _acquire_compile_lock\n",
      "    \u001b[0m\u001b[94mreturn\u001b[39;49;00m func(*args, **kwargs)\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/core/compiler_machinery.py\u001b[0m:311: in _runPass\n",
      "    \u001b[0mmutated |= check(pss.run_pass, internal_state)\u001b[90m\u001b[39;49;00m\n",
      "               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/core/compiler_machinery.py\u001b[0m:272: in check\n",
      "    \u001b[0mmangled = func(compiler_state)\u001b[90m\u001b[39;49;00m\n",
      "              ^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/core/typed_passes.py\u001b[0m:112: in run_pass\n",
      "    \u001b[0mtypemap, return_type, calltypes, errs = type_inference_stage(\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/core/typed_passes.py\u001b[0m:93: in type_inference_stage\n",
      "    \u001b[0merrs = infer.propagate(raise_errors=raise_errors)\u001b[90m\u001b[39;49;00m\n",
      "           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      "\n",
      "self = <numba.core.typeinfer.TypeInferer object at 0x7059d9e342c0>\n",
      "raise_errors = True\n",
      "\n",
      "    \u001b[0m\u001b[94mdef\u001b[39;49;00m\u001b[90m \u001b[39;49;00m\u001b[92mpropagate\u001b[39;49;00m(\u001b[96mself\u001b[39;49;00m, raise_errors=\u001b[94mTrue\u001b[39;49;00m):\u001b[90m\u001b[39;49;00m\n",
      "        newtoken = \u001b[96mself\u001b[39;49;00m.get_state_token()\u001b[90m\u001b[39;49;00m\n",
      "        oldtoken = \u001b[94mNone\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "        \u001b[90m# Since the number of types are finite, the typesets will eventually\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "        \u001b[90m# stop growing.\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[90m\u001b[39;49;00m\n",
      "        \u001b[94mwhile\u001b[39;49;00m newtoken != oldtoken:\u001b[90m\u001b[39;49;00m\n",
      "            \u001b[96mself\u001b[39;49;00m.debug.propagate_started()\u001b[90m\u001b[39;49;00m\n",
      "            oldtoken = newtoken\u001b[90m\u001b[39;49;00m\n",
      "            \u001b[90m# Errors can appear when the type set is incomplete; only\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "            \u001b[90m# raise them when there is no progress anymore.\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "            errors = \u001b[96mself\u001b[39;49;00m.constraints.propagate(\u001b[96mself\u001b[39;49;00m)\u001b[90m\u001b[39;49;00m\n",
      "            newtoken = \u001b[96mself\u001b[39;49;00m.get_state_token()\u001b[90m\u001b[39;49;00m\n",
      "            \u001b[96mself\u001b[39;49;00m.debug.propagate_finished()\u001b[90m\u001b[39;49;00m\n",
      "        \u001b[94mif\u001b[39;49;00m errors:\u001b[90m\u001b[39;49;00m\n",
      "            \u001b[94mif\u001b[39;49;00m raise_errors:\u001b[90m\u001b[39;49;00m\n",
      "                force_lit_args = [e \u001b[94mfor\u001b[39;49;00m e \u001b[95min\u001b[39;49;00m errors\u001b[90m\u001b[39;49;00m\n",
      "                                  \u001b[94mif\u001b[39;49;00m \u001b[96misinstance\u001b[39;49;00m(e, ForceLiteralArg)]\u001b[90m\u001b[39;49;00m\n",
      "                \u001b[94mif\u001b[39;49;00m \u001b[95mnot\u001b[39;49;00m force_lit_args:\u001b[90m\u001b[39;49;00m\n",
      ">                   \u001b[94mraise\u001b[39;49;00m errors[\u001b[94m0\u001b[39;49;00m]\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31mE                   numba.core.errors.TypingError: Failed in cuda mode pipeline (step: nopython frontend)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m\u001b[1m\u001b[1mFailed in cuda mode pipeline (step: nopython frontend)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m\u001b[1m\u001b[1mUse of unsupported NumPy function 'numpy.exp' or unsupported use of the function.\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   File \"tardis/spectrum/formal_integral/base.py\", line 104:\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1mdef intensity_black_body(nu, temperature):\u001b[0m\n",
      "\u001b[1m\u001b[31mE                       <source elided>\u001b[0m\n",
      "\u001b[1m\u001b[31mE                       coefficient = 2 * H_CGS * C_INV * C_INV\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m    return coefficient * nu * nu * nu / (np.exp(H_CGS * nu * beta_rad) - 1)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m    \u001b[1m^\u001b[0m\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[1mDuring: typing of get attribute at /home/riddhigangbhoj/tardis-work/tardis/tardis/spectrum/formal_integral/base.py (104)\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   File \"tardis/spectrum/formal_integral/base.py\", line 104:\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1mdef intensity_black_body(nu, temperature):\u001b[0m\n",
      "\u001b[1m\u001b[31mE                       <source elided>\u001b[0m\n",
      "\u001b[1m\u001b[31mE                       coefficient = 2 * H_CGS * C_INV * C_INV\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m    return coefficient * nu * nu * nu / (np.exp(H_CGS * nu * beta_rad) - 1)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m    \u001b[1m^\u001b[0m\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[1mDuring: Pass nopython_type_inference\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[1mDuring: resolving callee type: type(CUDADispatcher(<function intensity_black_body at 0x705a182ee200>))\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[1mDuring: typing of call at /home/riddhigangbhoj/tardis-work/tardis/tardis/spectrum/formal_integral/tests/test_cuda_formal_integral.py (22)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   File \"tardis/spectrum/formal_integral/tests/test_cuda_formal_integral.py\", line 22:\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1mdef black_body_caller(nu, temperature, actual):\u001b[0m\n",
      "\u001b[1m\u001b[31mE                       <source elided>\u001b[0m\n",
      "\u001b[1m\u001b[31mE                       x = cuda.grid(1)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[1m    actual[x] = formal_integral_cuda.intensity_black_body_cuda(nu, temperature)\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m    \u001b[1m^\u001b[0m\u001b[0m\u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\n",
      "\u001b[1m\u001b[31mE                   \u001b[0m\u001b[1mDuring: Pass nopython_type_inference\u001b[0m\u001b[0m\n",
      "\n",
      "\u001b[1m\u001b[31m../../.conda/envs/tardis-test-fa4c4ea9/lib/python3.13/site-packages/numba/core/typeinfer.py\u001b[0m:1074: TypingError\n",
      "\u001b[31m\u001b[1m_____________________ test_full_formal_integral[200000-5] ______________________\u001b[0m\n",
      "\n",
      "no_of_packets = 200000, iterations = 5\n",
      "config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}\n",
      "simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7059ec0daf90>\n",
      "\n",
      "    \u001b[0m\u001b[37m@pytest\u001b[39;49;00m.mark.skipif(\u001b[90m\u001b[39;49;00m\n",
      "        \u001b[95mnot\u001b[39;49;00m GPUs_available, reason=\u001b[33m\"\u001b[39;49;00m\u001b[33mNo GPU is available to test CUDA function\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "    )\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[37m@pytest\u001b[39;49;00m.mark.parametrize([\u001b[33m\"\u001b[39;49;00m\u001b[33mno_of_packets\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m, \u001b[33m\"\u001b[39;49;00m\u001b[33miterations\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m], [(\u001b[94m200000\u001b[39;49;00m, \u001b[94m5\u001b[39;49;00m)])\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[94mdef\u001b[39;49;00m\u001b[90m \u001b[39;49;00m\u001b[92mtest_full_formal_integral\u001b[39;49;00m(\u001b[90m\u001b[39;49;00m\n",
      "        no_of_packets, iterations, config_verysimple, simulation_verysimple\u001b[90m\u001b[39;49;00m\n",
      "    ):\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[90m    \u001b[39;49;00m\u001b[33m\"\"\"\u001b[39;49;00m\n",
      "    \u001b[33m    This function initializes both the cuda and numba formal_integrator,\u001b[39;49;00m\n",
      "    \u001b[33m    and the runs them and compares results to the 15th decimal place.\u001b[39;49;00m\n",
      "    \u001b[33m    This is done as both results have 15 digits of precision.\u001b[39;49;00m\n",
      "    \u001b[33m    \"\"\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "        sim = simulation_verysimple\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[90m\u001b[39;49;00m\n",
      "        formal_integrator_numba = FormalIntegrator(\u001b[90m\u001b[39;49;00m\n",
      "            sim.simulation_state, sim.plasma, sim.transport\u001b[90m\u001b[39;49;00m\n",
      "        )\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[90m\u001b[39;49;00m\n",
      "        formal_integrator_cuda = FormalIntegrator(\u001b[90m\u001b[39;49;00m\n",
      "            sim.simulation_state, sim.plasma, sim.transport\u001b[90m\u001b[39;49;00m\n",
      "        )\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[90m\u001b[39;49;00m\n",
      "        \u001b[90m# The function calculate_spectrum sets this property, but in order to test the CUDA.\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "        \u001b[90m# version it is done manually, as well as to speed up the test.\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "        formal_integrator_numba.interpolate_shells = \u001b[96mmax\u001b[39;49;00m(\u001b[90m\u001b[39;49;00m\n",
      "            \u001b[94m2\u001b[39;49;00m * formal_integrator_numba.simulation_state.no_of_shells, \u001b[94m80\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "        )\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[90m\u001b[39;49;00m\n",
      "        formal_integrator_cuda.interpolate_shells = \u001b[96mmax\u001b[39;49;00m(\u001b[90m\u001b[39;49;00m\n",
      "            \u001b[94m2\u001b[39;49;00m * formal_integrator_cuda.simulation_state.no_of_shells, \u001b[94m80\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "        )\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[90m\u001b[39;49;00m\n",
      ">       res_numba = make_source_function(\u001b[90m\u001b[39;49;00m\n",
      "            formal_integrator_numba.simulation_state,\u001b[90m\u001b[39;49;00m\n",
      "            formal_integrator_numba.plasma,\u001b[90m\u001b[39;49;00m\n",
      "            formal_integrator_numba.transport,\u001b[90m\u001b[39;49;00m\n",
      "            formal_integrator_numba.interpolate_shells\u001b[90m\u001b[39;49;00m\n",
      "        )\u001b[90m\u001b[39;49;00m\n",
      "\n",
      "\u001b[1m\u001b[31mtardis/spectrum/formal_integral/tests/test_cuda_formal_integral.py\u001b[0m:329: \n",
      "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n",
      "\n",
      "simulation_state = <tardis.model.base.SimulationState object at 0x7059ebda4a70>\n",
      "opacity_state = <tardis.plasma.base.BasePlasma object at 0x7059ec0d8d70>\n",
      "transport = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x7059ec0da510>\n",
      "plasma = 80, interpolate_shells = 0\n",
      "\n",
      "    \u001b[0m\u001b[94mdef\u001b[39;49;00m\u001b[90m \u001b[39;49;00m\u001b[92mmake_source_function\u001b[39;49;00m(simulation_state, opacity_state, transport, plasma, interpolate_shells=\u001b[94m0\u001b[39;49;00m):\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[90m    \u001b[39;49;00m\u001b[33m\"\"\"\u001b[39;49;00m\n",
      "    \u001b[33m    Calculates the source function using the line absorption rate estimator `Edotlu_estimator`\u001b[39;49;00m\n",
      "    \u001b[33m\u001b[39;49;00m\n",
      "    \u001b[33m    Formally it calculates the expression ( 1 - exp(-tau_ul) ) S_ul but this product is what we need later,\u001b[39;49;00m\n",
      "    \u001b[33m    so there is no need to factor out the source function explicitly.\u001b[39;49;00m\n",
      "    \u001b[33m    Parameters\u001b[39;49;00m\n",
      "    \u001b[33m    ----------\u001b[39;49;00m\n",
      "    \u001b[33m    simulation_state : tardis.model.SimulationState\u001b[39;49;00m\n",
      "    \u001b[33m    opacity_state : tardis.opacity.OpacityStateNumba\u001b[39;49;00m\n",
      "    \u001b[33m    transport : tardis.transport.montecarlo.MonteCarloTransportSolver\u001b[39;49;00m\n",
      "    \u001b[33m    plasma : tardis.plasma.BasePlasma\u001b[39;49;00m\n",
      "    \u001b[33m    interpolate_shells : int\u001b[39;49;00m\n",
      "    \u001b[33m        Number of shells to interpolate to. If set to 0, no interpolation is performed.\u001b[39;49;00m\n",
      "    \u001b[33m\u001b[39;49;00m\n",
      "    \u001b[33m    Returns\u001b[39;49;00m\n",
      "    \u001b[33m    -------\u001b[39;49;00m\n",
      "    \u001b[33m    Numpy array containing ( 1 - exp(-tau_ul) ) S_ul ordered by wavelength of the transition u -> l\u001b[39;49;00m\n",
      "    \u001b[33m    \"\"\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n",
      "    \u001b[90m\u001b[39;49;00m\n",
      "        montecarlo_transport_state = transport.transport_state\u001b[90m\u001b[39;49;00m\n",
      ">       atomic_data = plasma.atomic_data\u001b[90m\u001b[39;49;00m\n",
      "                      ^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n",
      "\u001b[1m\u001b[31mE       AttributeError: 'int' object has no attribute 'atomic_data'\u001b[0m\n",
      "\n",
      "\u001b[1m\u001b[31mtardis/spectrum/formal_integral/base.py\u001b[0m:128: AttributeError\n",
      "\u001b[36m\u001b[1m=========================== short test summary info ============================\u001b[0m\n",
      "\u001b[31mFAILED\u001b[0m tardis/spectrum/formal_integral/tests/test_cuda_formal_integral.py::\u001b[1mtest_intensity_black_body_cuda[100000000000000.0-10000.0]\u001b[0m - numba.core.errors.TypingError: Failed in cuda mode pipeline (step: nopython...\n",
      "\u001b[31mFAILED\u001b[0m tardis/spectrum/formal_integral/tests/test_cuda_formal_integral.py::\u001b[1mtest_intensity_black_body_cuda[0-1]\u001b[0m - numba.core.errors.TypingError: Failed in cuda mode pipeline (step: nopython...\n",
      "\u001b[31mFAILED\u001b[0m tardis/spectrum/formal_integral/tests/test_cuda_formal_integral.py::\u001b[1mtest_intensity_black_body_cuda[1-1]\u001b[0m - numba.core.errors.TypingError: Failed in cuda mode pipeline (step: nopython...\n",
      "\u001b[31mFAILED\u001b[0m tardis/spectrum/formal_integral/tests/test_cuda_formal_integral.py::\u001b[1mtest_full_formal_integral[200000-5]\u001b[0m - AttributeError: 'int' object has no attribute 'atomic_data'\n",
      "\u001b[31m= \u001b[31m\u001b[1m4 failed\u001b[0m, \u001b[32m648 passed\u001b[0m, \u001b[33m125 skipped\u001b[0m, \u001b[33m2 deselected\u001b[0m, \u001b[33m22 xfailed\u001b[0m, \u001b[33m8 xpassed\u001b[0m, \u001b[33m344 warnings\u001b[0m, \u001b[33m1041 regression data written\u001b[0m\u001b[31m in 795.53s (0:13:15)\u001b[0m\u001b[31m =\u001b[0m\n",
      "\n",
      "\n",
      "ERROR:tardisbase.testing.regression_comparison.run_tests:Stderr: \n",
      "Packets:   ████████████████████████████████████████████████████████████████████\n",
      "\n",
      "Iterations:                                                                    \n",
      "\n",
      "ERROR conda.cli.main_run:execute(127): `conda run python -m pytest tardis --tardis-regression-data=/home/riddhigangbhoj/tardis-work/tardis-regression-data --generate-reference --disable-warnings -m not continuum` failed. (See above for error)\n",
      "\n",
      "INFO:tardisbase.testing.regression_comparison.run_tests:\n",
      "=== Phase 2: Running 'continuum' tests for commit fa4c4ea98055ea3bef24d69feba26fb5f74c2ddf ===\n",
      "INFO:tardisbase.testing.regression_comparison.run_tests:Running continuum tests: conda run -n tardis-test-fa4c4ea9 python -m pytest tardis --tardis-regression-data=/home/riddhigangbhoj/tardis-work/tardis-regression-data --generate-reference --disable-warnings -m continuum\n",
      "WARNING:tardisbase.testing.regression_comparison.run_tests:Tests completed with some failures for commit fa4c4ea98055ea3bef24d69feba26fb5f74c2ddf, but regression data was generated\n",
      "INFO:tardisbase.testing.regression_comparison.run_tests:\n",
      "Processed Tardis Commits:\n",
      "INFO:tardisbase.testing.regression_comparison.run_tests:701bb18916886ecf2797b0dda4843750f69592da\n",
      "INFO:tardisbase.testing.regression_comparison.run_tests:ce43cec0fa5d9255108c90c84659c71d34fb1c26\n",
      "INFO:tardisbase.testing.regression_comparison.run_tests:fa4c4ea98055ea3bef24d69feba26fb5f74c2ddf\n",
      "INFO:tardisbase.testing.regression_comparison.run_tests:\n",
      "Regression Data Commits:\n",
      "INFO:tardisbase.testing.regression_comparison.run_tests:6483eafe2755ef870ef8c5a2b01d58b306818908\n",
      "INFO:tardisbase.testing.regression_comparison.run_tests:2cbdeaf2c183d49707ac09428e70a5c761171bed\n",
      "INFO:tardisbase.testing.regression_comparison.run_tests:77c99381b26b0a1cd453f81fedf92febefa4bc2f\n"
     ]
    }
   ],
   "source": [
    "processed_commits, regression_commits, original_head = run_tests(\n",
    "        **config,\n",
    "        force_recreate=True,\n",
    "        test_path=\"tardis\",\n",
    "        default_curr_env=\"/provide/path/to/default/current/env\",\n",
    "        use_new_envs=True\n",
    "    )"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Case 2: Test specific TARDIS commits\n",
    "\n",
    "Important Note:\n",
    "1. Comment out `n` from config\n",
    "2. `commits_input` is list of `commits` hashes from config \n",
    "3. If tardis commits provided are [1,2,3,4] then the comparison would be [\"2-1\",\"3-2\",\"4-3\"] of the respective regression commits. So, make the list accordingly.\n",
    "4. To forcely recreate new enviornment each time even when enviornment already exist, do `force_recreate` as `True`\n",
    "5. Either provide entire \"tardis\" module or selective path like \"tardis/spectrum/tests/test_spectrum_solver.py\" in `test_path`\n",
    "6. Provide path to default current enviornment in `default_curr_env`\n",
    "7. If you want to use default current enviornment only without creating new enviornment each time, do `use_new_envs` as `False`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# processed_commits, regression_commits, original_head = run_tests(\n",
    "#     **config, \n",
    "#     commits_input=config[\"commits\"],\n",
    "#     conda_manager=config[\"conda_manager\"],\n",
    "#     force_recreate=True,\n",
    "#     test_path=\"tardis/spectrum/tests/test_spectrum_solver.py\",\n",
    "#     default_curr_env=\"/home/riddhigangbhoj/miniforge3/envs/tardis-master\",\n",
    "#     use_new_envs=True\n",
    "# )"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Method 2: Use existing regression data commits\n",
    "\n",
    "### A.  Manual Commit Selection\n",
    "Note:\n",
    "1. No need to run pytest for this.\n",
    "2. If commits provided are [1,2,3,4] then the comparison would be [\"2-1\",\"3-2\",\"4-3\"]. So, make the list accordingly."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# regression_commits = [\"66a96a847c873544babb7bf934040c86433a5962\",\n",
    "#                       \"d12d869bd2bb2038c9090852ee9ef998959f412d\",\n",
    "#                       \"b008a7180440a697ad5b54a9f77b692d4f71b120\",\n",
    "#                       \"a2a946a43d710c44bb3b08bcae69359fe13ed032\",\n",
    "#                       \"9404dc594563d9457e3ba91fcaa8400cae231801\"]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### B.  Automatically fetch the most recent N commits from regression data repository\n",
    "Note:\n",
    "1. No need to run pytest for this.\n",
    "2. Set `n` to the number of recent regression commits you want to fetch."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# regression_commits = get_last_n_commits(n=2, repo_path=config[\"regression_data_repo_path\"])\n",
    "# regression_commits"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Visualize File Changes\n",
    "Create a visualizer object to analyze file changes across commits.\n",
    "Note:\n",
    "1. Uncomment and set `file_extensions` to any type of file type to filter specific files.\n",
    "2. Choose `compare_function` of your choice either \"git_diff\" or \"cmd_diff\"\n",
    "    - 'git_diff': Uses git's built-in diff functionality to compare files\n",
    "          directly within the repository.\n",
    "    - 'cmd_diff': Extracts files to temporary locations and uses the\n",
    "          system's diff command.\n",
    "\n",
    "#### Case 1: Direct regression data commits (no TARDIS commits)\n",
    "Use when you are directly providing regression commits.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# visualizer = MultiCommitCompare(\n",
    "#     regression_repo_path=config[\"regression_data_repo_path\"],\n",
    "#     commits=regression_commits,\n",
    "#     # file_extensions=('.h5', '.hdf5') # Uncomment to filter specific files\n",
    "#     compare_function=\"git_diff\"\n",
    "# )\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Case 2: Regression data commits generated from TARDIS commits\n",
    "Use when you are providing tardis comits.\n",
    "Note:\n",
    "1. These regression commits are false commits(created just for testing)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "visualizer = MultiCommitCompare(\n",
    "    regression_repo_path=config[\"regression_data_repo_path\"],\n",
    "    commits=regression_commits,\n",
    "    tardis_commits=processed_commits,\n",
    "    tardis_repo_path=config[\"tardis_repo_path\"],\n",
    "    # file_extensions=('.h5', '.hdf5') # Uncomment to filter specific files\n",
    "    compare_function=\"git_diff\"\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Analyze the commits"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Analyzing 3 commits (2 transitions)...\n",
      "Processing transition 1/2: 2cbdea-6483ea\n",
      "Processing transition 2/2: 77c993-2cbdea\n",
      "Found 339 total files across all transitions.\n"
     ]
    }
   ],
   "source": [
    "visualizer.analyze_commits()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Display the file change matrix "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "commit_info, legend, matrix = visualizer.get_analysis_results()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### This displays the description of commits which are used to analyze differences.\n",
    "Note:\n",
    "1. The false commits generated from tardis commits uses description of tardis commits with prefix \"Regression data for --\"\n",
    "2. Directly provided regression commit uses its description as it is."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Commit #</th>\n",
       "      <th>Regression Hash (first 6 chars)</th>\n",
       "      <th>Description (first 60 chars)</th>\n",
       "      <th>Date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>6483ea</td>\n",
       "      <td>Regression data for --Relativity BugFix [2] (#3176)</td>\n",
       "      <td>2025-08-06 06:18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>2cbdea</td>\n",
       "      <td>Regression data for --add from workflow method to sdec and liv plot (#3198)</td>\n",
       "      <td>2025-08-06 06:42</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>77c993</td>\n",
       "      <td>Regression data for --Post-release 2025.07.20 (#3201)</td>\n",
       "      <td>2025-08-06 07:05</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Commit # Regression Hash (first 6 chars)  \\\n",
       "0         1                          6483ea   \n",
       "1         2                          2cbdea   \n",
       "2         3                          77c993   \n",
       "\n",
       "                                                  Description (first 60 chars)  \\\n",
       "0                          Regression data for --Relativity BugFix [2] (#3176)   \n",
       "1  Regression data for --add from workflow method to sdec and liv plot (#3198)   \n",
       "2                        Regression data for --Post-release 2025.07.20 (#3201)   \n",
       "\n",
       "               Date  \n",
       "0  2025-08-06 06:18  \n",
       "1  2025-08-06 06:42  \n",
       "2  2025-08-06 07:05  "
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "commit_info"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Display legend"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "A          Added\n",
       "D        Deleted\n",
       "M       Modified\n",
       "•      Unchanged\n",
       "−    Not-Present\n",
       "Name: Legend, dtype: object"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "legend"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### The matrix below shows file changes across commit transitions. \n",
    "Each row represents a file, and each column represents a commit transition (e.g., \"2cbdea-6483ea\" means changes from commit 2cbdea to 6483ea).\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Files</th>\n",
       "      <th>2cbdea-6483ea</th>\n",
       "      <th>77c993-2cbdea</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>.gitattributes</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>.github/actions/setup_env/action.yml</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>.github/workflows/run-notebook.yml</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>.github/workflows/trigger-lfs-cache.yml</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>.gitignore</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>LICENSE</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>__init__.py</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>arepo_data/arepo_snapshot.hdf5</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>arepo_data/arepo_snapshot.json</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>atom_data/chianti_He.h5</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>atom_data/kurucz_atom_chianti_many.h5</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>atom_data/kurucz_cd23_chianti_H_He.h5</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>atom_data/kurucz_cd23_chianti_H_He_latest.h5</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>atom_data/kurucz_cd23_chianti_Si.h5</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>atom_data/new_kurucz_cd23_chianti_H_He.h5</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>atom_data/nlte_atom_data/TestNLTE_He_Ti.h5</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>atom_data/stardis_atom_data/tardis_adata_vald_longlist.hdf</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>atom_data/stardis_atom_data/tardis_adata_vald_shortlist.hdf</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>compare.py</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>compare_regression_data.ipynb</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>tardis/energy_input/tests/test_gamma_ray_packet_source_minimal/test_gamma_ray_packet_properties__direction__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>tardis/energy_input/tests/test_gamma_ray_packet_source_minimal/test_gamma_ray_packet_properties__energy_cmf__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>tardis/energy_input/tests/test_gamma_ray_packet_source_minimal/test_gamma_ray_packet_properties__energy_rf__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>tardis/energy_input/tests/test_gamma_ray_packet_source_minimal/test_gamma_ray_packet_properties__location__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>tardis/energy_input/tests/test_gamma_ray_packet_source_minimal/test_gamma_ray_packet_properties__nu_cmf__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>tardis/energy_input/tests/test_gamma_ray_packet_source_minimal/test_gamma_ray_packet_properties__nu_rf__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>tardis/energy_input/tests/test_gamma_ray_packet_source_minimal/test_gamma_ray_packet_properties__shell__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>tardis/energy_input/tests/test_gamma_ray_packet_source_minimal/test_gamma_ray_packet_properties__status__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>tardis/energy_input/tests/test_gamma_ray_packet_source_minimal/test_gamma_ray_packet_properties__time_index__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>tardis/energy_input/tests/test_gamma_ray_packet_source_minimal/test_gamma_ray_packet_properties__time_start__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>tardis/opacities/tests/test_opacity_solver/test_new_macro_atom_solver__downbranch-False__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>tardis/opacities/tests/test_opacity_solver/test_new_macro_atom_solver__downbranch-True__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>tardis/opacities/tests/test_opacity_solver/test_new_macro_atom_solver__macroatom-False__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>tardis/opacities/tests/test_opacity_solver/test_new_macro_atom_solver__macroatom-True__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>tardis/opacities/tests/test_tau_sobolev/test_calculate_beta_sobolevs.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>tardis/opacities/tests/test_tau_sobolev/test_calculate_sobolev_line_opacity.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>tardis/plasma/equilibrium/tests/test_level_populations/test_level_population_solver/test_solve__collisional_rate_solver0-radiative_transitions0__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>tardis/plasma/equilibrium/tests/test_rate_matrix/test_rate_matrix_solver__collisional_rate_solver0-radiative_transitions0__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>tardis/plasma/tests/test_complete_plasmas/test_plasma/TestPlasma.h5</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>tardis/plasma/tests/test_complete_plasmas/test_plasma/plasma_unittest_disable_electron_scattering_False.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40</th>\n",
       "      <td>tardis/plasma/tests/test_complete_plasmas/test_plasma/plasma_unittest_disable_electron_scattering_True.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>tardis/plasma/tests/test_complete_plasmas/test_plasma/plasma_unittest_excitation_dilute-lte.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42</th>\n",
       "      <td>tardis/plasma/tests/test_complete_plasmas/test_plasma/plasma_unittest_excitation_lte.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43</th>\n",
       "      <td>tardis/plasma/tests/test_complete_plasmas/test_plasma/plasma_unittest_helium_treatment_recomb-nlte.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44</th>\n",
       "      <td>tardis/plasma/tests/test_complete_plasmas/test_plasma/plasma_unittest_helium_treatment_recomb-nlte_delta_treatment_0.5.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45</th>\n",
       "      <td>tardis/plasma/tests/test_complete_plasmas/test_plasma/plasma_unittest_initial_t_inner_10000 K.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46</th>\n",
       "      <td>tardis/plasma/tests/test_complete_plasmas/test_plasma/plasma_unittest_initial_t_rad_10000 K.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47</th>\n",
       "      <td>tardis/plasma/tests/test_complete_plasmas/test_plasma/plasma_unittest_ionization_lte.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>48</th>\n",
       "      <td>tardis/plasma/tests/test_complete_plasmas/test_plasma/plasma_unittest_ionization_nebular.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>49</th>\n",
       "      <td>tardis/plasma/tests/test_complete_plasmas/test_plasma/plasma_unittest_line_interaction_type_downbranch.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50</th>\n",
       "      <td>tardis/plasma/tests/test_complete_plasmas/test_plasma/plasma_unittest_line_interaction_type_macroatom.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51</th>\n",
       "      <td>tardis/plasma/tests/test_complete_plasmas/test_plasma/plasma_unittest_line_interaction_type_scatter.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52</th>\n",
       "      <td>tardis/plasma/tests/test_complete_plasmas/test_plasma/plasma_unittest_nlte.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>53</th>\n",
       "      <td>tardis/plasma/tests/test_complete_plasmas/test_plasma/plasma_unittest_nlte_classical_nebular.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>54</th>\n",
       "      <td>tardis/plasma/tests/test_complete_plasmas/test_plasma/plasma_unittest_nlte_coronal_approximation.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>55</th>\n",
       "      <td>tardis/plasma/tests/test_complete_plasmas/test_plasma/plasma_unittest_radiative_rates_type_blackbody.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>56</th>\n",
       "      <td>tardis/plasma/tests/test_complete_plasmas/test_plasma/plasma_unittest_radiative_rates_type_detailed.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57</th>\n",
       "      <td>tardis/plasma/tests/test_complete_plasmas/test_plasma/plasma_unittest_radiative_rates_type_detailed_w_epsilon_1e-10.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>58</th>\n",
       "      <td>tardis/plasma/tests/test_complete_plasmas/test_plasma/plasma_unittest_radiative_rates_type_dilute-blackbody.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>59</th>\n",
       "      <td>tardis/plasma/tests/test_hdf_plasma/test_atomic_data_uuid.txt</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>60</th>\n",
       "      <td>tardis/plasma/tests/test_hdf_plasma/test_collection__density__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>61</th>\n",
       "      <td>tardis/plasma/tests/test_hdf_plasma/test_collection__t_rad__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>62</th>\n",
       "      <td>tardis/plasma/tests/test_hdf_plasma/test_collection__w__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63</th>\n",
       "      <td>tardis/plasma/tests/test_hdf_plasma/test_hdf_helium_treatment.txt</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>64</th>\n",
       "      <td>tardis/plasma/tests/test_hdf_plasma/test_hdf_levels.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>65</th>\n",
       "      <td>tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__abundance__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>66</th>\n",
       "      <td>tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__atomic_mass__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>67</th>\n",
       "      <td>tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__beta_rad__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>68</th>\n",
       "      <td>tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__beta_sobolev__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69</th>\n",
       "      <td>tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__density__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>70</th>\n",
       "      <td>tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__electron_densities__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>71</th>\n",
       "      <td>tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__excitation_energy__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>72</th>\n",
       "      <td>tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__f_lu__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73</th>\n",
       "      <td>tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__g__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>74</th>\n",
       "      <td>tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__g_electron__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75</th>\n",
       "      <td>tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__general_level_boltzmann_factor__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76</th>\n",
       "      <td>tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__ion_number_density__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77</th>\n",
       "      <td>tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__ionization_data__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>78</th>\n",
       "      <td>tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__j_blues__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79</th>\n",
       "      <td>tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__level_boltzmann_factor__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80</th>\n",
       "      <td>tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__level_number_density__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>81</th>\n",
       "      <td>tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__lines__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>82</th>\n",
       "      <td>tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__lines_lower_level_index__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>83</th>\n",
       "      <td>tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__lines_upper_level_index__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>84</th>\n",
       "      <td>tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__metastability__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>85</th>\n",
       "      <td>tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__nu__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>86</th>\n",
       "      <td>tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__number_density__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>87</th>\n",
       "      <td>tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__partition_function__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>88</th>\n",
       "      <td>tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__phi__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>89</th>\n",
       "      <td>tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__selected_atoms__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>90</th>\n",
       "      <td>tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__stimulated_emission_factor__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>91</th>\n",
       "      <td>tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__t_electrons__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>92</th>\n",
       "      <td>tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__t_rad__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>93</th>\n",
       "      <td>tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__tau_sobolevs__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>94</th>\n",
       "      <td>tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__transition_probabilities__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__w__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>96</th>\n",
       "      <td>tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__wavelength_cm__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>97</th>\n",
       "      <td>tardis/plasma/tests/test_hdf_plasma/test_hdf_scalars__link_t_rad_t_electron__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98</th>\n",
       "      <td>tardis/plasma/tests/test_hdf_plasma/test_hdf_scalars__time_explosion__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>tardis/plasma/tests/test_nlte_excitation/test_coll_exc_deexc_matrix__coll_exc_coeff_values0-coll_deexc_coeff_values0-3__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>100</th>\n",
       "      <td>tardis/plasma/tests/test_nlte_excitation/test_coll_exc_deexc_matrix__coll_exc_coeff_values1-coll_deexc_coeff_values1-3__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>101</th>\n",
       "      <td>tardis/plasma/tests/test_nlte_excitation/test_prepare_bound_bound_rate_matrix.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>102</th>\n",
       "      <td>tardis/plasma/tests/test_nlte_solver/test_jacobian_matrix.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>103</th>\n",
       "      <td>tardis/plasma/tests/test_nlte_solver/test_rate_matrix.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>104</th>\n",
       "      <td>tardis/plasma/tests/test_plasma_continuum/test_exp1_times_exp.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>105</th>\n",
       "      <td>tardis/plasma/tests/test_tardis_model_density_config/test_electron_densities.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>106</th>\n",
       "      <td>tardis/plasma/tests/test_tardis_model_density_config/test_isotope_number_densities.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>107</th>\n",
       "      <td>tardis/plasma/tests/test_tardis_model_density_config/test_t_rad.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>108</th>\n",
       "      <td>tardis/simulation/tests/test_simulation/test_plasma_estimates__dilution_factor__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>109</th>\n",
       "      <td>tardis/simulation/tests/test_simulation/test_plasma_estimates__j_estimator__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110</th>\n",
       "      <td>tardis/simulation/tests/test_simulation/test_plasma_estimates__nu_bar_estimator__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>111</th>\n",
       "      <td>tardis/simulation/tests/test_simulation/test_plasma_estimates__output_energies__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>112</th>\n",
       "      <td>tardis/simulation/tests/test_simulation/test_plasma_estimates__output_nus__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>113</th>\n",
       "      <td>tardis/simulation/tests/test_simulation/test_plasma_estimates__t_radiative__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>114</th>\n",
       "      <td>tardis/simulation/tests/test_simulation/test_plasma_state_iterations__iterations_electron_densities__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>115</th>\n",
       "      <td>tardis/simulation/tests/test_simulation/test_plasma_state_iterations__iterations_t_inner__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>116</th>\n",
       "      <td>tardis/simulation/tests/test_simulation/test_plasma_state_iterations__iterations_t_rad__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>117</th>\n",
       "      <td>tardis/simulation/tests/test_simulation/test_plasma_state_iterations__iterations_w__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>118</th>\n",
       "      <td>tardis/spectrum/formal_integral/tests/test_source_function/test_Jblue_lu.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>119</th>\n",
       "      <td>tardis/spectrum/formal_integral/tests/test_source_function/test_Jred_lu.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>120</th>\n",
       "      <td>tardis/spectrum/formal_integral/tests/test_source_function/test_att_S_ul.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>121</th>\n",
       "      <td>tardis/spectrum/formal_integral/tests/test_source_function/test_e_dot_u.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>122</th>\n",
       "      <td>tardis/spectrum/tests/test_spectrum_solver/test_spectrum_solver/TestSpectrumSolver.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>123</th>\n",
       "      <td>tardis/tests/test_tardis_full/test_transport_simple/TestTransportSimple.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>124</th>\n",
       "      <td>tardis/tests/test_tardis_full_formal_integral/test_transport_simple_formal_integral/test_j_blue_estimators__-1-downbranch__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>125</th>\n",
       "      <td>tardis/tests/test_tardis_full_formal_integral/test_transport_simple_formal_integral/test_j_blue_estimators__-1-macroatom__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>126</th>\n",
       "      <td>tardis/tests/test_tardis_full_formal_integral/test_transport_simple_formal_integral/test_j_blue_estimators__30-downbranch__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>127</th>\n",
       "      <td>tardis/tests/test_tardis_full_formal_integral/test_transport_simple_formal_integral/test_j_blue_estimators__30-macroatom__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>128</th>\n",
       "      <td>tardis/tests/test_tardis_full_formal_integral/test_transport_simple_formal_integral/test_simulation__-1-downbranch__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>129</th>\n",
       "      <td>tardis/tests/test_tardis_full_formal_integral/test_transport_simple_formal_integral/test_simulation__-1-macroatom__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>130</th>\n",
       "      <td>tardis/tests/test_tardis_full_formal_integral/test_transport_simple_formal_integral/test_simulation__30-downbranch__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>131</th>\n",
       "      <td>tardis/tests/test_tardis_full_formal_integral/test_transport_simple_formal_integral/test_simulation__30-macroatom__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>132</th>\n",
       "      <td>tardis/tests/test_tardis_full_formal_integral/test_transport_simple_formal_integral/test_spectrum__-1-downbranch__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>133</th>\n",
       "      <td>tardis/tests/test_tardis_full_formal_integral/test_transport_simple_formal_integral/test_spectrum__-1-macroatom__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>134</th>\n",
       "      <td>tardis/tests/test_tardis_full_formal_integral/test_transport_simple_formal_integral/test_spectrum__30-downbranch__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>135</th>\n",
       "      <td>tardis/tests/test_tardis_full_formal_integral/test_transport_simple_formal_integral/test_spectrum__30-macroatom__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>136</th>\n",
       "      <td>tardis/tests/test_tardis_full_formal_integral/test_transport_simple_formal_integral/test_spectrum_integrated__-1-downbranch__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137</th>\n",
       "      <td>tardis/tests/test_tardis_full_formal_integral/test_transport_simple_formal_integral/test_spectrum_integrated__-1-macroatom__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>138</th>\n",
       "      <td>tardis/tests/test_tardis_full_formal_integral/test_transport_simple_formal_integral/test_spectrum_integrated__30-downbranch__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>139</th>\n",
       "      <td>tardis/tests/test_tardis_full_formal_integral/test_transport_simple_formal_integral/test_spectrum_integrated__30-macroatom__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>140</th>\n",
       "      <td>tardis/transport/montecarlo/tests/test_continuum/test_montecarlo_continuum.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>141</th>\n",
       "      <td>tardis/transport/montecarlo/tests/test_montecarlo_main_loop/test_montecarlo_main_loop.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>142</th>\n",
       "      <td>tardis/transport/montecarlo/tests/test_montecarlo_main_loop/test_montecarlo_main_loop_vpacket_log.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>143</th>\n",
       "      <td>tardis/transport/montecarlo/tests/test_packet_source/test_black_body_simple_source/test_bb_attributes.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>144</th>\n",
       "      <td>tardis/transport/montecarlo/tests/test_packet_source/test_black_body_simple_source/test_bb_energies.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>145</th>\n",
       "      <td>tardis/transport/montecarlo/tests/test_packet_source/test_black_body_simple_source/test_bb_mus.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>146</th>\n",
       "      <td>tardis/transport/montecarlo/tests/test_packet_source/test_black_body_simple_source/test_bb_nus.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>147</th>\n",
       "      <td>tardis/transport/montecarlo/tests/test_packet_source/test_black_body_simple_source_rel/test_bb_attributes.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>148</th>\n",
       "      <td>tardis/transport/montecarlo/tests/test_packet_source/test_black_body_simple_source_rel/test_bb_energies.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>149</th>\n",
       "      <td>tardis/transport/montecarlo/tests/test_packet_source/test_black_body_simple_source_rel/test_bb_mus.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>150</th>\n",
       "      <td>tardis/transport/montecarlo/tests/test_packet_source/test_black_body_simple_source_rel/test_bb_nus.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>151</th>\n",
       "      <td>tardis/transport/montecarlo/tests/test_rpacket_tracker/test_boundary_interactions.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>152</th>\n",
       "      <td>tardis/transport/montecarlo/tests/test_weighted_packet_source/test_black_body_weighted_source/test_bb_attributes.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>153</th>\n",
       "      <td>tardis/transport/montecarlo/tests/test_weighted_packet_source/test_black_body_weighted_source/test_bb_energies.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>154</th>\n",
       "      <td>tardis/transport/montecarlo/tests/test_weighted_packet_source/test_black_body_weighted_source/test_bb_mus.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>155</th>\n",
       "      <td>tardis/transport/montecarlo/tests/test_weighted_packet_source/test_black_body_weighted_source/test_bb_nus.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>156</th>\n",
       "      <td>tardis/visualization/tests/test_plot_util/test_plot_util/test_create_wavelength_mask__real__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>157</th>\n",
       "      <td>tardis/visualization/tests/test_plot_util/test_plot_util/test_create_wavelength_mask__virtual__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>158</th>\n",
       "      <td>tardis/visualization/tools/tests/test_lineid_plotter/test_lineid_plotter__wavelengths0-labels0-top__.png</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>159</th>\n",
       "      <td>tardis/visualization/tools/tests/test_lineid_plotter/test_lineid_plotter__wavelengths1-labels1-inside__.png</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>160</th>\n",
       "      <td>tardis/visualization/tools/tests/test_lineid_plotter/test_lineid_plotter__wavelengths2-labels2-along__.png</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>161</th>\n",
       "      <td>tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl0__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>162</th>\n",
       "      <td>tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl1__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>163</th>\n",
       "      <td>tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl2__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>164</th>\n",
       "      <td>tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl3__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>165</th>\n",
       "      <td>tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl4__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>166</th>\n",
       "      <td>tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl5__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>167</th>\n",
       "      <td>tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl6__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>168</th>\n",
       "      <td>tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl7__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>169</th>\n",
       "      <td>tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply0__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>170</th>\n",
       "      <td>tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply1__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>171</th>\n",
       "      <td>tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply2__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>172</th>\n",
       "      <td>tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply3__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>173</th>\n",
       "      <td>tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply4__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>174</th>\n",
       "      <td>tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply5__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>175</th>\n",
       "      <td>tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply6__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>176</th>\n",
       "      <td>tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply7__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>177</th>\n",
       "      <td>tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_mpl_image__plotter_generate_plot_mpl0__.png</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>178</th>\n",
       "      <td>tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_mpl_image__plotter_generate_plot_mpl1__.png</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>179</th>\n",
       "      <td>tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_mpl_image__plotter_generate_plot_mpl2__.png</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>180</th>\n",
       "      <td>tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_mpl_image__plotter_generate_plot_mpl3__.png</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>181</th>\n",
       "      <td>tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_mpl_image__plotter_generate_plot_mpl4__.png</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>182</th>\n",
       "      <td>tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_mpl_image__plotter_generate_plot_mpl5__.png</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>183</th>\n",
       "      <td>tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_mpl_image__plotter_generate_plot_mpl6__.png</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>184</th>\n",
       "      <td>tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_mpl_image__plotter_generate_plot_mpl7__.png</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>185</th>\n",
       "      <td>tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_parse_species_list___keep_colour__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>186</th>\n",
       "      <td>tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_parse_species_list___species_list__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>187</th>\n",
       "      <td>tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_parse_species_list___species_mapped__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>188</th>\n",
       "      <td>tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_prepare_plot_data__plotter_prepare_plot_data0-new_bin_edges__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>189</th>\n",
       "      <td>tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_prepare_plot_data__plotter_prepare_plot_data0-plot_colors__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>190</th>\n",
       "      <td>tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_prepare_plot_data__plotter_prepare_plot_data0-plot_data__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>191</th>\n",
       "      <td>tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_prepare_plot_data__plotter_prepare_plot_data1-new_bin_edges__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>192</th>\n",
       "      <td>tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_prepare_plot_data__plotter_prepare_plot_data1-plot_colors__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>193</th>\n",
       "      <td>tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_prepare_plot_data__plotter_prepare_plot_data1-plot_data__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>194</th>\n",
       "      <td>tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_prepare_plot_data__plotter_prepare_plot_data2-new_bin_edges__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>195</th>\n",
       "      <td>tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_prepare_plot_data__plotter_prepare_plot_data2-plot_colors__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>196</th>\n",
       "      <td>tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_prepare_plot_data__plotter_prepare_plot_data2-plot_data__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>197</th>\n",
       "      <td>tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_prepare_plot_data__plotter_prepare_plot_data3-new_bin_edges__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>198</th>\n",
       "      <td>tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_prepare_plot_data__plotter_prepare_plot_data3-plot_colors__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>199</th>\n",
       "      <td>tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_prepare_plot_data__plotter_prepare_plot_data3-plot_data__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>200</th>\n",
       "      <td>tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_prepare_plot_data__plotter_prepare_plot_data4-new_bin_edges__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>201</th>\n",
       "      <td>tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_prepare_plot_data__plotter_prepare_plot_data4-plot_colors__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>202</th>\n",
       "      <td>tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_prepare_plot_data__plotter_prepare_plot_data4-plot_data__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>203</th>\n",
       "      <td>tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_prepare_plot_data__plotter_prepare_plot_data5-new_bin_edges__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>204</th>\n",
       "      <td>tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_prepare_plot_data__plotter_prepare_plot_data5-plot_colors__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>205</th>\n",
       "      <td>tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_prepare_plot_data__plotter_prepare_plot_data5-plot_data__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>206</th>\n",
       "      <td>tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_prepare_plot_data__plotter_prepare_plot_data6-new_bin_edges__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>207</th>\n",
       "      <td>tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_prepare_plot_data__plotter_prepare_plot_data6-plot_colors__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>208</th>\n",
       "      <td>tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_prepare_plot_data__plotter_prepare_plot_data6-plot_data__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>209</th>\n",
       "      <td>tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_prepare_plot_data__plotter_prepare_plot_data7-new_bin_edges__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>210</th>\n",
       "      <td>tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_prepare_plot_data__plotter_prepare_plot_data7-plot_colors__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>211</th>\n",
       "      <td>tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_prepare_plot_data__plotter_prepare_plot_data7-plot_data__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>212</th>\n",
       "      <td>tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data0__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>213</th>\n",
       "      <td>tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data10__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>214</th>\n",
       "      <td>tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data11__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>215</th>\n",
       "      <td>tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data12__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>216</th>\n",
       "      <td>tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data13__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>217</th>\n",
       "      <td>tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data14__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>218</th>\n",
       "      <td>tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data15__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>219</th>\n",
       "      <td>tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data1__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>220</th>\n",
       "      <td>tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data2__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>221</th>\n",
       "      <td>tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data3__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>222</th>\n",
       "      <td>tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data4__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>223</th>\n",
       "      <td>tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data5__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>224</th>\n",
       "      <td>tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data6__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>225</th>\n",
       "      <td>tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data7__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>226</th>\n",
       "      <td>tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data8__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>227</th>\n",
       "      <td>tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data9__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>228</th>\n",
       "      <td>tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply0__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>229</th>\n",
       "      <td>tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply10__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>230</th>\n",
       "      <td>tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply11__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>231</th>\n",
       "      <td>tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply12__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>232</th>\n",
       "      <td>tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply13__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>233</th>\n",
       "      <td>tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply14__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>234</th>\n",
       "      <td>tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply15__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>235</th>\n",
       "      <td>tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply1__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>236</th>\n",
       "      <td>tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply2__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>237</th>\n",
       "      <td>tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply3__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>238</th>\n",
       "      <td>tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply4__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>239</th>\n",
       "      <td>tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply5__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>240</th>\n",
       "      <td>tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply6__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>241</th>\n",
       "      <td>tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply7__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>242</th>\n",
       "      <td>tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply8__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>243</th>\n",
       "      <td>tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply9__.h5</td>\n",
       "      <td>M</td>\n",
       "      <td>M</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>244</th>\n",
       "      <td>tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_mpl_image__plotter_generate_plot_mpl0__.png</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>245</th>\n",
       "      <td>tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_mpl_image__plotter_generate_plot_mpl10__.png</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>246</th>\n",
       "      <td>tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_mpl_image__plotter_generate_plot_mpl11__.png</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>247</th>\n",
       "      <td>tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_mpl_image__plotter_generate_plot_mpl12__.png</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>248</th>\n",
       "      <td>tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_mpl_image__plotter_generate_plot_mpl13__.png</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>249</th>\n",
       "      <td>tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_mpl_image__plotter_generate_plot_mpl14__.png</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>250</th>\n",
       "      <td>tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_mpl_image__plotter_generate_plot_mpl15__.png</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>251</th>\n",
       "      <td>tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_mpl_image__plotter_generate_plot_mpl1__.png</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>252</th>\n",
       "      <td>tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_mpl_image__plotter_generate_plot_mpl2__.png</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>253</th>\n",
       "      <td>tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_mpl_image__plotter_generate_plot_mpl3__.png</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>254</th>\n",
       "      <td>tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_mpl_image__plotter_generate_plot_mpl4__.png</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>255</th>\n",
       "      <td>tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_mpl_image__plotter_generate_plot_mpl5__.png</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>256</th>\n",
       "      <td>tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_mpl_image__plotter_generate_plot_mpl6__.png</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>257</th>\n",
       "      <td>tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_mpl_image__plotter_generate_plot_mpl7__.png</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>258</th>\n",
       "      <td>tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_mpl_image__plotter_generate_plot_mpl8__.png</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>259</th>\n",
       "      <td>tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_mpl_image__plotter_generate_plot_mpl9__.png</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>260</th>\n",
       "      <td>tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_parse_species_list___full_species_list__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>261</th>\n",
       "      <td>tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_parse_species_list___keep_colour__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>262</th>\n",
       "      <td>tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_parse_species_list___species_list__.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>263</th>\n",
       "      <td>tardis/workflows/high_energy/tests/test_tardis_he_workflow/test_he_workflow_all_outputs_regression__escape_energy__.h5</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>264</th>\n",
       "      <td>tardis/workflows/high_energy/tests/test_tardis_he_workflow/test_he_workflow_all_outputs_regression__escape_energy_cosi__.h5</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>265</th>\n",
       "      <td>tardis/workflows/high_energy/tests/test_tardis_he_workflow/test_he_workflow_all_outputs_regression__gamma_ray_deposited_energy__.h5</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>266</th>\n",
       "      <td>tardis/workflows/high_energy/tests/test_tardis_he_workflow/test_he_workflow_all_outputs_regression__packets_escaped__.h5</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>267</th>\n",
       "      <td>tardis/workflows/high_energy/tests/test_tardis_he_workflow/test_he_workflow_all_outputs_regression__positron_energy__.h5</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>268</th>\n",
       "      <td>tardis/workflows/high_energy/tests/test_tardis_he_workflow/test_he_workflow_all_outputs_regression__total_deposited_energy__.h5</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>269</th>\n",
       "      <td>tardis/workflows/tests/test_workflows/test_v_inner_solver_workflow__iterations_mean_optical_depth__.h5</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>270</th>\n",
       "      <td>tardis/workflows/tests/test_workflows/test_v_inner_solver_workflow__iterations_t_inner__.h5</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>271</th>\n",
       "      <td>tardis/workflows/tests/test_workflows/test_v_inner_solver_workflow__iterations_t_rad__.h5</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>272</th>\n",
       "      <td>tardis/workflows/tests/test_workflows/test_v_inner_solver_workflow__iterations_v_inner_boundary__.h5</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>273</th>\n",
       "      <td>tardis/workflows/tests/test_workflows/test_v_inner_solver_workflow__iterations_w__.h5</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>274</th>\n",
       "      <td>test_composition/test_calculate_cell_masses.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>275</th>\n",
       "      <td>test_composition/test_calculate_elemental_cell_masses.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>276</th>\n",
       "      <td>test_composition/test_calculate_mass_fraction_at_time__time_explosion0__.h5</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>277</th>\n",
       "      <td>test_composition/test_calculate_mass_fraction_at_time__time_explosion1__.h5</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>278</th>\n",
       "      <td>test_composition/test_elemental_mass_fraction.h5</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>279</th>\n",
       "      <td>test_composition/test_elemental_number_density.h5</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>280</th>\n",
       "      <td>test_composition/test_elemental_number_density.npy</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>281</th>\n",
       "      <td>testdata/MESA_STIR_MESA_SNEC/input/profile8.data.iso.dat</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>282</th>\n",
       "      <td>testdata/MESA_STIR_MESA_SNEC/output/C_init_frac.dat</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>283</th>\n",
       "      <td>testdata/MESA_STIR_MESA_SNEC/output/E_shell.xg</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>284</th>\n",
       "      <td>testdata/MESA_STIR_MESA_SNEC/output/H_1.xg</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>285</th>\n",
       "      <td>testdata/MESA_STIR_MESA_SNEC/output/H_2.xg</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>286</th>\n",
       "      <td>testdata/MESA_STIR_MESA_SNEC/output/H_init_frac.dat</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>287</th>\n",
       "      <td>testdata/MESA_STIR_MESA_SNEC/output/He_1.xg</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>288</th>\n",
       "      <td>testdata/MESA_STIR_MESA_SNEC/output/He_2.xg</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>289</th>\n",
       "      <td>testdata/MESA_STIR_MESA_SNEC/output/He_3.xg</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>290</th>\n",
       "      <td>testdata/MESA_STIR_MESA_SNEC/output/He_init_frac.dat</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>291</th>\n",
       "      <td>testdata/MESA_STIR_MESA_SNEC/output/Ni_deposit_function.xg</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>292</th>\n",
       "      <td>testdata/MESA_STIR_MESA_SNEC/output/Ni_init_frac.dat</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>293</th>\n",
       "      <td>testdata/MESA_STIR_MESA_SNEC/output/Ni_total_luminosity.dat</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>294</th>\n",
       "      <td>testdata/MESA_STIR_MESA_SNEC/output/O_init_frac.dat</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>295</th>\n",
       "      <td>testdata/MESA_STIR_MESA_SNEC/output/Q.xg</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>296</th>\n",
       "      <td>testdata/MESA_STIR_MESA_SNEC/output/T_eff.dat</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>297</th>\n",
       "      <td>testdata/MESA_STIR_MESA_SNEC/output/conservation.dat</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>298</th>\n",
       "      <td>testdata/MESA_STIR_MESA_SNEC/output/cs2.xg</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>299</th>\n",
       "      <td>testdata/MESA_STIR_MESA_SNEC/output/delta_mass_initial.dat</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>300</th>\n",
       "      <td>testdata/MESA_STIR_MESA_SNEC/output/delta_time.xg</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>301</th>\n",
       "      <td>testdata/MESA_STIR_MESA_SNEC/output/density_profile.dat</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>302</th>\n",
       "      <td>testdata/MESA_STIR_MESA_SNEC/output/eps.xg</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>303</th>\n",
       "      <td>testdata/MESA_STIR_MESA_SNEC/output/free_electron_frac.xg</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>304</th>\n",
       "      <td>testdata/MESA_STIR_MESA_SNEC/output/index_lumshell.dat</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>305</th>\n",
       "      <td>testdata/MESA_STIR_MESA_SNEC/output/index_photo.dat</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>306</th>\n",
       "      <td>testdata/MESA_STIR_MESA_SNEC/output/info.dat</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>307</th>\n",
       "      <td>testdata/MESA_STIR_MESA_SNEC/output/kappa.xg</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>308</th>\n",
       "      <td>testdata/MESA_STIR_MESA_SNEC/output/kappa_table.xg</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>309</th>\n",
       "      <td>testdata/MESA_STIR_MESA_SNEC/output/logR_op.xg</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>310</th>\n",
       "      <td>testdata/MESA_STIR_MESA_SNEC/output/logT.xg</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>311</th>\n",
       "      <td>testdata/MESA_STIR_MESA_SNEC/output/lum.xg</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>312</th>\n",
       "      <td>testdata/MESA_STIR_MESA_SNEC/output/lum_observed.dat</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>313</th>\n",
       "      <td>testdata/MESA_STIR_MESA_SNEC/output/lum_photo.dat</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>314</th>\n",
       "      <td>testdata/MESA_STIR_MESA_SNEC/output/magnitudes.dat</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>315</th>\n",
       "      <td>testdata/MESA_STIR_MESA_SNEC/output/mass.xg</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>316</th>\n",
       "      <td>testdata/MESA_STIR_MESA_SNEC/output/mass_initial.dat</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>317</th>\n",
       "      <td>testdata/MESA_STIR_MESA_SNEC/output/mass_lumshell.dat</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>318</th>\n",
       "      <td>testdata/MESA_STIR_MESA_SNEC/output/mass_photo.dat</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>319</th>\n",
       "      <td>testdata/MESA_STIR_MESA_SNEC/output/metallicity_init.dat</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>320</th>\n",
       "      <td>testdata/MESA_STIR_MESA_SNEC/output/opacity_corrupted.dat</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>321</th>\n",
       "      <td>testdata/MESA_STIR_MESA_SNEC/output/opacity_floor.dat</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>322</th>\n",
       "      <td>testdata/MESA_STIR_MESA_SNEC/output/p_rad.xg</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>323</th>\n",
       "      <td>testdata/MESA_STIR_MESA_SNEC/output/photosphere_tracer.xg</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>324</th>\n",
       "      <td>testdata/MESA_STIR_MESA_SNEC/output/press.xg</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>325</th>\n",
       "      <td>testdata/MESA_STIR_MESA_SNEC/output/press_initial.dat</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>326</th>\n",
       "      <td>testdata/MESA_STIR_MESA_SNEC/output/rad_initial.dat</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>327</th>\n",
       "      <td>testdata/MESA_STIR_MESA_SNEC/output/rad_photo.dat</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>328</th>\n",
       "      <td>testdata/MESA_STIR_MESA_SNEC/output/radius.xg</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>329</th>\n",
       "      <td>testdata/MESA_STIR_MESA_SNEC/output/rho.xg</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>330</th>\n",
       "      <td>testdata/MESA_STIR_MESA_SNEC/output/rho_initial.dat</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>331</th>\n",
       "      <td>testdata/MESA_STIR_MESA_SNEC/output/tau.xg</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>332</th>\n",
       "      <td>testdata/MESA_STIR_MESA_SNEC/output/temp.xg</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>333</th>\n",
       "      <td>testdata/MESA_STIR_MESA_SNEC/output/time_diff.xg</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>334</th>\n",
       "      <td>testdata/MESA_STIR_MESA_SNEC/output/time_exp.xg</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>335</th>\n",
       "      <td>testdata/MESA_STIR_MESA_SNEC/output/vel.xg</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>336</th>\n",
       "      <td>testdata/MESA_STIR_MESA_SNEC/output/vel_photo.dat</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>337</th>\n",
       "      <td>testdata/MESA_STIR_MESA_SNEC/output/velshock_index.dat</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>338</th>\n",
       "      <td>testdata/MESA_STIR_MESA_SNEC/output/ye.xg</td>\n",
       "      <td>•</td>\n",
       "      <td>•</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                                                                                                                    Files  \\\n",
       "0                                                                                                                                          .gitattributes   \n",
       "1                                                                                                                    .github/actions/setup_env/action.yml   \n",
       "2                                                                                                                      .github/workflows/run-notebook.yml   \n",
       "3                                                                                                                 .github/workflows/trigger-lfs-cache.yml   \n",
       "4                                                                                                                                              .gitignore   \n",
       "5                                                                                                                                                 LICENSE   \n",
       "6                                                                                                                                             __init__.py   \n",
       "7                                                                                                                          arepo_data/arepo_snapshot.hdf5   \n",
       "8                                                                                                                          arepo_data/arepo_snapshot.json   \n",
       "9                                                                                                                                 atom_data/chianti_He.h5   \n",
       "10                                                                                                                  atom_data/kurucz_atom_chianti_many.h5   \n",
       "11                                                                                                                  atom_data/kurucz_cd23_chianti_H_He.h5   \n",
       "12                                                                                                           atom_data/kurucz_cd23_chianti_H_He_latest.h5   \n",
       "13                                                                                                                    atom_data/kurucz_cd23_chianti_Si.h5   \n",
       "14                                                                                                              atom_data/new_kurucz_cd23_chianti_H_He.h5   \n",
       "15                                                                                                             atom_data/nlte_atom_data/TestNLTE_He_Ti.h5   \n",
       "16                                                                                             atom_data/stardis_atom_data/tardis_adata_vald_longlist.hdf   \n",
       "17                                                                                            atom_data/stardis_atom_data/tardis_adata_vald_shortlist.hdf   \n",
       "18                                                                                                                                             compare.py   \n",
       "19                                                                                                                          compare_regression_data.ipynb   \n",
       "20                                       tardis/energy_input/tests/test_gamma_ray_packet_source_minimal/test_gamma_ray_packet_properties__direction__.npy   \n",
       "21                                      tardis/energy_input/tests/test_gamma_ray_packet_source_minimal/test_gamma_ray_packet_properties__energy_cmf__.npy   \n",
       "22                                       tardis/energy_input/tests/test_gamma_ray_packet_source_minimal/test_gamma_ray_packet_properties__energy_rf__.npy   \n",
       "23                                        tardis/energy_input/tests/test_gamma_ray_packet_source_minimal/test_gamma_ray_packet_properties__location__.npy   \n",
       "24                                          tardis/energy_input/tests/test_gamma_ray_packet_source_minimal/test_gamma_ray_packet_properties__nu_cmf__.npy   \n",
       "25                                           tardis/energy_input/tests/test_gamma_ray_packet_source_minimal/test_gamma_ray_packet_properties__nu_rf__.npy   \n",
       "26                                           tardis/energy_input/tests/test_gamma_ray_packet_source_minimal/test_gamma_ray_packet_properties__shell__.npy   \n",
       "27                                          tardis/energy_input/tests/test_gamma_ray_packet_source_minimal/test_gamma_ray_packet_properties__status__.npy   \n",
       "28                                      tardis/energy_input/tests/test_gamma_ray_packet_source_minimal/test_gamma_ray_packet_properties__time_index__.npy   \n",
       "29                                      tardis/energy_input/tests/test_gamma_ray_packet_source_minimal/test_gamma_ray_packet_properties__time_start__.npy   \n",
       "30                                                           tardis/opacities/tests/test_opacity_solver/test_new_macro_atom_solver__downbranch-False__.h5   \n",
       "31                                                            tardis/opacities/tests/test_opacity_solver/test_new_macro_atom_solver__downbranch-True__.h5   \n",
       "32                                                            tardis/opacities/tests/test_opacity_solver/test_new_macro_atom_solver__macroatom-False__.h5   \n",
       "33                                                             tardis/opacities/tests/test_opacity_solver/test_new_macro_atom_solver__macroatom-True__.h5   \n",
       "34                                                                               tardis/opacities/tests/test_tau_sobolev/test_calculate_beta_sobolevs.npy   \n",
       "35                                                                         tardis/opacities/tests/test_tau_sobolev/test_calculate_sobolev_line_opacity.h5   \n",
       "36   tardis/plasma/equilibrium/tests/test_level_populations/test_level_population_solver/test_solve__collisional_rate_solver0-radiative_transitions0__.h5   \n",
       "37                         tardis/plasma/equilibrium/tests/test_rate_matrix/test_rate_matrix_solver__collisional_rate_solver0-radiative_transitions0__.h5   \n",
       "38                                                                                    tardis/plasma/tests/test_complete_plasmas/test_plasma/TestPlasma.h5   \n",
       "39                                             tardis/plasma/tests/test_complete_plasmas/test_plasma/plasma_unittest_disable_electron_scattering_False.h5   \n",
       "40                                              tardis/plasma/tests/test_complete_plasmas/test_plasma/plasma_unittest_disable_electron_scattering_True.h5   \n",
       "41                                                         tardis/plasma/tests/test_complete_plasmas/test_plasma/plasma_unittest_excitation_dilute-lte.h5   \n",
       "42                                                                tardis/plasma/tests/test_complete_plasmas/test_plasma/plasma_unittest_excitation_lte.h5   \n",
       "43                                                  tardis/plasma/tests/test_complete_plasmas/test_plasma/plasma_unittest_helium_treatment_recomb-nlte.h5   \n",
       "44                              tardis/plasma/tests/test_complete_plasmas/test_plasma/plasma_unittest_helium_treatment_recomb-nlte_delta_treatment_0.5.h5   \n",
       "45                                                       tardis/plasma/tests/test_complete_plasmas/test_plasma/plasma_unittest_initial_t_inner_10000 K.h5   \n",
       "46                                                         tardis/plasma/tests/test_complete_plasmas/test_plasma/plasma_unittest_initial_t_rad_10000 K.h5   \n",
       "47                                                                tardis/plasma/tests/test_complete_plasmas/test_plasma/plasma_unittest_ionization_lte.h5   \n",
       "48                                                            tardis/plasma/tests/test_complete_plasmas/test_plasma/plasma_unittest_ionization_nebular.h5   \n",
       "49                                              tardis/plasma/tests/test_complete_plasmas/test_plasma/plasma_unittest_line_interaction_type_downbranch.h5   \n",
       "50                                               tardis/plasma/tests/test_complete_plasmas/test_plasma/plasma_unittest_line_interaction_type_macroatom.h5   \n",
       "51                                                 tardis/plasma/tests/test_complete_plasmas/test_plasma/plasma_unittest_line_interaction_type_scatter.h5   \n",
       "52                                                                          tardis/plasma/tests/test_complete_plasmas/test_plasma/plasma_unittest_nlte.h5   \n",
       "53                                                        tardis/plasma/tests/test_complete_plasmas/test_plasma/plasma_unittest_nlte_classical_nebular.h5   \n",
       "54                                                    tardis/plasma/tests/test_complete_plasmas/test_plasma/plasma_unittest_nlte_coronal_approximation.h5   \n",
       "55                                                tardis/plasma/tests/test_complete_plasmas/test_plasma/plasma_unittest_radiative_rates_type_blackbody.h5   \n",
       "56                                                 tardis/plasma/tests/test_complete_plasmas/test_plasma/plasma_unittest_radiative_rates_type_detailed.h5   \n",
       "57                                 tardis/plasma/tests/test_complete_plasmas/test_plasma/plasma_unittest_radiative_rates_type_detailed_w_epsilon_1e-10.h5   \n",
       "58                                         tardis/plasma/tests/test_complete_plasmas/test_plasma/plasma_unittest_radiative_rates_type_dilute-blackbody.h5   \n",
       "59                                                                                          tardis/plasma/tests/test_hdf_plasma/test_atomic_data_uuid.txt   \n",
       "60                                                                                     tardis/plasma/tests/test_hdf_plasma/test_collection__density__.npy   \n",
       "61                                                                                       tardis/plasma/tests/test_hdf_plasma/test_collection__t_rad__.npy   \n",
       "62                                                                                           tardis/plasma/tests/test_hdf_plasma/test_collection__w__.npy   \n",
       "63                                                                                      tardis/plasma/tests/test_hdf_plasma/test_hdf_helium_treatment.txt   \n",
       "64                                                                                                 tardis/plasma/tests/test_hdf_plasma/test_hdf_levels.h5   \n",
       "65                                                                                   tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__abundance__.npy   \n",
       "66                                                                                 tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__atomic_mass__.npy   \n",
       "67                                                                                    tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__beta_rad__.npy   \n",
       "68                                                                                tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__beta_sobolev__.npy   \n",
       "69                                                                                     tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__density__.npy   \n",
       "70                                                                          tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__electron_densities__.npy   \n",
       "71                                                                           tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__excitation_energy__.npy   \n",
       "72                                                                                        tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__f_lu__.npy   \n",
       "73                                                                                           tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__g__.npy   \n",
       "74                                                                                  tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__g_electron__.npy   \n",
       "75                                                              tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__general_level_boltzmann_factor__.npy   \n",
       "76                                                                          tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__ion_number_density__.npy   \n",
       "77                                                                             tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__ionization_data__.npy   \n",
       "78                                                                                     tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__j_blues__.npy   \n",
       "79                                                                      tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__level_boltzmann_factor__.npy   \n",
       "80                                                                        tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__level_number_density__.npy   \n",
       "81                                                                                       tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__lines__.npy   \n",
       "82                                                                     tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__lines_lower_level_index__.npy   \n",
       "83                                                                     tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__lines_upper_level_index__.npy   \n",
       "84                                                                               tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__metastability__.npy   \n",
       "85                                                                                          tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__nu__.npy   \n",
       "86                                                                              tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__number_density__.npy   \n",
       "87                                                                          tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__partition_function__.npy   \n",
       "88                                                                                         tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__phi__.npy   \n",
       "89                                                                              tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__selected_atoms__.npy   \n",
       "90                                                                  tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__stimulated_emission_factor__.npy   \n",
       "91                                                                                 tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__t_electrons__.npy   \n",
       "92                                                                                       tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__t_rad__.npy   \n",
       "93                                                                                tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__tau_sobolevs__.npy   \n",
       "94                                                                    tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__transition_probabilities__.npy   \n",
       "95                                                                                           tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__w__.npy   \n",
       "96                                                                               tardis/plasma/tests/test_hdf_plasma/test_hdf_plasma__wavelength_cm__.npy   \n",
       "97                                                                      tardis/plasma/tests/test_hdf_plasma/test_hdf_scalars__link_t_rad_t_electron__.npy   \n",
       "98                                                                             tardis/plasma/tests/test_hdf_plasma/test_hdf_scalars__time_explosion__.npy   \n",
       "99                           tardis/plasma/tests/test_nlte_excitation/test_coll_exc_deexc_matrix__coll_exc_coeff_values0-coll_deexc_coeff_values0-3__.npy   \n",
       "100                          tardis/plasma/tests/test_nlte_excitation/test_coll_exc_deexc_matrix__coll_exc_coeff_values1-coll_deexc_coeff_values1-3__.npy   \n",
       "101                                                                     tardis/plasma/tests/test_nlte_excitation/test_prepare_bound_bound_rate_matrix.npy   \n",
       "102                                                                                         tardis/plasma/tests/test_nlte_solver/test_jacobian_matrix.npy   \n",
       "103                                                                                             tardis/plasma/tests/test_nlte_solver/test_rate_matrix.npy   \n",
       "104                                                                                     tardis/plasma/tests/test_plasma_continuum/test_exp1_times_exp.npy   \n",
       "105                                                                      tardis/plasma/tests/test_tardis_model_density_config/test_electron_densities.npy   \n",
       "106                                                                 tardis/plasma/tests/test_tardis_model_density_config/test_isotope_number_densities.h5   \n",
       "107                                                                                   tardis/plasma/tests/test_tardis_model_density_config/test_t_rad.npy   \n",
       "108                                                                   tardis/simulation/tests/test_simulation/test_plasma_estimates__dilution_factor__.h5   \n",
       "109                                                                       tardis/simulation/tests/test_simulation/test_plasma_estimates__j_estimator__.h5   \n",
       "110                                                                  tardis/simulation/tests/test_simulation/test_plasma_estimates__nu_bar_estimator__.h5   \n",
       "111                                                                   tardis/simulation/tests/test_simulation/test_plasma_estimates__output_energies__.h5   \n",
       "112                                                                        tardis/simulation/tests/test_simulation/test_plasma_estimates__output_nus__.h5   \n",
       "113                                                                       tardis/simulation/tests/test_simulation/test_plasma_estimates__t_radiative__.h5   \n",
       "114                                              tardis/simulation/tests/test_simulation/test_plasma_state_iterations__iterations_electron_densities__.h5   \n",
       "115                                                         tardis/simulation/tests/test_simulation/test_plasma_state_iterations__iterations_t_inner__.h5   \n",
       "116                                                           tardis/simulation/tests/test_simulation/test_plasma_state_iterations__iterations_t_rad__.h5   \n",
       "117                                                               tardis/simulation/tests/test_simulation/test_plasma_state_iterations__iterations_w__.h5   \n",
       "118                                                                          tardis/spectrum/formal_integral/tests/test_source_function/test_Jblue_lu.npy   \n",
       "119                                                                           tardis/spectrum/formal_integral/tests/test_source_function/test_Jred_lu.npy   \n",
       "120                                                                          tardis/spectrum/formal_integral/tests/test_source_function/test_att_S_ul.npy   \n",
       "121                                                                           tardis/spectrum/formal_integral/tests/test_source_function/test_e_dot_u.npy   \n",
       "122                                                                 tardis/spectrum/tests/test_spectrum_solver/test_spectrum_solver/TestSpectrumSolver.h5   \n",
       "123                                                                            tardis/tests/test_tardis_full/test_transport_simple/TestTransportSimple.h5   \n",
       "124                       tardis/tests/test_tardis_full_formal_integral/test_transport_simple_formal_integral/test_j_blue_estimators__-1-downbranch__.npy   \n",
       "125                        tardis/tests/test_tardis_full_formal_integral/test_transport_simple_formal_integral/test_j_blue_estimators__-1-macroatom__.npy   \n",
       "126                       tardis/tests/test_tardis_full_formal_integral/test_transport_simple_formal_integral/test_j_blue_estimators__30-downbranch__.npy   \n",
       "127                        tardis/tests/test_tardis_full_formal_integral/test_transport_simple_formal_integral/test_j_blue_estimators__30-macroatom__.npy   \n",
       "128                               tardis/tests/test_tardis_full_formal_integral/test_transport_simple_formal_integral/test_simulation__-1-downbranch__.h5   \n",
       "129                                tardis/tests/test_tardis_full_formal_integral/test_transport_simple_formal_integral/test_simulation__-1-macroatom__.h5   \n",
       "130                               tardis/tests/test_tardis_full_formal_integral/test_transport_simple_formal_integral/test_simulation__30-downbranch__.h5   \n",
       "131                                tardis/tests/test_tardis_full_formal_integral/test_transport_simple_formal_integral/test_simulation__30-macroatom__.h5   \n",
       "132                                tardis/tests/test_tardis_full_formal_integral/test_transport_simple_formal_integral/test_spectrum__-1-downbranch__.npy   \n",
       "133                                 tardis/tests/test_tardis_full_formal_integral/test_transport_simple_formal_integral/test_spectrum__-1-macroatom__.npy   \n",
       "134                                tardis/tests/test_tardis_full_formal_integral/test_transport_simple_formal_integral/test_spectrum__30-downbranch__.npy   \n",
       "135                                 tardis/tests/test_tardis_full_formal_integral/test_transport_simple_formal_integral/test_spectrum__30-macroatom__.npy   \n",
       "136                     tardis/tests/test_tardis_full_formal_integral/test_transport_simple_formal_integral/test_spectrum_integrated__-1-downbranch__.npy   \n",
       "137                      tardis/tests/test_tardis_full_formal_integral/test_transport_simple_formal_integral/test_spectrum_integrated__-1-macroatom__.npy   \n",
       "138                     tardis/tests/test_tardis_full_formal_integral/test_transport_simple_formal_integral/test_spectrum_integrated__30-downbranch__.npy   \n",
       "139                      tardis/tests/test_tardis_full_formal_integral/test_transport_simple_formal_integral/test_spectrum_integrated__30-macroatom__.npy   \n",
       "140                                                                         tardis/transport/montecarlo/tests/test_continuum/test_montecarlo_continuum.h5   \n",
       "141                                                              tardis/transport/montecarlo/tests/test_montecarlo_main_loop/test_montecarlo_main_loop.h5   \n",
       "142                                                  tardis/transport/montecarlo/tests/test_montecarlo_main_loop/test_montecarlo_main_loop_vpacket_log.h5   \n",
       "143                                              tardis/transport/montecarlo/tests/test_packet_source/test_black_body_simple_source/test_bb_attributes.h5   \n",
       "144                                               tardis/transport/montecarlo/tests/test_packet_source/test_black_body_simple_source/test_bb_energies.npy   \n",
       "145                                                    tardis/transport/montecarlo/tests/test_packet_source/test_black_body_simple_source/test_bb_mus.npy   \n",
       "146                                                    tardis/transport/montecarlo/tests/test_packet_source/test_black_body_simple_source/test_bb_nus.npy   \n",
       "147                                          tardis/transport/montecarlo/tests/test_packet_source/test_black_body_simple_source_rel/test_bb_attributes.h5   \n",
       "148                                           tardis/transport/montecarlo/tests/test_packet_source/test_black_body_simple_source_rel/test_bb_energies.npy   \n",
       "149                                                tardis/transport/montecarlo/tests/test_packet_source/test_black_body_simple_source_rel/test_bb_mus.npy   \n",
       "150                                                tardis/transport/montecarlo/tests/test_packet_source/test_black_body_simple_source_rel/test_bb_nus.npy   \n",
       "151                                                                 tardis/transport/montecarlo/tests/test_rpacket_tracker/test_boundary_interactions.npy   \n",
       "152                                   tardis/transport/montecarlo/tests/test_weighted_packet_source/test_black_body_weighted_source/test_bb_attributes.h5   \n",
       "153                                    tardis/transport/montecarlo/tests/test_weighted_packet_source/test_black_body_weighted_source/test_bb_energies.npy   \n",
       "154                                         tardis/transport/montecarlo/tests/test_weighted_packet_source/test_black_body_weighted_source/test_bb_mus.npy   \n",
       "155                                         tardis/transport/montecarlo/tests/test_weighted_packet_source/test_black_body_weighted_source/test_bb_nus.npy   \n",
       "156                                                       tardis/visualization/tests/test_plot_util/test_plot_util/test_create_wavelength_mask__real__.h5   \n",
       "157                                                    tardis/visualization/tests/test_plot_util/test_plot_util/test_create_wavelength_mask__virtual__.h5   \n",
       "158                                              tardis/visualization/tools/tests/test_lineid_plotter/test_lineid_plotter__wavelengths0-labels0-top__.png   \n",
       "159                                           tardis/visualization/tools/tests/test_lineid_plotter/test_lineid_plotter__wavelengths1-labels1-inside__.png   \n",
       "160                                            tardis/visualization/tools/tests/test_lineid_plotter/test_lineid_plotter__wavelengths2-labels2-along__.png   \n",
       "161                               tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl0__.h5   \n",
       "162                               tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl1__.h5   \n",
       "163                               tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl2__.h5   \n",
       "164                               tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl3__.h5   \n",
       "165                               tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl4__.h5   \n",
       "166                               tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl5__.h5   \n",
       "167                               tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl6__.h5   \n",
       "168                               tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl7__.h5   \n",
       "169                               tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply0__.h5   \n",
       "170                               tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply1__.h5   \n",
       "171                               tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply2__.h5   \n",
       "172                               tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply3__.h5   \n",
       "173                               tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply4__.h5   \n",
       "174                               tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply5__.h5   \n",
       "175                               tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply6__.h5   \n",
       "176                               tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply7__.h5   \n",
       "177                                      tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_mpl_image__plotter_generate_plot_mpl0__.png   \n",
       "178                                      tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_mpl_image__plotter_generate_plot_mpl1__.png   \n",
       "179                                      tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_mpl_image__plotter_generate_plot_mpl2__.png   \n",
       "180                                      tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_mpl_image__plotter_generate_plot_mpl3__.png   \n",
       "181                                      tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_mpl_image__plotter_generate_plot_mpl4__.png   \n",
       "182                                      tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_mpl_image__plotter_generate_plot_mpl5__.png   \n",
       "183                                      tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_mpl_image__plotter_generate_plot_mpl6__.png   \n",
       "184                                      tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_mpl_image__plotter_generate_plot_mpl7__.png   \n",
       "185                                           tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_parse_species_list___keep_colour__.npy   \n",
       "186                                          tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_parse_species_list___species_list__.npy   \n",
       "187                                        tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_parse_species_list___species_mapped__.npy   \n",
       "188                tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_prepare_plot_data__plotter_prepare_plot_data0-new_bin_edges__.npy   \n",
       "189                  tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_prepare_plot_data__plotter_prepare_plot_data0-plot_colors__.npy   \n",
       "190                    tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_prepare_plot_data__plotter_prepare_plot_data0-plot_data__.npy   \n",
       "191                tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_prepare_plot_data__plotter_prepare_plot_data1-new_bin_edges__.npy   \n",
       "192                  tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_prepare_plot_data__plotter_prepare_plot_data1-plot_colors__.npy   \n",
       "193                    tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_prepare_plot_data__plotter_prepare_plot_data1-plot_data__.npy   \n",
       "194                tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_prepare_plot_data__plotter_prepare_plot_data2-new_bin_edges__.npy   \n",
       "195                  tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_prepare_plot_data__plotter_prepare_plot_data2-plot_colors__.npy   \n",
       "196                    tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_prepare_plot_data__plotter_prepare_plot_data2-plot_data__.npy   \n",
       "197                tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_prepare_plot_data__plotter_prepare_plot_data3-new_bin_edges__.npy   \n",
       "198                  tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_prepare_plot_data__plotter_prepare_plot_data3-plot_colors__.npy   \n",
       "199                    tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_prepare_plot_data__plotter_prepare_plot_data3-plot_data__.npy   \n",
       "200                tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_prepare_plot_data__plotter_prepare_plot_data4-new_bin_edges__.npy   \n",
       "201                  tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_prepare_plot_data__plotter_prepare_plot_data4-plot_colors__.npy   \n",
       "202                    tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_prepare_plot_data__plotter_prepare_plot_data4-plot_data__.npy   \n",
       "203                tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_prepare_plot_data__plotter_prepare_plot_data5-new_bin_edges__.npy   \n",
       "204                  tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_prepare_plot_data__plotter_prepare_plot_data5-plot_colors__.npy   \n",
       "205                    tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_prepare_plot_data__plotter_prepare_plot_data5-plot_data__.npy   \n",
       "206                tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_prepare_plot_data__plotter_prepare_plot_data6-new_bin_edges__.npy   \n",
       "207                  tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_prepare_plot_data__plotter_prepare_plot_data6-plot_colors__.npy   \n",
       "208                    tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_prepare_plot_data__plotter_prepare_plot_data6-plot_data__.npy   \n",
       "209                tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_prepare_plot_data__plotter_prepare_plot_data7-new_bin_edges__.npy   \n",
       "210                  tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_prepare_plot_data__plotter_prepare_plot_data7-plot_colors__.npy   \n",
       "211                    tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_prepare_plot_data__plotter_prepare_plot_data7-plot_data__.npy   \n",
       "212                 tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data0__.h5   \n",
       "213                tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data10__.h5   \n",
       "214                tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data11__.h5   \n",
       "215                tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data12__.h5   \n",
       "216                tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data13__.h5   \n",
       "217                tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data14__.h5   \n",
       "218                tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data15__.h5   \n",
       "219                 tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data1__.h5   \n",
       "220                 tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data2__.h5   \n",
       "221                 tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data3__.h5   \n",
       "222                 tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data4__.h5   \n",
       "223                 tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data5__.h5   \n",
       "224                 tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data6__.h5   \n",
       "225                 tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data7__.h5   \n",
       "226                 tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data8__.h5   \n",
       "227                 tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data9__.h5   \n",
       "228                             tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply0__.h5   \n",
       "229                            tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply10__.h5   \n",
       "230                            tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply11__.h5   \n",
       "231                            tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply12__.h5   \n",
       "232                            tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply13__.h5   \n",
       "233                            tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply14__.h5   \n",
       "234                            tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply15__.h5   \n",
       "235                             tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply1__.h5   \n",
       "236                             tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply2__.h5   \n",
       "237                             tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply3__.h5   \n",
       "238                             tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply4__.h5   \n",
       "239                             tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply5__.h5   \n",
       "240                             tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply6__.h5   \n",
       "241                             tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply7__.h5   \n",
       "242                             tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply8__.h5   \n",
       "243                             tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply9__.h5   \n",
       "244                                    tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_mpl_image__plotter_generate_plot_mpl0__.png   \n",
       "245                                   tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_mpl_image__plotter_generate_plot_mpl10__.png   \n",
       "246                                   tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_mpl_image__plotter_generate_plot_mpl11__.png   \n",
       "247                                   tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_mpl_image__plotter_generate_plot_mpl12__.png   \n",
       "248                                   tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_mpl_image__plotter_generate_plot_mpl13__.png   \n",
       "249                                   tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_mpl_image__plotter_generate_plot_mpl14__.png   \n",
       "250                                   tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_mpl_image__plotter_generate_plot_mpl15__.png   \n",
       "251                                    tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_mpl_image__plotter_generate_plot_mpl1__.png   \n",
       "252                                    tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_mpl_image__plotter_generate_plot_mpl2__.png   \n",
       "253                                    tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_mpl_image__plotter_generate_plot_mpl3__.png   \n",
       "254                                    tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_mpl_image__plotter_generate_plot_mpl4__.png   \n",
       "255                                    tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_mpl_image__plotter_generate_plot_mpl5__.png   \n",
       "256                                    tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_mpl_image__plotter_generate_plot_mpl6__.png   \n",
       "257                                    tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_mpl_image__plotter_generate_plot_mpl7__.png   \n",
       "258                                    tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_mpl_image__plotter_generate_plot_mpl8__.png   \n",
       "259                                    tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_mpl_image__plotter_generate_plot_mpl9__.png   \n",
       "260                                   tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_parse_species_list___full_species_list__.npy   \n",
       "261                                         tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_parse_species_list___keep_colour__.npy   \n",
       "262                                        tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_parse_species_list___species_list__.npy   \n",
       "263                                tardis/workflows/high_energy/tests/test_tardis_he_workflow/test_he_workflow_all_outputs_regression__escape_energy__.h5   \n",
       "264                           tardis/workflows/high_energy/tests/test_tardis_he_workflow/test_he_workflow_all_outputs_regression__escape_energy_cosi__.h5   \n",
       "265                   tardis/workflows/high_energy/tests/test_tardis_he_workflow/test_he_workflow_all_outputs_regression__gamma_ray_deposited_energy__.h5   \n",
       "266                              tardis/workflows/high_energy/tests/test_tardis_he_workflow/test_he_workflow_all_outputs_regression__packets_escaped__.h5   \n",
       "267                              tardis/workflows/high_energy/tests/test_tardis_he_workflow/test_he_workflow_all_outputs_regression__positron_energy__.h5   \n",
       "268                       tardis/workflows/high_energy/tests/test_tardis_he_workflow/test_he_workflow_all_outputs_regression__total_deposited_energy__.h5   \n",
       "269                                                tardis/workflows/tests/test_workflows/test_v_inner_solver_workflow__iterations_mean_optical_depth__.h5   \n",
       "270                                                           tardis/workflows/tests/test_workflows/test_v_inner_solver_workflow__iterations_t_inner__.h5   \n",
       "271                                                             tardis/workflows/tests/test_workflows/test_v_inner_solver_workflow__iterations_t_rad__.h5   \n",
       "272                                                  tardis/workflows/tests/test_workflows/test_v_inner_solver_workflow__iterations_v_inner_boundary__.h5   \n",
       "273                                                                 tardis/workflows/tests/test_workflows/test_v_inner_solver_workflow__iterations_w__.h5   \n",
       "274                                                                                                       test_composition/test_calculate_cell_masses.npy   \n",
       "275                                                                                             test_composition/test_calculate_elemental_cell_masses.npy   \n",
       "276                                                                           test_composition/test_calculate_mass_fraction_at_time__time_explosion0__.h5   \n",
       "277                                                                           test_composition/test_calculate_mass_fraction_at_time__time_explosion1__.h5   \n",
       "278                                                                                                      test_composition/test_elemental_mass_fraction.h5   \n",
       "279                                                                                                     test_composition/test_elemental_number_density.h5   \n",
       "280                                                                                                    test_composition/test_elemental_number_density.npy   \n",
       "281                                                                                              testdata/MESA_STIR_MESA_SNEC/input/profile8.data.iso.dat   \n",
       "282                                                                                                   testdata/MESA_STIR_MESA_SNEC/output/C_init_frac.dat   \n",
       "283                                                                                                        testdata/MESA_STIR_MESA_SNEC/output/E_shell.xg   \n",
       "284                                                                                                            testdata/MESA_STIR_MESA_SNEC/output/H_1.xg   \n",
       "285                                                                                                            testdata/MESA_STIR_MESA_SNEC/output/H_2.xg   \n",
       "286                                                                                                   testdata/MESA_STIR_MESA_SNEC/output/H_init_frac.dat   \n",
       "287                                                                                                           testdata/MESA_STIR_MESA_SNEC/output/He_1.xg   \n",
       "288                                                                                                           testdata/MESA_STIR_MESA_SNEC/output/He_2.xg   \n",
       "289                                                                                                           testdata/MESA_STIR_MESA_SNEC/output/He_3.xg   \n",
       "290                                                                                                  testdata/MESA_STIR_MESA_SNEC/output/He_init_frac.dat   \n",
       "291                                                                                            testdata/MESA_STIR_MESA_SNEC/output/Ni_deposit_function.xg   \n",
       "292                                                                                                  testdata/MESA_STIR_MESA_SNEC/output/Ni_init_frac.dat   \n",
       "293                                                                                           testdata/MESA_STIR_MESA_SNEC/output/Ni_total_luminosity.dat   \n",
       "294                                                                                                   testdata/MESA_STIR_MESA_SNEC/output/O_init_frac.dat   \n",
       "295                                                                                                              testdata/MESA_STIR_MESA_SNEC/output/Q.xg   \n",
       "296                                                                                                         testdata/MESA_STIR_MESA_SNEC/output/T_eff.dat   \n",
       "297                                                                                                  testdata/MESA_STIR_MESA_SNEC/output/conservation.dat   \n",
       "298                                                                                                            testdata/MESA_STIR_MESA_SNEC/output/cs2.xg   \n",
       "299                                                                                            testdata/MESA_STIR_MESA_SNEC/output/delta_mass_initial.dat   \n",
       "300                                                                                                     testdata/MESA_STIR_MESA_SNEC/output/delta_time.xg   \n",
       "301                                                                                               testdata/MESA_STIR_MESA_SNEC/output/density_profile.dat   \n",
       "302                                                                                                            testdata/MESA_STIR_MESA_SNEC/output/eps.xg   \n",
       "303                                                                                             testdata/MESA_STIR_MESA_SNEC/output/free_electron_frac.xg   \n",
       "304                                                                                                testdata/MESA_STIR_MESA_SNEC/output/index_lumshell.dat   \n",
       "305                                                                                                   testdata/MESA_STIR_MESA_SNEC/output/index_photo.dat   \n",
       "306                                                                                                          testdata/MESA_STIR_MESA_SNEC/output/info.dat   \n",
       "307                                                                                                          testdata/MESA_STIR_MESA_SNEC/output/kappa.xg   \n",
       "308                                                                                                    testdata/MESA_STIR_MESA_SNEC/output/kappa_table.xg   \n",
       "309                                                                                                        testdata/MESA_STIR_MESA_SNEC/output/logR_op.xg   \n",
       "310                                                                                                           testdata/MESA_STIR_MESA_SNEC/output/logT.xg   \n",
       "311                                                                                                            testdata/MESA_STIR_MESA_SNEC/output/lum.xg   \n",
       "312                                                                                                  testdata/MESA_STIR_MESA_SNEC/output/lum_observed.dat   \n",
       "313                                                                                                     testdata/MESA_STIR_MESA_SNEC/output/lum_photo.dat   \n",
       "314                                                                                                    testdata/MESA_STIR_MESA_SNEC/output/magnitudes.dat   \n",
       "315                                                                                                           testdata/MESA_STIR_MESA_SNEC/output/mass.xg   \n",
       "316                                                                                                  testdata/MESA_STIR_MESA_SNEC/output/mass_initial.dat   \n",
       "317                                                                                                 testdata/MESA_STIR_MESA_SNEC/output/mass_lumshell.dat   \n",
       "318                                                                                                    testdata/MESA_STIR_MESA_SNEC/output/mass_photo.dat   \n",
       "319                                                                                              testdata/MESA_STIR_MESA_SNEC/output/metallicity_init.dat   \n",
       "320                                                                                             testdata/MESA_STIR_MESA_SNEC/output/opacity_corrupted.dat   \n",
       "321                                                                                                 testdata/MESA_STIR_MESA_SNEC/output/opacity_floor.dat   \n",
       "322                                                                                                          testdata/MESA_STIR_MESA_SNEC/output/p_rad.xg   \n",
       "323                                                                                             testdata/MESA_STIR_MESA_SNEC/output/photosphere_tracer.xg   \n",
       "324                                                                                                          testdata/MESA_STIR_MESA_SNEC/output/press.xg   \n",
       "325                                                                                                 testdata/MESA_STIR_MESA_SNEC/output/press_initial.dat   \n",
       "326                                                                                                   testdata/MESA_STIR_MESA_SNEC/output/rad_initial.dat   \n",
       "327                                                                                                     testdata/MESA_STIR_MESA_SNEC/output/rad_photo.dat   \n",
       "328                                                                                                         testdata/MESA_STIR_MESA_SNEC/output/radius.xg   \n",
       "329                                                                                                            testdata/MESA_STIR_MESA_SNEC/output/rho.xg   \n",
       "330                                                                                                   testdata/MESA_STIR_MESA_SNEC/output/rho_initial.dat   \n",
       "331                                                                                                            testdata/MESA_STIR_MESA_SNEC/output/tau.xg   \n",
       "332                                                                                                           testdata/MESA_STIR_MESA_SNEC/output/temp.xg   \n",
       "333                                                                                                      testdata/MESA_STIR_MESA_SNEC/output/time_diff.xg   \n",
       "334                                                                                                       testdata/MESA_STIR_MESA_SNEC/output/time_exp.xg   \n",
       "335                                                                                                            testdata/MESA_STIR_MESA_SNEC/output/vel.xg   \n",
       "336                                                                                                     testdata/MESA_STIR_MESA_SNEC/output/vel_photo.dat   \n",
       "337                                                                                                testdata/MESA_STIR_MESA_SNEC/output/velshock_index.dat   \n",
       "338                                                                                                             testdata/MESA_STIR_MESA_SNEC/output/ye.xg   \n",
       "\n",
       "    2cbdea-6483ea 77c993-2cbdea  \n",
       "0               •             •  \n",
       "1               •             •  \n",
       "2               •             •  \n",
       "3               •             •  \n",
       "4               •             •  \n",
       "5               •             •  \n",
       "6               •             •  \n",
       "7               •             •  \n",
       "8               •             •  \n",
       "9               •             •  \n",
       "10              •             •  \n",
       "11              •             •  \n",
       "12              •             •  \n",
       "13              •             •  \n",
       "14              •             •  \n",
       "15              •             •  \n",
       "16              •             •  \n",
       "17              •             •  \n",
       "18              •             •  \n",
       "19              •             •  \n",
       "20              •             •  \n",
       "21              •             •  \n",
       "22              •             •  \n",
       "23              •             •  \n",
       "24              •             •  \n",
       "25              •             •  \n",
       "26              •             •  \n",
       "27              •             •  \n",
       "28              •             •  \n",
       "29              •             •  \n",
       "30              M             M  \n",
       "31              M             M  \n",
       "32              M             M  \n",
       "33              M             M  \n",
       "34              •             •  \n",
       "35              M             M  \n",
       "36              M             M  \n",
       "37              M             M  \n",
       "38              •             •  \n",
       "39              M             M  \n",
       "40              M             M  \n",
       "41              M             M  \n",
       "42              M             M  \n",
       "43              M             M  \n",
       "44              M             M  \n",
       "45              M             M  \n",
       "46              M             M  \n",
       "47              M             M  \n",
       "48              M             M  \n",
       "49              M             M  \n",
       "50              M             M  \n",
       "51              M             M  \n",
       "52              M             M  \n",
       "53              M             M  \n",
       "54              M             M  \n",
       "55              M             M  \n",
       "56              M             M  \n",
       "57              M             M  \n",
       "58              M             M  \n",
       "59              •             •  \n",
       "60              •             •  \n",
       "61              •             •  \n",
       "62              •             •  \n",
       "63              •             •  \n",
       "64              M             M  \n",
       "65              •             •  \n",
       "66              •             •  \n",
       "67              •             •  \n",
       "68              •             •  \n",
       "69              •             •  \n",
       "70              •             •  \n",
       "71              •             •  \n",
       "72              •             •  \n",
       "73              •             •  \n",
       "74              •             •  \n",
       "75              •             •  \n",
       "76              •             •  \n",
       "77              •             •  \n",
       "78              •             •  \n",
       "79              •             •  \n",
       "80              •             •  \n",
       "81              •             •  \n",
       "82              •             •  \n",
       "83              •             •  \n",
       "84              •             •  \n",
       "85              •             •  \n",
       "86              •             •  \n",
       "87              •             •  \n",
       "88              •             •  \n",
       "89              •             •  \n",
       "90              •             •  \n",
       "91              •             •  \n",
       "92              •             •  \n",
       "93              •             •  \n",
       "94              •             •  \n",
       "95              •             •  \n",
       "96              •             •  \n",
       "97              •             •  \n",
       "98              •             •  \n",
       "99              •             •  \n",
       "100             •             •  \n",
       "101             •             •  \n",
       "102             •             •  \n",
       "103             •             •  \n",
       "104             •             •  \n",
       "105             •             •  \n",
       "106             M             M  \n",
       "107             •             •  \n",
       "108             M             M  \n",
       "109             M             M  \n",
       "110             M             M  \n",
       "111             M             M  \n",
       "112             M             M  \n",
       "113             M             M  \n",
       "114             M             M  \n",
       "115             M             M  \n",
       "116             M             M  \n",
       "117             M             M  \n",
       "118             •             •  \n",
       "119             •             •  \n",
       "120             •             •  \n",
       "121             •             •  \n",
       "122             M             M  \n",
       "123             M             M  \n",
       "124             •             •  \n",
       "125             •             •  \n",
       "126             •             •  \n",
       "127             •             •  \n",
       "128             M             M  \n",
       "129             M             M  \n",
       "130             M             M  \n",
       "131             M             M  \n",
       "132             •             •  \n",
       "133             •             •  \n",
       "134             •             •  \n",
       "135             •             •  \n",
       "136             •             •  \n",
       "137             •             •  \n",
       "138             •             •  \n",
       "139             •             •  \n",
       "140             M             M  \n",
       "141             M             M  \n",
       "142             M             M  \n",
       "143             M             M  \n",
       "144             •             •  \n",
       "145             •             •  \n",
       "146             •             •  \n",
       "147             M             M  \n",
       "148             •             •  \n",
       "149             •             •  \n",
       "150             •             •  \n",
       "151             •             •  \n",
       "152             M             M  \n",
       "153             •             •  \n",
       "154             •             •  \n",
       "155             •             •  \n",
       "156             M             M  \n",
       "157             M             M  \n",
       "158             •             •  \n",
       "159             •             •  \n",
       "160             •             •  \n",
       "161             M             M  \n",
       "162             M             M  \n",
       "163             M             M  \n",
       "164             M             M  \n",
       "165             M             M  \n",
       "166             M             M  \n",
       "167             M             M  \n",
       "168             M             M  \n",
       "169             M             M  \n",
       "170             M             M  \n",
       "171             M             M  \n",
       "172             M             M  \n",
       "173             M             M  \n",
       "174             M             M  \n",
       "175             M             M  \n",
       "176             M             M  \n",
       "177             •             •  \n",
       "178             •             •  \n",
       "179             •             •  \n",
       "180             •             •  \n",
       "181             •             •  \n",
       "182             •             •  \n",
       "183             •             •  \n",
       "184             •             •  \n",
       "185             •             •  \n",
       "186             •             •  \n",
       "187             •             •  \n",
       "188             •             •  \n",
       "189             •             •  \n",
       "190             •             •  \n",
       "191             •             •  \n",
       "192             •             •  \n",
       "193             •             •  \n",
       "194             •             •  \n",
       "195             •             •  \n",
       "196             •             •  \n",
       "197             •             •  \n",
       "198             •             •  \n",
       "199             •             •  \n",
       "200             •             •  \n",
       "201             •             •  \n",
       "202             •             •  \n",
       "203             •             •  \n",
       "204             •             •  \n",
       "205             •             •  \n",
       "206             •             •  \n",
       "207             •             •  \n",
       "208             •             •  \n",
       "209             •             •  \n",
       "210             •             •  \n",
       "211             •             •  \n",
       "212             M             M  \n",
       "213             M             M  \n",
       "214             M             M  \n",
       "215             M             M  \n",
       "216             M             M  \n",
       "217             M             M  \n",
       "218             M             M  \n",
       "219             M             M  \n",
       "220             M             M  \n",
       "221             M             M  \n",
       "222             M             M  \n",
       "223             M             M  \n",
       "224             M             M  \n",
       "225             M             M  \n",
       "226             M             M  \n",
       "227             M             M  \n",
       "228             M             M  \n",
       "229             M             M  \n",
       "230             M             M  \n",
       "231             M             M  \n",
       "232             M             M  \n",
       "233             M             M  \n",
       "234             M             M  \n",
       "235             M             M  \n",
       "236             M             M  \n",
       "237             M             M  \n",
       "238             M             M  \n",
       "239             M             M  \n",
       "240             M             M  \n",
       "241             M             M  \n",
       "242             M             M  \n",
       "243             M             M  \n",
       "244             •             •  \n",
       "245             •             •  \n",
       "246             •             •  \n",
       "247             •             •  \n",
       "248             •             •  \n",
       "249             •             •  \n",
       "250             •             •  \n",
       "251             •             •  \n",
       "252             •             •  \n",
       "253             •             •  \n",
       "254             •             •  \n",
       "255             •             •  \n",
       "256             •             •  \n",
       "257             •             •  \n",
       "258             •             •  \n",
       "259             •             •  \n",
       "260             •             •  \n",
       "261             •             •  \n",
       "262             •             •  \n",
       "263             •             •  \n",
       "264             •             •  \n",
       "265             •             •  \n",
       "266             •             •  \n",
       "267             •             •  \n",
       "268             •             •  \n",
       "269             •             •  \n",
       "270             •             •  \n",
       "271             •             •  \n",
       "272             •             •  \n",
       "273             •             •  \n",
       "274             •             •  \n",
       "275             •             •  \n",
       "276             •             •  \n",
       "277             •             •  \n",
       "278             •             •  \n",
       "279             •             •  \n",
       "280             •             •  \n",
       "281             •             •  \n",
       "282             •             •  \n",
       "283             •             •  \n",
       "284             •             •  \n",
       "285             •             •  \n",
       "286             •             •  \n",
       "287             •             •  \n",
       "288             •             •  \n",
       "289             •             •  \n",
       "290             •             •  \n",
       "291             •             •  \n",
       "292             •             •  \n",
       "293             •             •  \n",
       "294             •             •  \n",
       "295             •             •  \n",
       "296             •             •  \n",
       "297             •             •  \n",
       "298             •             •  \n",
       "299             •             •  \n",
       "300             •             •  \n",
       "301             •             •  \n",
       "302             •             •  \n",
       "303             •             •  \n",
       "304             •             •  \n",
       "305             •             •  \n",
       "306             •             •  \n",
       "307             •             •  \n",
       "308             •             •  \n",
       "309             •             •  \n",
       "310             •             •  \n",
       "311             •             •  \n",
       "312             •             •  \n",
       "313             •             •  \n",
       "314             •             •  \n",
       "315             •             •  \n",
       "316             •             •  \n",
       "317             •             •  \n",
       "318             •             •  \n",
       "319             •             •  \n",
       "320             •             •  \n",
       "321             •             •  \n",
       "322             •             •  \n",
       "323             •             •  \n",
       "324             •             •  \n",
       "325             •             •  \n",
       "326             •             •  \n",
       "327             •             •  \n",
       "328             •             •  \n",
       "329             •             •  \n",
       "330             •             •  \n",
       "331             •             •  \n",
       "332             •             •  \n",
       "333             •             •  \n",
       "334             •             •  \n",
       "335             •             •  \n",
       "336             •             •  \n",
       "337             •             •  \n",
       "338             •             •  "
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "matrix"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Cleanup: Reset False Commits\n",
    "**Warning**: This resets history, proceed with caution.\n",
    "\n",
    "If you want to clean up false commits generated after running pytest, use `git reset --hard upstream/master`"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "miniforge3-tardis-master",
   "language": "python",
   "name": "conda-env-miniforge3-tardis-master-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.13.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
